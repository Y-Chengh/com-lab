
I0:
P'-> .P ,#
P-> .proc id ; M0 begin D S end ,#
P-> .S ,#
S-> .S M S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ; ,#
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,#
S1-> .while M B do M S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then M S1 N else M S2 ,#
S2-> .if B then M S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I1:
P'-> P. ,#

I2:
P-> proc .id ; M0 begin D S end ,#

I3:
P-> proc id .; M0 begin D S end ,#

I4:
P-> proc id ; .M0 begin D S end ,#
M0-> . ,begin

I5:
P-> proc id ; M0 .begin D S end ,#

I6:
P-> proc id ; M0 begin .D S end ,#
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,begin
D-> .D D ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,begin
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,call
D-> .proc id ; N1 begin D S end ,id
D-> .proc id ; N1 begin D S end ,while
D-> .proc id ; N1 begin D S end ,begin
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,proc
D-> .proc id ; N1 begin D S end ,record
D-> .proc id ; N1 begin D S end ,integer
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I7:
P-> proc id ; M0 begin D .S end ,#
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
D-> .D D ,call
D-> .T id ; ,call
D-> .proc id ; N1 begin D S end ,call
D-> .D D ,id
D-> .T id ; ,id
D-> .proc id ; N1 begin D S end ,id
D-> .D D ,while
D-> .T id ; ,while
D-> .proc id ; N1 begin D S end ,while
D-> .D D ,begin
D-> .T id ; ,begin
D-> .proc id ; N1 begin D S end ,begin
D-> .D D ,if
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .T id ; ,proc
D-> .proc id ; N1 begin D S end ,proc
D-> .D D ,record
D-> .T id ; ,record
D-> .proc id ; N1 begin D S end ,record
D-> .D D ,integer
D-> .T id ; ,integer
D-> .proc id ; N1 begin D S end ,integer
D-> .D D ,real
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,real
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
T-> .X C ,id
T-> .record N2 D end ,id
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I8:
P-> proc id ; M0 begin D S .end ,#
S-> S .M S ,end
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I9:
P-> proc id ; M0 begin D S end. ,#

I10:
S-> S M .S ,end
S-> S M .S ,call
S-> S M .S ,id
S-> S M .S ,while
S-> S M .S ,begin
S-> S M .S ,if
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ; ,call
S-> .S M S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ; ,id
S-> .S M S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ; ,while
S-> .S M S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ; ,begin
S-> .S M S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I11:
S-> S M S. ,end
S-> S M S. ,call
S-> S M S. ,id
S-> S M S. ,while
S-> S M S. ,begin
S-> S M S. ,if
S-> S .M S ,end
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I12:
S-> id .= E ; ,end
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I13:
S-> id = .E ; ,end
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I14:
S-> id = E .; ,end
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I15:
S-> id = E ;. ,end
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I16:
E-> E + .E1 ,;
E-> E + .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I17:
E-> E + E1. ,;
E-> E + E1. ,+
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I18:
E1-> E1 * .E2 ,;
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I19:
E1-> E1 * E2. ,;
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I20:
E2-> ( .E ) ,;
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I21:
E2-> ( E .) ,;
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I22:
E2-> ( E ). ,;
E2-> ( E ). ,+
E2-> ( E ). ,*

I23:
E-> E + .E1 ,)
E-> E + .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I24:
E-> E + E1. ,)
E-> E + E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I25:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I26:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I27:
E2-> ( .E ) ,)
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I28:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I29:
E2-> ( E ). ,)
E2-> ( E ). ,+
E2-> ( E ). ,*

I30:
E-> E1. ,)
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I31:
E1-> E2. ,)
E1-> E2. ,+
E1-> E2. ,*

I32:
E2-> - .E ,)
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I33:
E2-> - E. ,)
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I34:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I35:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I36:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I37:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I38:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I39:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I40:
E-> E + .E1 ,]
E-> E + .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I41:
E-> E + E1. ,]
E-> E + E1. ,+
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I42:
E1-> E1 * .E2 ,]
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I43:
E1-> E1 * E2. ,]
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I44:
E2-> ( .E ) ,]
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I45:
E2-> ( E .) ,]
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I46:
E2-> ( E ). ,]
E2-> ( E ). ,+
E2-> ( E ). ,*

I47:
E2-> num. ,)
E2-> num. ,+
E2-> num. ,*

I48:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I49:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I50:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I51:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I52:
E-> E1. ,]
E-> E1. ,+
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I53:
E1-> E2. ,]
E1-> E2. ,+
E1-> E2. ,*

I54:
E2-> - .E ,]
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I55:
E2-> - E. ,]
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,]
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I56:
E-> E + .E1 ,]
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I57:
E-> E + E1. ,]
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I58:
E2-> id. ,]
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,]
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I59:
L-> id [ .E ] ,]
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I60:
L-> id [ E .] ,]
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I61:
L-> id [ E ]. ,]
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I62:
E2-> num. ,]
E2-> num. ,+
E2-> num. ,*

I63:
E2-> L. ,]
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,]
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I64:
L-> L [ .E ] ,]
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I65:
L-> L [ E .] ,]
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I66:
L-> L [ E ]. ,]
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I67:
E-> E1. ,]
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I68:
E-> E1. ,)
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I69:
E2-> - .E ,;
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I70:
E2-> - E. ,;
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,;
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I71:
E-> E + .E1 ,;
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I72:
E-> E + E1. ,;
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I73:
E1-> E2. ,;
E1-> E2. ,+
E1-> E2. ,*

I74:
E2-> id. ,;
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,;
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I75:
L-> id [ .E ] ,;
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I76:
L-> id [ E .] ,;
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I77:
L-> id [ E ]. ,;
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I78:
E2-> num. ,;
E2-> num. ,+
E2-> num. ,*

I79:
E2-> L. ,;
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,;
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I80:
L-> L [ .E ] ,;
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I81:
L-> L [ E .] ,;
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I82:
L-> L [ E ]. ,;
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I83:
E-> E1. ,;
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I84:
E-> E1. ,;
E-> E1. ,+
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I85:
L-> id [ .E ] ,=
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I86:
L-> id [ E .] ,=
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I87:
L-> id [ E ]. ,=
L-> id [ E ]. ,[

I88:
S-> L .= E ; ,end
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I89:
S-> L = .E ; ,end
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I90:
S-> L = E .; ,end
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I91:
S-> L = E ;. ,end
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I92:
L-> L [ .E ] ,=
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I93:
L-> L [ E .] ,=
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I94:
L-> L [ E ]. ,=
L-> L [ E ]. ,[

I95:
S-> S1. ,end
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I96:
S-> S2. ,end
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I97:
S-> call .id ( EL ) ; ,end
S-> call .id ( EL ) ; ,call
S-> call .id ( EL ) ; ,id
S-> call .id ( EL ) ; ,while
S-> call .id ( EL ) ; ,begin
S-> call .id ( EL ) ; ,if

I98:
S-> call id .( EL ) ; ,end
S-> call id .( EL ) ; ,call
S-> call id .( EL ) ; ,id
S-> call id .( EL ) ; ,while
S-> call id .( EL ) ; ,begin
S-> call id .( EL ) ; ,if

I99:
S-> call id ( .EL ) ; ,end
S-> call id ( .EL ) ; ,call
S-> call id ( .EL ) ; ,id
S-> call id ( .EL ) ; ,while
S-> call id ( .EL ) ; ,begin
S-> call id ( .EL ) ; ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I100:
S-> call id ( EL .) ; ,end
S-> call id ( EL .) ; ,call
S-> call id ( EL .) ; ,id
S-> call id ( EL .) ; ,while
S-> call id ( EL .) ; ,begin
S-> call id ( EL .) ; ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I101:
S-> call id ( EL ) .; ,end
S-> call id ( EL ) .; ,call
S-> call id ( EL ) .; ,id
S-> call id ( EL ) .; ,while
S-> call id ( EL ) .; ,begin
S-> call id ( EL ) .; ,if

I102:
S-> call id ( EL ) ;. ,end
S-> call id ( EL ) ;. ,call
S-> call id ( EL ) ;. ,id
S-> call id ( EL ) ;. ,while
S-> call id ( EL ) ;. ,begin
S-> call id ( EL ) ;. ,if

I103:
EL-> EL , .E ,)
EL-> EL , .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I104:
EL-> EL , E. ,)
EL-> EL , E. ,,
E-> E .+ E1 ,)
E-> E .+ E1 ,,
E-> E .+ E1 ,+

I105:
E-> E + .E1 ,)
E-> E + .E1 ,,
E-> E + .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I106:
E-> E + E1. ,)
E-> E + E1. ,,
E-> E + E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I107:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,,
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I108:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,,
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I109:
E2-> ( .E ) ,)
E2-> ( .E ) ,,
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I110:
E2-> ( E .) ,)
E2-> ( E .) ,,
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I111:
E2-> ( E ). ,)
E2-> ( E ). ,,
E2-> ( E ). ,+
E2-> ( E ). ,*

I112:
E2-> - .E ,)
E2-> - .E ,,
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I113:
E2-> - E. ,)
E2-> - E. ,,
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,,
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I114:
E-> E + .E1 ,)
E-> E + .E1 ,,
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I115:
E-> E + E1. ,)
E-> E + E1. ,,
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I116:
E1-> E2. ,)
E1-> E2. ,,
E1-> E2. ,+
E1-> E2. ,*

I117:
E2-> id. ,)
E2-> id. ,,
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,,
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I118:
L-> id [ .E ] ,)
L-> id [ .E ] ,,
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I119:
L-> id [ E .] ,)
L-> id [ E .] ,,
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I120:
L-> id [ E ]. ,)
L-> id [ E ]. ,,
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I121:
E2-> num. ,)
E2-> num. ,,
E2-> num. ,+
E2-> num. ,*

I122:
E2-> L. ,)
E2-> L. ,,
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,,
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I123:
L-> L [ .E ] ,)
L-> L [ .E ] ,,
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I124:
L-> L [ E .] ,)
L-> L [ E .] ,,
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I125:
L-> L [ E ]. ,)
L-> L [ E ]. ,,
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I126:
E-> E1. ,)
E-> E1. ,,
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I127:
E-> E1. ,)
E-> E1. ,,
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I128:
EL-> E. ,)
EL-> E. ,,
E-> E .+ E1 ,)
E-> E .+ E1 ,,
E-> E .+ E1 ,+

I129:
S1-> if .B then M S1 N else M S1 ,end
S2-> if .B then M S1 N else M S2 ,end
S2-> if .B then M S0 ,end
S1-> if .B then M S1 N else M S1 ,call
S2-> if .B then M S1 N else M S2 ,call
S2-> if .B then M S0 ,call
S1-> if .B then M S1 N else M S1 ,id
S2-> if .B then M S1 N else M S2 ,id
S2-> if .B then M S0 ,id
S1-> if .B then M S1 N else M S1 ,while
S2-> if .B then M S1 N else M S2 ,while
S2-> if .B then M S0 ,while
S1-> if .B then M S1 N else M S1 ,begin
S2-> if .B then M S1 N else M S2 ,begin
S2-> if .B then M S0 ,begin
S1-> if .B then M S1 N else M S1 ,if
S2-> if .B then M S1 N else M S2 ,if
S2-> if .B then M S0 ,if
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I130:
S1-> if B .then M S1 N else M S1 ,end
S2-> if B .then M S1 N else M S2 ,end
S2-> if B .then M S0 ,end
S1-> if B .then M S1 N else M S1 ,call
S2-> if B .then M S1 N else M S2 ,call
S2-> if B .then M S0 ,call
S1-> if B .then M S1 N else M S1 ,id
S2-> if B .then M S1 N else M S2 ,id
S2-> if B .then M S0 ,id
S1-> if B .then M S1 N else M S1 ,while
S2-> if B .then M S1 N else M S2 ,while
S2-> if B .then M S0 ,while
S1-> if B .then M S1 N else M S1 ,begin
S2-> if B .then M S1 N else M S2 ,begin
S2-> if B .then M S0 ,begin
S1-> if B .then M S1 N else M S1 ,if
S2-> if B .then M S1 N else M S2 ,if
S2-> if B .then M S0 ,if
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I131:
S1-> if B then .M S1 N else M S1 ,end
S2-> if B then .M S1 N else M S2 ,end
S2-> if B then .M S0 ,end
S1-> if B then .M S1 N else M S1 ,call
S2-> if B then .M S1 N else M S2 ,call
S2-> if B then .M S0 ,call
S1-> if B then .M S1 N else M S1 ,id
S2-> if B then .M S1 N else M S2 ,id
S2-> if B then .M S0 ,id
S1-> if B then .M S1 N else M S1 ,while
S2-> if B then .M S1 N else M S2 ,while
S2-> if B then .M S0 ,while
S1-> if B then .M S1 N else M S1 ,begin
S2-> if B then .M S1 N else M S2 ,begin
S2-> if B then .M S0 ,begin
S1-> if B then .M S1 N else M S1 ,if
S2-> if B then .M S1 N else M S2 ,if
S2-> if B then .M S0 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I132:
S1-> if B then M .S1 N else M S1 ,end
S2-> if B then M .S1 N else M S2 ,end
S2-> if B then M .S0 ,end
S1-> if B then M .S1 N else M S1 ,call
S2-> if B then M .S1 N else M S2 ,call
S2-> if B then M .S0 ,call
S1-> if B then M .S1 N else M S1 ,id
S2-> if B then M .S1 N else M S2 ,id
S2-> if B then M .S0 ,id
S1-> if B then M .S1 N else M S1 ,while
S2-> if B then M .S1 N else M S2 ,while
S2-> if B then M .S0 ,while
S1-> if B then M .S1 N else M S1 ,begin
S2-> if B then M .S1 N else M S2 ,begin
S2-> if B then M .S0 ,begin
S1-> if B then M .S1 N else M S1 ,if
S2-> if B then M .S1 N else M S2 ,if
S2-> if B then M .S0 ,if
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,end
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I133:
S1-> if B then M S1 .N else M S1 ,end
S2-> if B then M S1 .N else M S2 ,end
S1-> if B then M S1 .N else M S1 ,call
S2-> if B then M S1 .N else M S2 ,call
S1-> if B then M S1 .N else M S1 ,id
S2-> if B then M S1 .N else M S2 ,id
S1-> if B then M S1 .N else M S1 ,while
S2-> if B then M S1 .N else M S2 ,while
S1-> if B then M S1 .N else M S1 ,begin
S2-> if B then M S1 .N else M S2 ,begin
S1-> if B then M S1 .N else M S1 ,if
S2-> if B then M S1 .N else M S2 ,if
N-> . ,else

I134:
S1-> if B then M S1 N .else M S1 ,end
S2-> if B then M S1 N .else M S2 ,end
S1-> if B then M S1 N .else M S1 ,call
S2-> if B then M S1 N .else M S2 ,call
S1-> if B then M S1 N .else M S1 ,id
S2-> if B then M S1 N .else M S2 ,id
S1-> if B then M S1 N .else M S1 ,while
S2-> if B then M S1 N .else M S2 ,while
S1-> if B then M S1 N .else M S1 ,begin
S2-> if B then M S1 N .else M S2 ,begin
S1-> if B then M S1 N .else M S1 ,if
S2-> if B then M S1 N .else M S2 ,if

I135:
S1-> if B then M S1 N else .M S1 ,end
S2-> if B then M S1 N else .M S2 ,end
S1-> if B then M S1 N else .M S1 ,call
S2-> if B then M S1 N else .M S2 ,call
S1-> if B then M S1 N else .M S1 ,id
S2-> if B then M S1 N else .M S2 ,id
S1-> if B then M S1 N else .M S1 ,while
S2-> if B then M S1 N else .M S2 ,while
S1-> if B then M S1 N else .M S1 ,begin
S2-> if B then M S1 N else .M S2 ,begin
S1-> if B then M S1 N else .M S1 ,if
S2-> if B then M S1 N else .M S2 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I136:
S1-> if B then M S1 N else M .S1 ,end
S2-> if B then M S1 N else M .S2 ,end
S1-> if B then M S1 N else M .S1 ,call
S2-> if B then M S1 N else M .S2 ,call
S1-> if B then M S1 N else M .S1 ,id
S2-> if B then M S1 N else M .S2 ,id
S1-> if B then M S1 N else M .S1 ,while
S2-> if B then M S1 N else M .S2 ,while
S1-> if B then M S1 N else M .S1 ,begin
S2-> if B then M S1 N else M .S2 ,begin
S1-> if B then M S1 N else M .S1 ,if
S2-> if B then M S1 N else M .S2 ,if
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if

I137:
S1-> if B then M S1 N else M S1. ,end
S1-> if B then M S1 N else M S1. ,call
S1-> if B then M S1 N else M S1. ,id
S1-> if B then M S1 N else M S1. ,while
S1-> if B then M S1 N else M S1. ,begin
S1-> if B then M S1 N else M S1. ,if

I138:
S2-> if B then M S1 N else M S2. ,end
S2-> if B then M S1 N else M S2. ,call
S2-> if B then M S1 N else M S2. ,id
S2-> if B then M S1 N else M S2. ,while
S2-> if B then M S1 N else M S2. ,begin
S2-> if B then M S1 N else M S2. ,if

I139:
S1-> while .M B do M S0 ,end
S1-> while .M B do M S0 ,call
S1-> while .M B do M S0 ,id
S1-> while .M B do M S0 ,while
S1-> while .M B do M S0 ,begin
S1-> while .M B do M S0 ,if
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I140:
S1-> while M .B do M S0 ,end
S1-> while M .B do M S0 ,call
S1-> while M .B do M S0 ,id
S1-> while M .B do M S0 ,while
S1-> while M .B do M S0 ,begin
S1-> while M .B do M S0 ,if
B-> .B or M B1 ,do
B-> .B1 ,do
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I141:
S1-> while M B .do M S0 ,end
S1-> while M B .do M S0 ,call
S1-> while M B .do M S0 ,id
S1-> while M B .do M S0 ,while
S1-> while M B .do M S0 ,begin
S1-> while M B .do M S0 ,if
B-> B .or M B1 ,do
B-> B .or M B1 ,or

I142:
S1-> while M B do .M S0 ,end
S1-> while M B do .M S0 ,call
S1-> while M B do .M S0 ,id
S1-> while M B do .M S0 ,while
S1-> while M B do .M S0 ,begin
S1-> while M B do .M S0 ,if
M-> . ,begin

I143:
S1-> while M B do M .S0 ,end
S1-> while M B do M .S0 ,call
S1-> while M B do M .S0 ,id
S1-> while M B do M .S0 ,while
S1-> while M B do M .S0 ,begin
S1-> while M B do M .S0 ,if
S0-> .begin S3 end ,end
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I144:
S1-> while M B do M S0. ,end
S1-> while M B do M S0. ,call
S1-> while M B do M S0. ,id
S1-> while M B do M S0. ,while
S1-> while M B do M S0. ,begin
S1-> while M B do M S0. ,if

I145:
S0-> begin .S3 end ,end
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I146:
S0-> begin S3 .end ,end
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I147:
S0-> begin S3 end. ,end
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I148:
S3-> S3 ; .M S ,end
S3-> S3 ; .M S ,;
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I149:
S3-> S3 ; M .S ,end
S3-> S3 ; M .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I150:
S3-> S3 ; M S. ,end
S3-> S3 ; M S. ,;
S-> S .M S ,end
S-> S .M S ,;
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I151:
S-> S M .S ,end
S-> S M .S ,;
S-> S M .S ,call
S-> S M .S ,id
S-> S M .S ,while
S-> S M .S ,begin
S-> S M .S ,if
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ; ,call
S-> .S M S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ; ,id
S-> .S M S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ; ,while
S-> .S M S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ; ,begin
S-> .S M S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I152:
S-> S M S. ,end
S-> S M S. ,;
S-> S M S. ,call
S-> S M S. ,id
S-> S M S. ,while
S-> S M S. ,begin
S-> S M S. ,if
S-> S .M S ,end
S-> S .M S ,;
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I153:
S-> id .= E ; ,end
S-> id .= E ; ,;
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I154:
S-> id = .E ; ,end
S-> id = .E ; ,;
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I155:
S-> id = E .; ,end
S-> id = E .; ,;
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I156:
S-> id = E ;. ,end
S-> id = E ;. ,;
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I157:
S-> L .= E ; ,end
S-> L .= E ; ,;
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I158:
S-> L = .E ; ,end
S-> L = .E ; ,;
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I159:
S-> L = E .; ,end
S-> L = E .; ,;
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I160:
S-> L = E ;. ,end
S-> L = E ;. ,;
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I161:
S-> S1. ,end
S-> S1. ,;
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I162:
S-> S2. ,end
S-> S2. ,;
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I163:
S-> call .id ( EL ) ; ,end
S-> call .id ( EL ) ; ,;
S-> call .id ( EL ) ; ,call
S-> call .id ( EL ) ; ,id
S-> call .id ( EL ) ; ,while
S-> call .id ( EL ) ; ,begin
S-> call .id ( EL ) ; ,if

I164:
S-> call id .( EL ) ; ,end
S-> call id .( EL ) ; ,;
S-> call id .( EL ) ; ,call
S-> call id .( EL ) ; ,id
S-> call id .( EL ) ; ,while
S-> call id .( EL ) ; ,begin
S-> call id .( EL ) ; ,if

I165:
S-> call id ( .EL ) ; ,end
S-> call id ( .EL ) ; ,;
S-> call id ( .EL ) ; ,call
S-> call id ( .EL ) ; ,id
S-> call id ( .EL ) ; ,while
S-> call id ( .EL ) ; ,begin
S-> call id ( .EL ) ; ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I166:
S-> call id ( EL .) ; ,end
S-> call id ( EL .) ; ,;
S-> call id ( EL .) ; ,call
S-> call id ( EL .) ; ,id
S-> call id ( EL .) ; ,while
S-> call id ( EL .) ; ,begin
S-> call id ( EL .) ; ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I167:
S-> call id ( EL ) .; ,end
S-> call id ( EL ) .; ,;
S-> call id ( EL ) .; ,call
S-> call id ( EL ) .; ,id
S-> call id ( EL ) .; ,while
S-> call id ( EL ) .; ,begin
S-> call id ( EL ) .; ,if

I168:
S-> call id ( EL ) ;. ,end
S-> call id ( EL ) ;. ,;
S-> call id ( EL ) ;. ,call
S-> call id ( EL ) ;. ,id
S-> call id ( EL ) ;. ,while
S-> call id ( EL ) ;. ,begin
S-> call id ( EL ) ;. ,if

I169:
S1-> if .B then M S1 N else M S1 ,end
S2-> if .B then M S1 N else M S2 ,end
S2-> if .B then M S0 ,end
S1-> if .B then M S1 N else M S1 ,;
S2-> if .B then M S1 N else M S2 ,;
S2-> if .B then M S0 ,;
S1-> if .B then M S1 N else M S1 ,call
S2-> if .B then M S1 N else M S2 ,call
S2-> if .B then M S0 ,call
S1-> if .B then M S1 N else M S1 ,id
S2-> if .B then M S1 N else M S2 ,id
S2-> if .B then M S0 ,id
S1-> if .B then M S1 N else M S1 ,while
S2-> if .B then M S1 N else M S2 ,while
S2-> if .B then M S0 ,while
S1-> if .B then M S1 N else M S1 ,begin
S2-> if .B then M S1 N else M S2 ,begin
S2-> if .B then M S0 ,begin
S1-> if .B then M S1 N else M S1 ,if
S2-> if .B then M S1 N else M S2 ,if
S2-> if .B then M S0 ,if
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I170:
S1-> if B .then M S1 N else M S1 ,end
S2-> if B .then M S1 N else M S2 ,end
S2-> if B .then M S0 ,end
S1-> if B .then M S1 N else M S1 ,;
S2-> if B .then M S1 N else M S2 ,;
S2-> if B .then M S0 ,;
S1-> if B .then M S1 N else M S1 ,call
S2-> if B .then M S1 N else M S2 ,call
S2-> if B .then M S0 ,call
S1-> if B .then M S1 N else M S1 ,id
S2-> if B .then M S1 N else M S2 ,id
S2-> if B .then M S0 ,id
S1-> if B .then M S1 N else M S1 ,while
S2-> if B .then M S1 N else M S2 ,while
S2-> if B .then M S0 ,while
S1-> if B .then M S1 N else M S1 ,begin
S2-> if B .then M S1 N else M S2 ,begin
S2-> if B .then M S0 ,begin
S1-> if B .then M S1 N else M S1 ,if
S2-> if B .then M S1 N else M S2 ,if
S2-> if B .then M S0 ,if
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I171:
S1-> if B then .M S1 N else M S1 ,end
S2-> if B then .M S1 N else M S2 ,end
S2-> if B then .M S0 ,end
S1-> if B then .M S1 N else M S1 ,;
S2-> if B then .M S1 N else M S2 ,;
S2-> if B then .M S0 ,;
S1-> if B then .M S1 N else M S1 ,call
S2-> if B then .M S1 N else M S2 ,call
S2-> if B then .M S0 ,call
S1-> if B then .M S1 N else M S1 ,id
S2-> if B then .M S1 N else M S2 ,id
S2-> if B then .M S0 ,id
S1-> if B then .M S1 N else M S1 ,while
S2-> if B then .M S1 N else M S2 ,while
S2-> if B then .M S0 ,while
S1-> if B then .M S1 N else M S1 ,begin
S2-> if B then .M S1 N else M S2 ,begin
S2-> if B then .M S0 ,begin
S1-> if B then .M S1 N else M S1 ,if
S2-> if B then .M S1 N else M S2 ,if
S2-> if B then .M S0 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I172:
S1-> if B then M .S1 N else M S1 ,end
S2-> if B then M .S1 N else M S2 ,end
S2-> if B then M .S0 ,end
S1-> if B then M .S1 N else M S1 ,;
S2-> if B then M .S1 N else M S2 ,;
S2-> if B then M .S0 ,;
S1-> if B then M .S1 N else M S1 ,call
S2-> if B then M .S1 N else M S2 ,call
S2-> if B then M .S0 ,call
S1-> if B then M .S1 N else M S1 ,id
S2-> if B then M .S1 N else M S2 ,id
S2-> if B then M .S0 ,id
S1-> if B then M .S1 N else M S1 ,while
S2-> if B then M .S1 N else M S2 ,while
S2-> if B then M .S0 ,while
S1-> if B then M .S1 N else M S1 ,begin
S2-> if B then M .S1 N else M S2 ,begin
S2-> if B then M .S0 ,begin
S1-> if B then M .S1 N else M S1 ,if
S2-> if B then M .S1 N else M S2 ,if
S2-> if B then M .S0 ,if
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,end
S0-> .begin S3 end ,;
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I173:
S1-> if B then M S1 .N else M S1 ,end
S2-> if B then M S1 .N else M S2 ,end
S1-> if B then M S1 .N else M S1 ,;
S2-> if B then M S1 .N else M S2 ,;
S1-> if B then M S1 .N else M S1 ,call
S2-> if B then M S1 .N else M S2 ,call
S1-> if B then M S1 .N else M S1 ,id
S2-> if B then M S1 .N else M S2 ,id
S1-> if B then M S1 .N else M S1 ,while
S2-> if B then M S1 .N else M S2 ,while
S1-> if B then M S1 .N else M S1 ,begin
S2-> if B then M S1 .N else M S2 ,begin
S1-> if B then M S1 .N else M S1 ,if
S2-> if B then M S1 .N else M S2 ,if
N-> . ,else

I174:
S1-> if B then M S1 N .else M S1 ,end
S2-> if B then M S1 N .else M S2 ,end
S1-> if B then M S1 N .else M S1 ,;
S2-> if B then M S1 N .else M S2 ,;
S1-> if B then M S1 N .else M S1 ,call
S2-> if B then M S1 N .else M S2 ,call
S1-> if B then M S1 N .else M S1 ,id
S2-> if B then M S1 N .else M S2 ,id
S1-> if B then M S1 N .else M S1 ,while
S2-> if B then M S1 N .else M S2 ,while
S1-> if B then M S1 N .else M S1 ,begin
S2-> if B then M S1 N .else M S2 ,begin
S1-> if B then M S1 N .else M S1 ,if
S2-> if B then M S1 N .else M S2 ,if

I175:
S1-> if B then M S1 N else .M S1 ,end
S2-> if B then M S1 N else .M S2 ,end
S1-> if B then M S1 N else .M S1 ,;
S2-> if B then M S1 N else .M S2 ,;
S1-> if B then M S1 N else .M S1 ,call
S2-> if B then M S1 N else .M S2 ,call
S1-> if B then M S1 N else .M S1 ,id
S2-> if B then M S1 N else .M S2 ,id
S1-> if B then M S1 N else .M S1 ,while
S2-> if B then M S1 N else .M S2 ,while
S1-> if B then M S1 N else .M S1 ,begin
S2-> if B then M S1 N else .M S2 ,begin
S1-> if B then M S1 N else .M S1 ,if
S2-> if B then M S1 N else .M S2 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I176:
S1-> if B then M S1 N else M .S1 ,end
S2-> if B then M S1 N else M .S2 ,end
S1-> if B then M S1 N else M .S1 ,;
S2-> if B then M S1 N else M .S2 ,;
S1-> if B then M S1 N else M .S1 ,call
S2-> if B then M S1 N else M .S2 ,call
S1-> if B then M S1 N else M .S1 ,id
S2-> if B then M S1 N else M .S2 ,id
S1-> if B then M S1 N else M .S1 ,while
S2-> if B then M S1 N else M .S2 ,while
S1-> if B then M S1 N else M .S1 ,begin
S2-> if B then M S1 N else M .S2 ,begin
S1-> if B then M S1 N else M .S1 ,if
S2-> if B then M S1 N else M .S2 ,if
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if

I177:
S1-> if B then M S1 N else M S1. ,end
S1-> if B then M S1 N else M S1. ,;
S1-> if B then M S1 N else M S1. ,call
S1-> if B then M S1 N else M S1. ,id
S1-> if B then M S1 N else M S1. ,while
S1-> if B then M S1 N else M S1. ,begin
S1-> if B then M S1 N else M S1. ,if

I178:
S2-> if B then M S1 N else M S2. ,end
S2-> if B then M S1 N else M S2. ,;
S2-> if B then M S1 N else M S2. ,call
S2-> if B then M S1 N else M S2. ,id
S2-> if B then M S1 N else M S2. ,while
S2-> if B then M S1 N else M S2. ,begin
S2-> if B then M S1 N else M S2. ,if

I179:
S1-> while .M B do M S0 ,end
S1-> while .M B do M S0 ,;
S1-> while .M B do M S0 ,call
S1-> while .M B do M S0 ,id
S1-> while .M B do M S0 ,while
S1-> while .M B do M S0 ,begin
S1-> while .M B do M S0 ,if
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I180:
S1-> while M .B do M S0 ,end
S1-> while M .B do M S0 ,;
S1-> while M .B do M S0 ,call
S1-> while M .B do M S0 ,id
S1-> while M .B do M S0 ,while
S1-> while M .B do M S0 ,begin
S1-> while M .B do M S0 ,if
B-> .B or M B1 ,do
B-> .B1 ,do
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I181:
S1-> while M B .do M S0 ,end
S1-> while M B .do M S0 ,;
S1-> while M B .do M S0 ,call
S1-> while M B .do M S0 ,id
S1-> while M B .do M S0 ,while
S1-> while M B .do M S0 ,begin
S1-> while M B .do M S0 ,if
B-> B .or M B1 ,do
B-> B .or M B1 ,or

I182:
S1-> while M B do .M S0 ,end
S1-> while M B do .M S0 ,;
S1-> while M B do .M S0 ,call
S1-> while M B do .M S0 ,id
S1-> while M B do .M S0 ,while
S1-> while M B do .M S0 ,begin
S1-> while M B do .M S0 ,if
M-> . ,begin

I183:
S1-> while M B do M .S0 ,end
S1-> while M B do M .S0 ,;
S1-> while M B do M .S0 ,call
S1-> while M B do M .S0 ,id
S1-> while M B do M .S0 ,while
S1-> while M B do M .S0 ,begin
S1-> while M B do M .S0 ,if
S0-> .begin S3 end ,end
S0-> .begin S3 end ,;
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I184:
S1-> while M B do M S0. ,end
S1-> while M B do M S0. ,;
S1-> while M B do M S0. ,call
S1-> while M B do M S0. ,id
S1-> while M B do M S0. ,while
S1-> while M B do M S0. ,begin
S1-> while M B do M S0. ,if

I185:
S0-> begin .S3 end ,end
S0-> begin .S3 end ,;
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I186:
S0-> begin S3 .end ,end
S0-> begin S3 .end ,;
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I187:
S0-> begin S3 end. ,end
S0-> begin S3 end. ,;
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I188:
S3-> S. ,end
S3-> S. ,;
S-> S .M S ,end
S-> S .M S ,;
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I189:
S1-> if .B then M S1 N else M S1 ,end
S2-> if .B then M S1 N else M S2 ,end
S2-> if .B then M S0 ,end
S1-> if .B then M S1 N else M S1 ,;
S2-> if .B then M S1 N else M S2 ,;
S2-> if .B then M S0 ,;
S1-> if .B then M S1 N else M S1 ,call
S1-> if .B then M S1 N else M S1 ,id
S1-> if .B then M S1 N else M S1 ,while
S1-> if .B then M S1 N else M S1 ,begin
S1-> if .B then M S1 N else M S1 ,if
S2-> if .B then M S1 N else M S2 ,call
S2-> if .B then M S0 ,call
S2-> if .B then M S1 N else M S2 ,id
S2-> if .B then M S0 ,id
S2-> if .B then M S1 N else M S2 ,while
S2-> if .B then M S0 ,while
S2-> if .B then M S1 N else M S2 ,begin
S2-> if .B then M S0 ,begin
S2-> if .B then M S1 N else M S2 ,if
S2-> if .B then M S0 ,if
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I190:
S1-> if B .then M S1 N else M S1 ,end
S2-> if B .then M S1 N else M S2 ,end
S2-> if B .then M S0 ,end
S1-> if B .then M S1 N else M S1 ,;
S2-> if B .then M S1 N else M S2 ,;
S2-> if B .then M S0 ,;
S1-> if B .then M S1 N else M S1 ,call
S1-> if B .then M S1 N else M S1 ,id
S1-> if B .then M S1 N else M S1 ,while
S1-> if B .then M S1 N else M S1 ,begin
S1-> if B .then M S1 N else M S1 ,if
S2-> if B .then M S1 N else M S2 ,call
S2-> if B .then M S0 ,call
S2-> if B .then M S1 N else M S2 ,id
S2-> if B .then M S0 ,id
S2-> if B .then M S1 N else M S2 ,while
S2-> if B .then M S0 ,while
S2-> if B .then M S1 N else M S2 ,begin
S2-> if B .then M S0 ,begin
S2-> if B .then M S1 N else M S2 ,if
S2-> if B .then M S0 ,if
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I191:
S1-> if B then .M S1 N else M S1 ,end
S2-> if B then .M S1 N else M S2 ,end
S2-> if B then .M S0 ,end
S1-> if B then .M S1 N else M S1 ,;
S2-> if B then .M S1 N else M S2 ,;
S2-> if B then .M S0 ,;
S1-> if B then .M S1 N else M S1 ,call
S1-> if B then .M S1 N else M S1 ,id
S1-> if B then .M S1 N else M S1 ,while
S1-> if B then .M S1 N else M S1 ,begin
S1-> if B then .M S1 N else M S1 ,if
S2-> if B then .M S1 N else M S2 ,call
S2-> if B then .M S0 ,call
S2-> if B then .M S1 N else M S2 ,id
S2-> if B then .M S0 ,id
S2-> if B then .M S1 N else M S2 ,while
S2-> if B then .M S0 ,while
S2-> if B then .M S1 N else M S2 ,begin
S2-> if B then .M S0 ,begin
S2-> if B then .M S1 N else M S2 ,if
S2-> if B then .M S0 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I192:
S1-> if B then M .S1 N else M S1 ,end
S2-> if B then M .S1 N else M S2 ,end
S2-> if B then M .S0 ,end
S1-> if B then M .S1 N else M S1 ,;
S2-> if B then M .S1 N else M S2 ,;
S2-> if B then M .S0 ,;
S1-> if B then M .S1 N else M S1 ,call
S1-> if B then M .S1 N else M S1 ,id
S1-> if B then M .S1 N else M S1 ,while
S1-> if B then M .S1 N else M S1 ,begin
S1-> if B then M .S1 N else M S1 ,if
S2-> if B then M .S1 N else M S2 ,call
S2-> if B then M .S0 ,call
S2-> if B then M .S1 N else M S2 ,id
S2-> if B then M .S0 ,id
S2-> if B then M .S1 N else M S2 ,while
S2-> if B then M .S0 ,while
S2-> if B then M .S1 N else M S2 ,begin
S2-> if B then M .S0 ,begin
S2-> if B then M .S1 N else M S2 ,if
S2-> if B then M .S0 ,if
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,end
S0-> .begin S3 end ,;
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I193:
S1-> if B then M S1 .N else M S1 ,end
S2-> if B then M S1 .N else M S2 ,end
S1-> if B then M S1 .N else M S1 ,;
S2-> if B then M S1 .N else M S2 ,;
S1-> if B then M S1 .N else M S1 ,call
S1-> if B then M S1 .N else M S1 ,id
S1-> if B then M S1 .N else M S1 ,while
S1-> if B then M S1 .N else M S1 ,begin
S1-> if B then M S1 .N else M S1 ,if
S2-> if B then M S1 .N else M S2 ,call
S2-> if B then M S1 .N else M S2 ,id
S2-> if B then M S1 .N else M S2 ,while
S2-> if B then M S1 .N else M S2 ,begin
S2-> if B then M S1 .N else M S2 ,if
N-> . ,else

I194:
S1-> if B then M S1 N .else M S1 ,end
S2-> if B then M S1 N .else M S2 ,end
S1-> if B then M S1 N .else M S1 ,;
S2-> if B then M S1 N .else M S2 ,;
S1-> if B then M S1 N .else M S1 ,call
S1-> if B then M S1 N .else M S1 ,id
S1-> if B then M S1 N .else M S1 ,while
S1-> if B then M S1 N .else M S1 ,begin
S1-> if B then M S1 N .else M S1 ,if
S2-> if B then M S1 N .else M S2 ,call
S2-> if B then M S1 N .else M S2 ,id
S2-> if B then M S1 N .else M S2 ,while
S2-> if B then M S1 N .else M S2 ,begin
S2-> if B then M S1 N .else M S2 ,if

I195:
S1-> if B then M S1 N else .M S1 ,end
S2-> if B then M S1 N else .M S2 ,end
S1-> if B then M S1 N else .M S1 ,;
S2-> if B then M S1 N else .M S2 ,;
S1-> if B then M S1 N else .M S1 ,call
S1-> if B then M S1 N else .M S1 ,id
S1-> if B then M S1 N else .M S1 ,while
S1-> if B then M S1 N else .M S1 ,begin
S1-> if B then M S1 N else .M S1 ,if
S2-> if B then M S1 N else .M S2 ,call
S2-> if B then M S1 N else .M S2 ,id
S2-> if B then M S1 N else .M S2 ,while
S2-> if B then M S1 N else .M S2 ,begin
S2-> if B then M S1 N else .M S2 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I196:
S1-> if B then M S1 N else M .S1 ,end
S2-> if B then M S1 N else M .S2 ,end
S1-> if B then M S1 N else M .S1 ,;
S2-> if B then M S1 N else M .S2 ,;
S1-> if B then M S1 N else M .S1 ,call
S1-> if B then M S1 N else M .S1 ,id
S1-> if B then M S1 N else M .S1 ,while
S1-> if B then M S1 N else M .S1 ,begin
S1-> if B then M S1 N else M .S1 ,if
S2-> if B then M S1 N else M .S2 ,call
S2-> if B then M S1 N else M .S2 ,id
S2-> if B then M S1 N else M .S2 ,while
S2-> if B then M S1 N else M .S2 ,begin
S2-> if B then M S1 N else M .S2 ,if
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if

I197:
S1-> begin .S3 end ,end
S2-> begin .S3 end ,end
S1-> begin .S3 end ,;
S2-> begin .S3 end ,;
S1-> begin .S3 end ,call
S1-> begin .S3 end ,id
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,id
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I198:
S1-> begin S3 .end ,end
S2-> begin S3 .end ,end
S1-> begin S3 .end ,;
S2-> begin S3 .end ,;
S1-> begin S3 .end ,call
S1-> begin S3 .end ,id
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,id
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I199:
S1-> begin S3 end. ,end
S2-> begin S3 end. ,end
S1-> begin S3 end. ,;
S2-> begin S3 end. ,;
S1-> begin S3 end. ,call
S1-> begin S3 end. ,id
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,id
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if

I200:
S2-> if B then M S0. ,end
S2-> if B then M S0. ,;
S2-> if B then M S0. ,call
S2-> if B then M S0. ,id
S2-> if B then M S0. ,while
S2-> if B then M S0. ,begin
S2-> if B then M S0. ,if

I201:
S1-> if .B then M S1 N else M S1 ,else
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I202:
S1-> if B .then M S1 N else M S1 ,else
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I203:
S1-> if B then .M S1 N else M S1 ,else
M-> . ,while
M-> . ,begin
M-> . ,if

I204:
S1-> if B then M .S1 N else M S1 ,else
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else

I205:
S1-> if B then M S1 .N else M S1 ,else
N-> . ,else

I206:
S1-> if B then M S1 N .else M S1 ,else

I207:
S1-> if B then M S1 N else .M S1 ,else
M-> . ,while
M-> . ,begin
M-> . ,if

I208:
S1-> if B then M S1 N else M .S1 ,else
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else

I209:
S1-> if B then M S1 N else M S1. ,else

I210:
S1-> while .M B do M S0 ,else
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I211:
S1-> while M .B do M S0 ,else
B-> .B or M B1 ,do
B-> .B1 ,do
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I212:
S1-> while M B .do M S0 ,else
B-> B .or M B1 ,do
B-> B .or M B1 ,or

I213:
S1-> while M B do .M S0 ,else
M-> . ,begin

I214:
S1-> while M B do M .S0 ,else
S0-> .begin S3 end ,else

I215:
S1-> while M B do M S0. ,else

I216:
S0-> begin .S3 end ,else
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I217:
S0-> begin S3 .end ,else
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I218:
S0-> begin S3 end. ,else

I219:
B-> B or .M B1 ,do
B-> B or .M B1 ,or
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I220:
B-> B or M .B1 ,do
B-> B or M .B1 ,or
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I221:
B-> B or M B1. ,do
B-> B or M B1. ,or
B1-> B1 .and M B2 ,do
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I222:
B1-> B1 and .M B2 ,do
B1-> B1 and .M B2 ,or
B1-> B1 and .M B2 ,and
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I223:
B1-> B1 and M .B2 ,do
B1-> B1 and M .B2 ,or
B1-> B1 and M .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I224:
B1-> B1 and M B2. ,do
B1-> B1 and M B2. ,or
B1-> B1 and M B2. ,and

I225:
B2-> not .B ,do
B2-> not .B ,or
B2-> not .B ,and
B-> .B or M B1 ,do
B-> .B1 ,do
B-> .B or M B1 ,or
B-> .B1 ,or
B-> .B or M B1 ,and
B-> .B1 ,and
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I226:
B2-> not B. ,do
B2-> not B. ,or
B2-> not B. ,and
B-> B .or M B1 ,do
B-> B .or M B1 ,or
B-> B .or M B1 ,and

I227:
B-> B or .M B1 ,do
B-> B or .M B1 ,or
B-> B or .M B1 ,and
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I228:
B-> B or M .B1 ,do
B-> B or M .B1 ,or
B-> B or M .B1 ,and
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I229:
B-> B or M B1. ,do
B-> B or M B1. ,or
B-> B or M B1. ,and
B1-> B1 .and M B2 ,do
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I230:
B1-> B2. ,do
B1-> B2. ,or
B1-> B2. ,and

I231:
B2-> ( .B ) ,do
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
B-> .B or M B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I232:
B2-> ( B .) ,do
B2-> ( B .) ,or
B2-> ( B .) ,and
B-> B .or M B1 ,)
B-> B .or M B1 ,or

I233:
B2-> ( B ). ,do
B2-> ( B ). ,or
B2-> ( B ). ,and

I234:
B-> B or .M B1 ,)
B-> B or .M B1 ,or
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I235:
B-> B or M .B1 ,)
B-> B or M .B1 ,or
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I236:
B-> B or M B1. ,)
B-> B or M B1. ,or
B1-> B1 .and M B2 ,)
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I237:
B1-> B1 and .M B2 ,)
B1-> B1 and .M B2 ,or
B1-> B1 and .M B2 ,and
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I238:
B1-> B1 and M .B2 ,)
B1-> B1 and M .B2 ,or
B1-> B1 and M .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I239:
B1-> B1 and M B2. ,)
B1-> B1 and M B2. ,or
B1-> B1 and M B2. ,and

I240:
B2-> not .B ,)
B2-> not .B ,or
B2-> not .B ,and
B-> .B or M B1 ,)
B-> .B1 ,)
B-> .B or M B1 ,or
B-> .B1 ,or
B-> .B or M B1 ,and
B-> .B1 ,and
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I241:
B2-> not B. ,)
B2-> not B. ,or
B2-> not B. ,and
B-> B .or M B1 ,)
B-> B .or M B1 ,or
B-> B .or M B1 ,and

I242:
B-> B or .M B1 ,)
B-> B or .M B1 ,or
B-> B or .M B1 ,and
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I243:
B-> B or M .B1 ,)
B-> B or M .B1 ,or
B-> B or M .B1 ,and
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I244:
B-> B or M B1. ,)
B-> B or M B1. ,or
B-> B or M B1. ,and
B1-> B1 .and M B2 ,)
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I245:
B1-> B2. ,)
B1-> B2. ,or
B1-> B2. ,and

I246:
B2-> ( .B ) ,)
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
B-> .B or M B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I247:
B2-> ( B .) ,)
B2-> ( B .) ,or
B2-> ( B .) ,and
B-> B .or M B1 ,)
B-> B .or M B1 ,or

I248:
B2-> ( B ). ,)
B2-> ( B ). ,or
B2-> ( B ). ,and

I249:
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+
B2-> E .R E ,)
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I250:
E2-> ( E ). ,==
E2-> ( E ). ,<=
E2-> ( E ). ,!=
E2-> ( E ). ,<
E2-> ( E ). ,>
E2-> ( E ). ,>=
E2-> ( E ). ,+
E2-> ( E ). ,*

I251:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I252:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,*

I253:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,==
E1-> E1 * .E2 ,<=
E1-> E1 * .E2 ,!=
E1-> E1 * .E2 ,<
E1-> E1 * .E2 ,>
E1-> E1 * .E2 ,>=
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I254:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,+
E1-> E1 * E2. ,==
E1-> E1 * E2. ,<=
E1-> E1 * E2. ,!=
E1-> E1 * E2. ,<
E1-> E1 * E2. ,>
E1-> E1 * E2. ,>=
E1-> E1 * E2. ,*

I255:
E2-> ( .E ) ,)
E2-> ( .E ) ,+
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I256:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I257:
E2-> ( E ). ,)
E2-> ( E ). ,+
E2-> ( E ). ,==
E2-> ( E ). ,<=
E2-> ( E ). ,!=
E2-> ( E ). ,<
E2-> ( E ). ,>
E2-> ( E ). ,>=
E2-> ( E ). ,*

I258:
E2-> - .E ,)
E2-> - .E ,+
E2-> - .E ,==
E2-> - .E ,<=
E2-> - .E ,!=
E2-> - .E ,<
E2-> - .E ,>
E2-> - .E ,>=
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,==
E-> .E1 ,==
E-> .E + E1 ,<=
E-> .E1 ,<=
E-> .E + E1 ,!=
E-> .E1 ,!=
E-> .E + E1 ,<
E-> .E1 ,<
E-> .E + E1 ,>
E-> .E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,>=
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I259:
E2-> - E. ,)
E2-> - E. ,+
E2-> - E. ,==
E2-> - E. ,<=
E2-> - E. ,!=
E2-> - E. ,<
E2-> - E. ,>
E2-> - E. ,>=
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,*

I260:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I261:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,*

I262:
E1-> E2. ,)
E1-> E2. ,+
E1-> E2. ,==
E1-> E2. ,<=
E1-> E2. ,!=
E1-> E2. ,<
E1-> E2. ,>
E1-> E2. ,>=
E1-> E2. ,*

I263:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I264:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I265:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I266:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I267:
E2-> num. ,)
E2-> num. ,+
E2-> num. ,==
E2-> num. ,<=
E2-> num. ,!=
E2-> num. ,<
E2-> num. ,>
E2-> num. ,>=
E2-> num. ,*

I268:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I269:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I270:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I271:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I272:
E-> E1. ,)
E-> E1. ,+
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,*

I273:
B2-> E R .E ,)
B2-> E R .E ,or
B2-> E R .E ,and
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I274:
B2-> E R E. ,)
B2-> E R E. ,or
B2-> E R E. ,and
E-> E .+ E1 ,)
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+

I275:
E-> E + .E1 ,)
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I276:
E-> E + E1. ,)
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I277:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,or
E1-> E1 * .E2 ,and
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I278:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,or
E1-> E1 * E2. ,and
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I279:
E2-> ( .E ) ,)
E2-> ( .E ) ,or
E2-> ( .E ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I280:
E2-> ( E .) ,)
E2-> ( E .) ,or
E2-> ( E .) ,and
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I281:
E2-> ( E ). ,)
E2-> ( E ). ,or
E2-> ( E ). ,and
E2-> ( E ). ,+
E2-> ( E ). ,*

I282:
E2-> - .E ,)
E2-> - .E ,or
E2-> - .E ,and
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I283:
E2-> - E. ,)
E2-> - E. ,or
E2-> - E. ,and
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I284:
E-> E + .E1 ,)
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I285:
E-> E + E1. ,)
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I286:
E1-> E2. ,)
E1-> E2. ,or
E1-> E2. ,and
E1-> E2. ,+
E1-> E2. ,*

I287:
E2-> id. ,)
E2-> id. ,or
E2-> id. ,and
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I288:
L-> id [ .E ] ,)
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I289:
L-> id [ E .] ,)
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I290:
L-> id [ E ]. ,)
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I291:
E2-> num. ,)
E2-> num. ,or
E2-> num. ,and
E2-> num. ,+
E2-> num. ,*

I292:
E2-> L. ,)
E2-> L. ,or
E2-> L. ,and
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I293:
L-> L [ .E ] ,)
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I294:
L-> L [ E .] ,)
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I295:
L-> L [ E ]. ,)
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I296:
E-> E1. ,)
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I297:
E-> E1. ,)
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I298:
R-> <. ,num
R-> <. ,(
R-> <. ,id
R-> <. ,-

I299:
R-> <=. ,num
R-> <=. ,(
R-> <=. ,id
R-> <=. ,-

I300:
R-> ==. ,num
R-> ==. ,(
R-> ==. ,id
R-> ==. ,-

I301:
R-> !=. ,num
R-> !=. ,(
R-> !=. ,id
R-> !=. ,-

I302:
R-> >. ,num
R-> >. ,(
R-> >. ,id
R-> >. ,-

I303:
R-> >=. ,num
R-> >=. ,(
R-> >=. ,id
R-> >=. ,-

I304:
B-> B1. ,)
B-> B1. ,or
B1-> B1 .and M B2 ,)
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I305:
E-> E1. ,)
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=

I306:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E1-> E1 * .E2 ,==
E1-> E1 * .E2 ,<=
E1-> E1 * .E2 ,!=
E1-> E1 * .E2 ,<
E1-> E1 * .E2 ,>
E1-> E1 * .E2 ,>=
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I307:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*
E1-> E1 * E2. ,==
E1-> E1 * E2. ,<=
E1-> E1 * E2. ,!=
E1-> E1 * E2. ,<
E1-> E1 * E2. ,>
E1-> E1 * E2. ,>=

I308:
E2-> ( .E ) ,)
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I309:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,*
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I310:
E2-> ( E ). ,)
E2-> ( E ). ,+
E2-> ( E ). ,*
E2-> ( E ). ,==
E2-> ( E ). ,<=
E2-> ( E ). ,!=
E2-> ( E ). ,<
E2-> ( E ). ,>
E2-> ( E ). ,>=

I311:
E2-> - .E ,)
E2-> - .E ,+
E2-> - .E ,*
E2-> - .E ,==
E2-> - .E ,<=
E2-> - .E ,!=
E2-> - .E ,<
E2-> - .E ,>
E2-> - .E ,>=
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E-> .E + E1 ,==
E-> .E1 ,==
E-> .E + E1 ,<=
E-> .E1 ,<=
E-> .E + E1 ,!=
E-> .E1 ,!=
E-> .E + E1 ,<
E-> .E1 ,<
E-> .E + E1 ,>
E-> .E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,>=
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I312:
E2-> - E. ,)
E2-> - E. ,+
E2-> - E. ,*
E2-> - E. ,==
E2-> - E. ,<=
E2-> - E. ,!=
E2-> - E. ,<
E2-> - E. ,>
E2-> - E. ,>=
E-> E .+ E1 ,)
E-> E .+ E1 ,+
E-> E .+ E1 ,*
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=

I313:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,*
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I314:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,*
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=

I315:
E1-> E2. ,)
E1-> E2. ,+
E1-> E2. ,*
E1-> E2. ,==
E1-> E2. ,<=
E1-> E2. ,!=
E1-> E2. ,<
E1-> E2. ,>
E1-> E2. ,>=

I316:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,*
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,[

I317:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I318:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I319:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,[

I320:
E2-> num. ,)
E2-> num. ,+
E2-> num. ,*
E2-> num. ,==
E2-> num. ,<=
E2-> num. ,!=
E2-> num. ,<
E2-> num. ,>
E2-> num. ,>=

I321:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,*
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,[

I322:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I323:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I324:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,[

I325:
E-> E1. ,)
E-> E1. ,+
E-> E1. ,*
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=

I326:
B2-> ( .B ) ,)
E2-> ( .E ) ,)
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
B-> .B or M B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I327:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,*
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E-> E .+ E1 ,)
E-> E .+ E1 ,+
B2-> E .R E ,)
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I328:
B2-> true. ,)
B2-> true. ,or
B2-> true. ,and

I329:
B2-> false. ,)
B2-> false. ,or
B2-> false. ,and

I330:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=

I331:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I332:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I333:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=

I334:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=

I335:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I336:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I337:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=

I338:
B2-> E .R E ,)
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I339:
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E-> E + .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I340:
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E-> E + E1. ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I341:
E1-> E1 * .E2 ,==
E1-> E1 * .E2 ,<=
E1-> E1 * .E2 ,!=
E1-> E1 * .E2 ,<
E1-> E1 * .E2 ,>
E1-> E1 * .E2 ,>=
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I342:
E1-> E1 * E2. ,==
E1-> E1 * E2. ,<=
E1-> E1 * E2. ,!=
E1-> E1 * E2. ,<
E1-> E1 * E2. ,>
E1-> E1 * E2. ,>=
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I343:
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I344:
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I345:
E2-> - .E ,==
E2-> - .E ,<=
E2-> - .E ,!=
E2-> - .E ,<
E2-> - .E ,>
E2-> - .E ,>=
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,==
E-> .E1 ,==
E-> .E + E1 ,<=
E-> .E1 ,<=
E-> .E + E1 ,!=
E-> .E1 ,!=
E-> .E + E1 ,<
E-> .E1 ,<
E-> .E + E1 ,>
E-> .E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I346:
E2-> - E. ,==
E2-> - E. ,<=
E2-> - E. ,!=
E2-> - E. ,<
E2-> - E. ,>
E2-> - E. ,>=
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I347:
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I348:
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I349:
E1-> E2. ,==
E1-> E2. ,<=
E1-> E2. ,!=
E1-> E2. ,<
E1-> E2. ,>
E1-> E2. ,>=
E1-> E2. ,+
E1-> E2. ,*

I350:
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I351:
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I352:
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I353:
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I354:
E2-> num. ,==
E2-> num. ,<=
E2-> num. ,!=
E2-> num. ,<
E2-> num. ,>
E2-> num. ,>=
E2-> num. ,+
E2-> num. ,*

I355:
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I356:
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I357:
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I358:
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I359:
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I360:
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E-> E1. ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I361:
B-> B1. ,)
B-> B1. ,or
B-> B1. ,and
B1-> B1 .and M B2 ,)
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I362:
B2-> E .R E ,do
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I363:
B2-> E R .E ,do
B2-> E R .E ,or
B2-> E R .E ,and
E-> .E + E1 ,do
E-> .E1 ,do
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I364:
B2-> E R E. ,do
B2-> E R E. ,or
B2-> E R E. ,and
E-> E .+ E1 ,do
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+

I365:
E-> E + .E1 ,do
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I366:
E-> E + E1. ,do
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I367:
E1-> E1 * .E2 ,do
E1-> E1 * .E2 ,or
E1-> E1 * .E2 ,and
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I368:
E1-> E1 * E2. ,do
E1-> E1 * E2. ,or
E1-> E1 * E2. ,and
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I369:
E2-> ( .E ) ,do
E2-> ( .E ) ,or
E2-> ( .E ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I370:
E2-> ( E .) ,do
E2-> ( E .) ,or
E2-> ( E .) ,and
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I371:
E2-> ( E ). ,do
E2-> ( E ). ,or
E2-> ( E ). ,and
E2-> ( E ). ,+
E2-> ( E ). ,*

I372:
E2-> - .E ,do
E2-> - .E ,or
E2-> - .E ,and
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,do
E-> .E1 ,do
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I373:
E2-> - E. ,do
E2-> - E. ,or
E2-> - E. ,and
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,do
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I374:
E-> E + .E1 ,do
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I375:
E-> E + E1. ,do
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I376:
E1-> E2. ,do
E1-> E2. ,or
E1-> E2. ,and
E1-> E2. ,+
E1-> E2. ,*

I377:
E2-> id. ,do
E2-> id. ,or
E2-> id. ,and
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,do
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I378:
L-> id [ .E ] ,do
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I379:
L-> id [ E .] ,do
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I380:
L-> id [ E ]. ,do
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I381:
E2-> num. ,do
E2-> num. ,or
E2-> num. ,and
E2-> num. ,+
E2-> num. ,*

I382:
E2-> L. ,do
E2-> L. ,or
E2-> L. ,and
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,do
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I383:
L-> L [ .E ] ,do
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I384:
L-> L [ E .] ,do
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I385:
L-> L [ E ]. ,do
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I386:
E-> E1. ,do
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I387:
E-> E1. ,do
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I388:
B2-> true. ,do
B2-> true. ,or
B2-> true. ,and

I389:
B2-> false. ,do
B2-> false. ,or
B2-> false. ,and

I390:
B-> B1. ,do
B-> B1. ,or
B-> B1. ,and
B1-> B1 .and M B2 ,do
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I391:
B-> B1. ,do
B-> B1. ,or
B1-> B1 .and M B2 ,do
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I392:
S1-> begin .S3 end ,else
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I393:
S1-> begin S3 .end ,else
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I394:
S1-> begin S3 end. ,else

I395:
B-> B or .M B1 ,then
B-> B or .M B1 ,or
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I396:
B-> B or M .B1 ,then
B-> B or M .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I397:
B-> B or M B1. ,then
B-> B or M B1. ,or
B1-> B1 .and M B2 ,then
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I398:
B1-> B1 and .M B2 ,then
B1-> B1 and .M B2 ,or
B1-> B1 and .M B2 ,and
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I399:
B1-> B1 and M .B2 ,then
B1-> B1 and M .B2 ,or
B1-> B1 and M .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I400:
B1-> B1 and M B2. ,then
B1-> B1 and M B2. ,or
B1-> B1 and M B2. ,and

I401:
B2-> not .B ,then
B2-> not .B ,or
B2-> not .B ,and
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B-> .B or M B1 ,and
B-> .B1 ,and
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I402:
B2-> not B. ,then
B2-> not B. ,or
B2-> not B. ,and
B-> B .or M B1 ,then
B-> B .or M B1 ,or
B-> B .or M B1 ,and

I403:
B-> B or .M B1 ,then
B-> B or .M B1 ,or
B-> B or .M B1 ,and
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I404:
B-> B or M .B1 ,then
B-> B or M .B1 ,or
B-> B or M .B1 ,and
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I405:
B-> B or M B1. ,then
B-> B or M B1. ,or
B-> B or M B1. ,and
B1-> B1 .and M B2 ,then
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I406:
B1-> B2. ,then
B1-> B2. ,or
B1-> B2. ,and

I407:
B2-> ( .B ) ,then
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
B-> .B or M B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I408:
B2-> ( B .) ,then
B2-> ( B .) ,or
B2-> ( B .) ,and
B-> B .or M B1 ,)
B-> B .or M B1 ,or

I409:
B2-> ( B ). ,then
B2-> ( B ). ,or
B2-> ( B ). ,and

I410:
B2-> E .R E ,then
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I411:
B2-> E R .E ,then
B2-> E R .E ,or
B2-> E R .E ,and
E-> .E + E1 ,then
E-> .E1 ,then
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I412:
B2-> E R E. ,then
B2-> E R E. ,or
B2-> E R E. ,and
E-> E .+ E1 ,then
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+

I413:
E-> E + .E1 ,then
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I414:
E-> E + E1. ,then
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I415:
E1-> E1 * .E2 ,then
E1-> E1 * .E2 ,or
E1-> E1 * .E2 ,and
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I416:
E1-> E1 * E2. ,then
E1-> E1 * E2. ,or
E1-> E1 * E2. ,and
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I417:
E2-> ( .E ) ,then
E2-> ( .E ) ,or
E2-> ( .E ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I418:
E2-> ( E .) ,then
E2-> ( E .) ,or
E2-> ( E .) ,and
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I419:
E2-> ( E ). ,then
E2-> ( E ). ,or
E2-> ( E ). ,and
E2-> ( E ). ,+
E2-> ( E ). ,*

I420:
E2-> - .E ,then
E2-> - .E ,or
E2-> - .E ,and
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,then
E-> .E1 ,then
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I421:
E2-> - E. ,then
E2-> - E. ,or
E2-> - E. ,and
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,then
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I422:
E-> E + .E1 ,then
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I423:
E-> E + E1. ,then
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I424:
E1-> E2. ,then
E1-> E2. ,or
E1-> E2. ,and
E1-> E2. ,+
E1-> E2. ,*

I425:
E2-> id. ,then
E2-> id. ,or
E2-> id. ,and
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,then
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I426:
L-> id [ .E ] ,then
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I427:
L-> id [ E .] ,then
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I428:
L-> id [ E ]. ,then
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I429:
E2-> num. ,then
E2-> num. ,or
E2-> num. ,and
E2-> num. ,+
E2-> num. ,*

I430:
E2-> L. ,then
E2-> L. ,or
E2-> L. ,and
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,then
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I431:
L-> L [ .E ] ,then
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I432:
L-> L [ E .] ,then
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I433:
L-> L [ E ]. ,then
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I434:
E-> E1. ,then
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I435:
E-> E1. ,then
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I436:
B2-> true. ,then
B2-> true. ,or
B2-> true. ,and

I437:
B2-> false. ,then
B2-> false. ,or
B2-> false. ,and

I438:
B-> B1. ,then
B-> B1. ,or
B-> B1. ,and
B1-> B1 .and M B2 ,then
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I439:
B-> B1. ,then
B-> B1. ,or
B1-> B1 .and M B2 ,then
B1-> B1 .and M B2 ,or
B1-> B1 .and M B2 ,and

I440:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,end
S0-> begin .S3 end ,;
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I441:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,end
S0-> begin S3 .end ,;
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I442:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,end
S0-> begin S3 end. ,;
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I443:
S1-> begin .S3 end ,end
S2-> begin .S3 end ,end
S1-> begin .S3 end ,;
S2-> begin .S3 end ,;
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I444:
S1-> begin S3 .end ,end
S2-> begin S3 .end ,end
S1-> begin S3 .end ,;
S2-> begin S3 .end ,;
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I445:
S1-> begin S3 end. ,end
S2-> begin S3 end. ,end
S1-> begin S3 end. ,;
S2-> begin S3 end. ,;
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I446:
S1-> begin .S3 end ,end
S2-> begin .S3 end ,end
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I447:
S1-> begin S3 .end ,end
S2-> begin S3 .end ,end
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I448:
S1-> begin S3 end. ,end
S2-> begin S3 end. ,end
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I449:
S2-> if B then M S0. ,end
S2-> if B then M S0. ,call
S2-> if B then M S0. ,id
S2-> if B then M S0. ,while
S2-> if B then M S0. ,begin
S2-> if B then M S0. ,if

I450:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,end
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I451:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,end
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I452:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,end
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I453:
D-> D D. ,call
D-> D D. ,id
D-> D D. ,while
D-> D D. ,begin
D-> D D. ,if
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,call
D-> .T id ; ,call
D-> .proc id ; N1 begin D S end ,call
D-> .D D ,id
D-> .T id ; ,id
D-> .proc id ; N1 begin D S end ,id
D-> .D D ,while
D-> .T id ; ,while
D-> .proc id ; N1 begin D S end ,while
D-> .D D ,begin
D-> .T id ; ,begin
D-> .proc id ; N1 begin D S end ,begin
D-> .D D ,if
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .T id ; ,proc
D-> .proc id ; N1 begin D S end ,proc
D-> .D D ,record
D-> .T id ; ,record
D-> .proc id ; N1 begin D S end ,record
D-> .D D ,integer
D-> .T id ; ,integer
D-> .proc id ; N1 begin D S end ,integer
D-> .D D ,real
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I454:
D-> T .id ; ,call
D-> T .id ; ,id
D-> T .id ; ,while
D-> T .id ; ,begin
D-> T .id ; ,if
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I455:
D-> T id .; ,call
D-> T id .; ,id
D-> T id .; ,while
D-> T id .; ,begin
D-> T id .; ,if
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I456:
D-> T id ;. ,call
D-> T id ;. ,id
D-> T id ;. ,while
D-> T id ;. ,begin
D-> T id ;. ,if
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I457:
D-> proc .id ; N1 begin D S end ,call
D-> proc .id ; N1 begin D S end ,id
D-> proc .id ; N1 begin D S end ,while
D-> proc .id ; N1 begin D S end ,begin
D-> proc .id ; N1 begin D S end ,if
D-> proc .id ; N1 begin D S end ,proc
D-> proc .id ; N1 begin D S end ,record
D-> proc .id ; N1 begin D S end ,integer
D-> proc .id ; N1 begin D S end ,real

I458:
D-> proc id .; N1 begin D S end ,call
D-> proc id .; N1 begin D S end ,id
D-> proc id .; N1 begin D S end ,while
D-> proc id .; N1 begin D S end ,begin
D-> proc id .; N1 begin D S end ,if
D-> proc id .; N1 begin D S end ,proc
D-> proc id .; N1 begin D S end ,record
D-> proc id .; N1 begin D S end ,integer
D-> proc id .; N1 begin D S end ,real

I459:
D-> proc id ; .N1 begin D S end ,call
D-> proc id ; .N1 begin D S end ,id
D-> proc id ; .N1 begin D S end ,while
D-> proc id ; .N1 begin D S end ,begin
D-> proc id ; .N1 begin D S end ,if
D-> proc id ; .N1 begin D S end ,proc
D-> proc id ; .N1 begin D S end ,record
D-> proc id ; .N1 begin D S end ,integer
D-> proc id ; .N1 begin D S end ,real
N1-> . ,begin

I460:
D-> proc id ; N1 .begin D S end ,call
D-> proc id ; N1 .begin D S end ,id
D-> proc id ; N1 .begin D S end ,while
D-> proc id ; N1 .begin D S end ,begin
D-> proc id ; N1 .begin D S end ,if
D-> proc id ; N1 .begin D S end ,proc
D-> proc id ; N1 .begin D S end ,record
D-> proc id ; N1 .begin D S end ,integer
D-> proc id ; N1 .begin D S end ,real

I461:
D-> proc id ; N1 begin .D S end ,call
D-> proc id ; N1 begin .D S end ,id
D-> proc id ; N1 begin .D S end ,while
D-> proc id ; N1 begin .D S end ,begin
D-> proc id ; N1 begin .D S end ,if
D-> proc id ; N1 begin .D S end ,proc
D-> proc id ; N1 begin .D S end ,record
D-> proc id ; N1 begin .D S end ,integer
D-> proc id ; N1 begin .D S end ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,begin
D-> .D D ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,begin
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,call
D-> .proc id ; N1 begin D S end ,id
D-> .proc id ; N1 begin D S end ,while
D-> .proc id ; N1 begin D S end ,begin
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,proc
D-> .proc id ; N1 begin D S end ,record
D-> .proc id ; N1 begin D S end ,integer
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I462:
D-> proc id ; N1 begin D .S end ,call
D-> proc id ; N1 begin D .S end ,id
D-> proc id ; N1 begin D .S end ,while
D-> proc id ; N1 begin D .S end ,begin
D-> proc id ; N1 begin D .S end ,if
D-> proc id ; N1 begin D .S end ,proc
D-> proc id ; N1 begin D .S end ,record
D-> proc id ; N1 begin D .S end ,integer
D-> proc id ; N1 begin D .S end ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
D-> .D D ,call
D-> .T id ; ,call
D-> .proc id ; N1 begin D S end ,call
D-> .D D ,id
D-> .T id ; ,id
D-> .proc id ; N1 begin D S end ,id
D-> .D D ,while
D-> .T id ; ,while
D-> .proc id ; N1 begin D S end ,while
D-> .D D ,begin
D-> .T id ; ,begin
D-> .proc id ; N1 begin D S end ,begin
D-> .D D ,if
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .T id ; ,proc
D-> .proc id ; N1 begin D S end ,proc
D-> .D D ,record
D-> .T id ; ,record
D-> .proc id ; N1 begin D S end ,record
D-> .D D ,integer
D-> .T id ; ,integer
D-> .proc id ; N1 begin D S end ,integer
D-> .D D ,real
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,real
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
T-> .X C ,id
T-> .record N2 D end ,id
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I463:
D-> proc id ; N1 begin D S .end ,call
D-> proc id ; N1 begin D S .end ,id
D-> proc id ; N1 begin D S .end ,while
D-> proc id ; N1 begin D S .end ,begin
D-> proc id ; N1 begin D S .end ,if
D-> proc id ; N1 begin D S .end ,proc
D-> proc id ; N1 begin D S .end ,record
D-> proc id ; N1 begin D S .end ,integer
D-> proc id ; N1 begin D S .end ,real
S-> S .M S ,end
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I464:
D-> proc id ; N1 begin D S end. ,call
D-> proc id ; N1 begin D S end. ,id
D-> proc id ; N1 begin D S end. ,while
D-> proc id ; N1 begin D S end. ,begin
D-> proc id ; N1 begin D S end. ,if
D-> proc id ; N1 begin D S end. ,proc
D-> proc id ; N1 begin D S end. ,record
D-> proc id ; N1 begin D S end. ,integer
D-> proc id ; N1 begin D S end. ,real

I465:
S1-> if .B then M S1 N else M S1 ,end
S2-> if .B then M S1 N else M S2 ,end
S2-> if .B then M S0 ,end
S1-> if .B then M S1 N else M S1 ,call
S1-> if .B then M S1 N else M S1 ,id
S1-> if .B then M S1 N else M S1 ,while
S1-> if .B then M S1 N else M S1 ,begin
S1-> if .B then M S1 N else M S1 ,if
S2-> if .B then M S1 N else M S2 ,call
S2-> if .B then M S0 ,call
S2-> if .B then M S1 N else M S2 ,id
S2-> if .B then M S0 ,id
S2-> if .B then M S1 N else M S2 ,while
S2-> if .B then M S0 ,while
S2-> if .B then M S1 N else M S2 ,begin
S2-> if .B then M S0 ,begin
S2-> if .B then M S1 N else M S2 ,if
S2-> if .B then M S0 ,if
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I466:
S1-> if B .then M S1 N else M S1 ,end
S2-> if B .then M S1 N else M S2 ,end
S2-> if B .then M S0 ,end
S1-> if B .then M S1 N else M S1 ,call
S1-> if B .then M S1 N else M S1 ,id
S1-> if B .then M S1 N else M S1 ,while
S1-> if B .then M S1 N else M S1 ,begin
S1-> if B .then M S1 N else M S1 ,if
S2-> if B .then M S1 N else M S2 ,call
S2-> if B .then M S0 ,call
S2-> if B .then M S1 N else M S2 ,id
S2-> if B .then M S0 ,id
S2-> if B .then M S1 N else M S2 ,while
S2-> if B .then M S0 ,while
S2-> if B .then M S1 N else M S2 ,begin
S2-> if B .then M S0 ,begin
S2-> if B .then M S1 N else M S2 ,if
S2-> if B .then M S0 ,if
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I467:
S1-> if B then .M S1 N else M S1 ,end
S2-> if B then .M S1 N else M S2 ,end
S2-> if B then .M S0 ,end
S1-> if B then .M S1 N else M S1 ,call
S1-> if B then .M S1 N else M S1 ,id
S1-> if B then .M S1 N else M S1 ,while
S1-> if B then .M S1 N else M S1 ,begin
S1-> if B then .M S1 N else M S1 ,if
S2-> if B then .M S1 N else M S2 ,call
S2-> if B then .M S0 ,call
S2-> if B then .M S1 N else M S2 ,id
S2-> if B then .M S0 ,id
S2-> if B then .M S1 N else M S2 ,while
S2-> if B then .M S0 ,while
S2-> if B then .M S1 N else M S2 ,begin
S2-> if B then .M S0 ,begin
S2-> if B then .M S1 N else M S2 ,if
S2-> if B then .M S0 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I468:
S1-> if B then M .S1 N else M S1 ,end
S2-> if B then M .S1 N else M S2 ,end
S2-> if B then M .S0 ,end
S1-> if B then M .S1 N else M S1 ,call
S1-> if B then M .S1 N else M S1 ,id
S1-> if B then M .S1 N else M S1 ,while
S1-> if B then M .S1 N else M S1 ,begin
S1-> if B then M .S1 N else M S1 ,if
S2-> if B then M .S1 N else M S2 ,call
S2-> if B then M .S0 ,call
S2-> if B then M .S1 N else M S2 ,id
S2-> if B then M .S0 ,id
S2-> if B then M .S1 N else M S2 ,while
S2-> if B then M .S0 ,while
S2-> if B then M .S1 N else M S2 ,begin
S2-> if B then M .S0 ,begin
S2-> if B then M .S1 N else M S2 ,if
S2-> if B then M .S0 ,if
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,end
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I469:
S1-> if B then M S1 .N else M S1 ,end
S2-> if B then M S1 .N else M S2 ,end
S1-> if B then M S1 .N else M S1 ,call
S1-> if B then M S1 .N else M S1 ,id
S1-> if B then M S1 .N else M S1 ,while
S1-> if B then M S1 .N else M S1 ,begin
S1-> if B then M S1 .N else M S1 ,if
S2-> if B then M S1 .N else M S2 ,call
S2-> if B then M S1 .N else M S2 ,id
S2-> if B then M S1 .N else M S2 ,while
S2-> if B then M S1 .N else M S2 ,begin
S2-> if B then M S1 .N else M S2 ,if
N-> . ,else

I470:
S1-> if B then M S1 N .else M S1 ,end
S2-> if B then M S1 N .else M S2 ,end
S1-> if B then M S1 N .else M S1 ,call
S1-> if B then M S1 N .else M S1 ,id
S1-> if B then M S1 N .else M S1 ,while
S1-> if B then M S1 N .else M S1 ,begin
S1-> if B then M S1 N .else M S1 ,if
S2-> if B then M S1 N .else M S2 ,call
S2-> if B then M S1 N .else M S2 ,id
S2-> if B then M S1 N .else M S2 ,while
S2-> if B then M S1 N .else M S2 ,begin
S2-> if B then M S1 N .else M S2 ,if

I471:
S1-> if B then M S1 N else .M S1 ,end
S2-> if B then M S1 N else .M S2 ,end
S1-> if B then M S1 N else .M S1 ,call
S1-> if B then M S1 N else .M S1 ,id
S1-> if B then M S1 N else .M S1 ,while
S1-> if B then M S1 N else .M S1 ,begin
S1-> if B then M S1 N else .M S1 ,if
S2-> if B then M S1 N else .M S2 ,call
S2-> if B then M S1 N else .M S2 ,id
S2-> if B then M S1 N else .M S2 ,while
S2-> if B then M S1 N else .M S2 ,begin
S2-> if B then M S1 N else .M S2 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I472:
S1-> if B then M S1 N else M .S1 ,end
S2-> if B then M S1 N else M .S2 ,end
S1-> if B then M S1 N else M .S1 ,call
S1-> if B then M S1 N else M .S1 ,id
S1-> if B then M S1 N else M .S1 ,while
S1-> if B then M S1 N else M .S1 ,begin
S1-> if B then M S1 N else M .S1 ,if
S2-> if B then M S1 N else M .S2 ,call
S2-> if B then M S1 N else M .S2 ,id
S2-> if B then M S1 N else M .S2 ,while
S2-> if B then M S1 N else M .S2 ,begin
S2-> if B then M S1 N else M .S2 ,if
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if

I473:
S1-> begin .S3 end ,end
S2-> begin .S3 end ,end
S1-> begin .S3 end ,call
S1-> begin .S3 end ,id
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,id
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I474:
S1-> begin S3 .end ,end
S2-> begin S3 .end ,end
S1-> begin S3 .end ,call
S1-> begin S3 .end ,id
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,id
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I475:
S1-> begin S3 end. ,end
S2-> begin S3 end. ,end
S1-> begin S3 end. ,call
S1-> begin S3 end. ,id
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,id
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if

I476:
T-> X .C ,id
C-> .[ num ] C ,id
C-> . ,id

I477:
T-> X C. ,id

I478:
C-> [ .num ] C ,id

I479:
C-> [ num .] C ,id

I480:
C-> [ num ] .C ,id
C-> .[ num ] C ,id
C-> . ,id

I481:
C-> [ num ] C. ,id

I482:
T-> record .N2 D end ,id
N2-> . ,proc
N2-> . ,record
N2-> . ,integer
N2-> . ,real

I483:
T-> record N2 .D end ,id
D-> .D D ,end
D-> .T id ; ,end
D-> .proc id ; N1 begin D S end ,end
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,proc
D-> .proc id ; N1 begin D S end ,record
D-> .proc id ; N1 begin D S end ,integer
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I484:
T-> record N2 D .end ,id
D-> D .D ,end
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,end
D-> .T id ; ,end
D-> .proc id ; N1 begin D S end ,end
D-> .D D ,proc
D-> .T id ; ,proc
D-> .proc id ; N1 begin D S end ,proc
D-> .D D ,record
D-> .T id ; ,record
D-> .proc id ; N1 begin D S end ,record
D-> .D D ,integer
D-> .T id ; ,integer
D-> .proc id ; N1 begin D S end ,integer
D-> .D D ,real
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I485:
T-> record N2 D end. ,id

I486:
D-> D D. ,end
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,end
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,end
D-> .T id ; ,end
D-> .proc id ; N1 begin D S end ,end
D-> .D D ,proc
D-> .T id ; ,proc
D-> .proc id ; N1 begin D S end ,proc
D-> .D D ,record
D-> .T id ; ,record
D-> .proc id ; N1 begin D S end ,record
D-> .D D ,integer
D-> .T id ; ,integer
D-> .proc id ; N1 begin D S end ,integer
D-> .D D ,real
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I487:
D-> T .id ; ,end
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I488:
D-> T id .; ,end
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I489:
D-> T id ;. ,end
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I490:
D-> proc .id ; N1 begin D S end ,end
D-> proc .id ; N1 begin D S end ,proc
D-> proc .id ; N1 begin D S end ,record
D-> proc .id ; N1 begin D S end ,integer
D-> proc .id ; N1 begin D S end ,real

I491:
D-> proc id .; N1 begin D S end ,end
D-> proc id .; N1 begin D S end ,proc
D-> proc id .; N1 begin D S end ,record
D-> proc id .; N1 begin D S end ,integer
D-> proc id .; N1 begin D S end ,real

I492:
D-> proc id ; .N1 begin D S end ,end
D-> proc id ; .N1 begin D S end ,proc
D-> proc id ; .N1 begin D S end ,record
D-> proc id ; .N1 begin D S end ,integer
D-> proc id ; .N1 begin D S end ,real
N1-> . ,begin

I493:
D-> proc id ; N1 .begin D S end ,end
D-> proc id ; N1 .begin D S end ,proc
D-> proc id ; N1 .begin D S end ,record
D-> proc id ; N1 .begin D S end ,integer
D-> proc id ; N1 .begin D S end ,real

I494:
D-> proc id ; N1 begin .D S end ,end
D-> proc id ; N1 begin .D S end ,proc
D-> proc id ; N1 begin .D S end ,record
D-> proc id ; N1 begin .D S end ,integer
D-> proc id ; N1 begin .D S end ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,begin
D-> .D D ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,begin
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,call
D-> .proc id ; N1 begin D S end ,id
D-> .proc id ; N1 begin D S end ,while
D-> .proc id ; N1 begin D S end ,begin
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,proc
D-> .proc id ; N1 begin D S end ,record
D-> .proc id ; N1 begin D S end ,integer
D-> .proc id ; N1 begin D S end ,real
T-> .X C ,id
T-> .record N2 D end ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I495:
D-> proc id ; N1 begin D .S end ,end
D-> proc id ; N1 begin D .S end ,proc
D-> proc id ; N1 begin D .S end ,record
D-> proc id ; N1 begin D .S end ,integer
D-> proc id ; N1 begin D .S end ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
D-> .D D ,call
D-> .T id ; ,call
D-> .proc id ; N1 begin D S end ,call
D-> .D D ,id
D-> .T id ; ,id
D-> .proc id ; N1 begin D S end ,id
D-> .D D ,while
D-> .T id ; ,while
D-> .proc id ; N1 begin D S end ,while
D-> .D D ,begin
D-> .T id ; ,begin
D-> .proc id ; N1 begin D S end ,begin
D-> .D D ,if
D-> .T id ; ,if
D-> .proc id ; N1 begin D S end ,if
D-> .D D ,proc
D-> .T id ; ,proc
D-> .proc id ; N1 begin D S end ,proc
D-> .D D ,record
D-> .T id ; ,record
D-> .proc id ; N1 begin D S end ,record
D-> .D D ,integer
D-> .T id ; ,integer
D-> .proc id ; N1 begin D S end ,integer
D-> .D D ,real
D-> .T id ; ,real
D-> .proc id ; N1 begin D S end ,real
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
T-> .X C ,id
T-> .record N2 D end ,id
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I496:
D-> proc id ; N1 begin D S .end ,end
D-> proc id ; N1 begin D S .end ,proc
D-> proc id ; N1 begin D S .end ,record
D-> proc id ; N1 begin D S .end ,integer
D-> proc id ; N1 begin D S .end ,real
S-> S .M S ,end
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I497:
D-> proc id ; N1 begin D S end. ,end
D-> proc id ; N1 begin D S end. ,proc
D-> proc id ; N1 begin D S end. ,record
D-> proc id ; N1 begin D S end. ,integer
D-> proc id ; N1 begin D S end. ,real

I498:
X-> integer. ,[
X-> integer. ,id

I499:
X-> real. ,[
X-> real. ,id

I500:
P-> S. ,#
S-> S .M S ,#
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I501:
S-> S M .S ,#
S-> S M .S ,call
S-> S M .S ,id
S-> S M .S ,while
S-> S M .S ,begin
S-> S M .S ,if
S-> .S M S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ; ,#
S-> .S M S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ; ,call
S-> .S M S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ; ,id
S-> .S M S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ; ,while
S-> .S M S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ; ,begin
S-> .S M S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,#
S1-> .while M B do M S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then M S1 N else M S2 ,#
S2-> .if B then M S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I502:
S-> S M S. ,#
S-> S M S. ,call
S-> S M S. ,id
S-> S M S. ,while
S-> S M S. ,begin
S-> S M S. ,if
S-> S .M S ,#
S-> S .M S ,call
S-> S .M S ,id
S-> S .M S ,while
S-> S .M S ,begin
S-> S .M S ,if
M-> . ,call
M-> . ,id
M-> . ,while
M-> . ,begin
M-> . ,if

I503:
S-> id .= E ; ,#
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I504:
S-> id = .E ; ,#
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I505:
S-> id = E .; ,#
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I506:
S-> id = E ;. ,#
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I507:
S-> L .= E ; ,#
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I508:
S-> L = .E ; ,#
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I509:
S-> L = E .; ,#
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I510:
S-> L = E ;. ,#
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I511:
S-> S1. ,#
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I512:
S-> S2. ,#
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I513:
S-> call .id ( EL ) ; ,#
S-> call .id ( EL ) ; ,call
S-> call .id ( EL ) ; ,id
S-> call .id ( EL ) ; ,while
S-> call .id ( EL ) ; ,begin
S-> call .id ( EL ) ; ,if

I514:
S-> call id .( EL ) ; ,#
S-> call id .( EL ) ; ,call
S-> call id .( EL ) ; ,id
S-> call id .( EL ) ; ,while
S-> call id .( EL ) ; ,begin
S-> call id .( EL ) ; ,if

I515:
S-> call id ( .EL ) ; ,#
S-> call id ( .EL ) ; ,call
S-> call id ( .EL ) ; ,id
S-> call id ( .EL ) ; ,while
S-> call id ( .EL ) ; ,begin
S-> call id ( .EL ) ; ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I516:
S-> call id ( EL .) ; ,#
S-> call id ( EL .) ; ,call
S-> call id ( EL .) ; ,id
S-> call id ( EL .) ; ,while
S-> call id ( EL .) ; ,begin
S-> call id ( EL .) ; ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I517:
S-> call id ( EL ) .; ,#
S-> call id ( EL ) .; ,call
S-> call id ( EL ) .; ,id
S-> call id ( EL ) .; ,while
S-> call id ( EL ) .; ,begin
S-> call id ( EL ) .; ,if

I518:
S-> call id ( EL ) ;. ,#
S-> call id ( EL ) ;. ,call
S-> call id ( EL ) ;. ,id
S-> call id ( EL ) ;. ,while
S-> call id ( EL ) ;. ,begin
S-> call id ( EL ) ;. ,if

I519:
S1-> if .B then M S1 N else M S1 ,#
S2-> if .B then M S1 N else M S2 ,#
S2-> if .B then M S0 ,#
S1-> if .B then M S1 N else M S1 ,call
S2-> if .B then M S1 N else M S2 ,call
S2-> if .B then M S0 ,call
S1-> if .B then M S1 N else M S1 ,id
S2-> if .B then M S1 N else M S2 ,id
S2-> if .B then M S0 ,id
S1-> if .B then M S1 N else M S1 ,while
S2-> if .B then M S1 N else M S2 ,while
S2-> if .B then M S0 ,while
S1-> if .B then M S1 N else M S1 ,begin
S2-> if .B then M S1 N else M S2 ,begin
S2-> if .B then M S0 ,begin
S1-> if .B then M S1 N else M S1 ,if
S2-> if .B then M S1 N else M S2 ,if
S2-> if .B then M S0 ,if
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I520:
S1-> if B .then M S1 N else M S1 ,#
S2-> if B .then M S1 N else M S2 ,#
S2-> if B .then M S0 ,#
S1-> if B .then M S1 N else M S1 ,call
S2-> if B .then M S1 N else M S2 ,call
S2-> if B .then M S0 ,call
S1-> if B .then M S1 N else M S1 ,id
S2-> if B .then M S1 N else M S2 ,id
S2-> if B .then M S0 ,id
S1-> if B .then M S1 N else M S1 ,while
S2-> if B .then M S1 N else M S2 ,while
S2-> if B .then M S0 ,while
S1-> if B .then M S1 N else M S1 ,begin
S2-> if B .then M S1 N else M S2 ,begin
S2-> if B .then M S0 ,begin
S1-> if B .then M S1 N else M S1 ,if
S2-> if B .then M S1 N else M S2 ,if
S2-> if B .then M S0 ,if
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I521:
S1-> if B then .M S1 N else M S1 ,#
S2-> if B then .M S1 N else M S2 ,#
S2-> if B then .M S0 ,#
S1-> if B then .M S1 N else M S1 ,call
S2-> if B then .M S1 N else M S2 ,call
S2-> if B then .M S0 ,call
S1-> if B then .M S1 N else M S1 ,id
S2-> if B then .M S1 N else M S2 ,id
S2-> if B then .M S0 ,id
S1-> if B then .M S1 N else M S1 ,while
S2-> if B then .M S1 N else M S2 ,while
S2-> if B then .M S0 ,while
S1-> if B then .M S1 N else M S1 ,begin
S2-> if B then .M S1 N else M S2 ,begin
S2-> if B then .M S0 ,begin
S1-> if B then .M S1 N else M S1 ,if
S2-> if B then .M S1 N else M S2 ,if
S2-> if B then .M S0 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I522:
S1-> if B then M .S1 N else M S1 ,#
S2-> if B then M .S1 N else M S2 ,#
S2-> if B then M .S0 ,#
S1-> if B then M .S1 N else M S1 ,call
S2-> if B then M .S1 N else M S2 ,call
S2-> if B then M .S0 ,call
S1-> if B then M .S1 N else M S1 ,id
S2-> if B then M .S1 N else M S2 ,id
S2-> if B then M .S0 ,id
S1-> if B then M .S1 N else M S1 ,while
S2-> if B then M .S1 N else M S2 ,while
S2-> if B then M .S0 ,while
S1-> if B then M .S1 N else M S1 ,begin
S2-> if B then M .S1 N else M S2 ,begin
S2-> if B then M .S0 ,begin
S1-> if B then M .S1 N else M S1 ,if
S2-> if B then M .S1 N else M S2 ,if
S2-> if B then M .S0 ,if
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,#
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I523:
S1-> if B then M S1 .N else M S1 ,#
S2-> if B then M S1 .N else M S2 ,#
S1-> if B then M S1 .N else M S1 ,call
S2-> if B then M S1 .N else M S2 ,call
S1-> if B then M S1 .N else M S1 ,id
S2-> if B then M S1 .N else M S2 ,id
S1-> if B then M S1 .N else M S1 ,while
S2-> if B then M S1 .N else M S2 ,while
S1-> if B then M S1 .N else M S1 ,begin
S2-> if B then M S1 .N else M S2 ,begin
S1-> if B then M S1 .N else M S1 ,if
S2-> if B then M S1 .N else M S2 ,if
N-> . ,else

I524:
S1-> if B then M S1 N .else M S1 ,#
S2-> if B then M S1 N .else M S2 ,#
S1-> if B then M S1 N .else M S1 ,call
S2-> if B then M S1 N .else M S2 ,call
S1-> if B then M S1 N .else M S1 ,id
S2-> if B then M S1 N .else M S2 ,id
S1-> if B then M S1 N .else M S1 ,while
S2-> if B then M S1 N .else M S2 ,while
S1-> if B then M S1 N .else M S1 ,begin
S2-> if B then M S1 N .else M S2 ,begin
S1-> if B then M S1 N .else M S1 ,if
S2-> if B then M S1 N .else M S2 ,if

I525:
S1-> if B then M S1 N else .M S1 ,#
S2-> if B then M S1 N else .M S2 ,#
S1-> if B then M S1 N else .M S1 ,call
S2-> if B then M S1 N else .M S2 ,call
S1-> if B then M S1 N else .M S1 ,id
S2-> if B then M S1 N else .M S2 ,id
S1-> if B then M S1 N else .M S1 ,while
S2-> if B then M S1 N else .M S2 ,while
S1-> if B then M S1 N else .M S1 ,begin
S2-> if B then M S1 N else .M S2 ,begin
S1-> if B then M S1 N else .M S1 ,if
S2-> if B then M S1 N else .M S2 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I526:
S1-> if B then M S1 N else M .S1 ,#
S2-> if B then M S1 N else M .S2 ,#
S1-> if B then M S1 N else M .S1 ,call
S2-> if B then M S1 N else M .S2 ,call
S1-> if B then M S1 N else M .S1 ,id
S2-> if B then M S1 N else M .S2 ,id
S1-> if B then M S1 N else M .S1 ,while
S2-> if B then M S1 N else M .S2 ,while
S1-> if B then M S1 N else M .S1 ,begin
S2-> if B then M S1 N else M .S2 ,begin
S1-> if B then M S1 N else M .S1 ,if
S2-> if B then M S1 N else M .S2 ,if
S1-> .if B then M S1 N else M S1 ,#
S1-> .while M B do M S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then M S1 N else M S2 ,#
S2-> .if B then M S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if

I527:
S1-> if B then M S1 N else M S1. ,#
S1-> if B then M S1 N else M S1. ,call
S1-> if B then M S1 N else M S1. ,id
S1-> if B then M S1 N else M S1. ,while
S1-> if B then M S1 N else M S1. ,begin
S1-> if B then M S1 N else M S1. ,if

I528:
S2-> if B then M S1 N else M S2. ,#
S2-> if B then M S1 N else M S2. ,call
S2-> if B then M S1 N else M S2. ,id
S2-> if B then M S1 N else M S2. ,while
S2-> if B then M S1 N else M S2. ,begin
S2-> if B then M S1 N else M S2. ,if

I529:
S1-> while .M B do M S0 ,#
S1-> while .M B do M S0 ,call
S1-> while .M B do M S0 ,id
S1-> while .M B do M S0 ,while
S1-> while .M B do M S0 ,begin
S1-> while .M B do M S0 ,if
M-> . ,not
M-> . ,num
M-> . ,(
M-> . ,false
M-> . ,true
M-> . ,id
M-> . ,-

I530:
S1-> while M .B do M S0 ,#
S1-> while M .B do M S0 ,call
S1-> while M .B do M S0 ,id
S1-> while M .B do M S0 ,while
S1-> while M .B do M S0 ,begin
S1-> while M .B do M S0 ,if
B-> .B or M B1 ,do
B-> .B1 ,do
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,do
B1-> .B2 ,do
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I531:
S1-> while M B .do M S0 ,#
S1-> while M B .do M S0 ,call
S1-> while M B .do M S0 ,id
S1-> while M B .do M S0 ,while
S1-> while M B .do M S0 ,begin
S1-> while M B .do M S0 ,if
B-> B .or M B1 ,do
B-> B .or M B1 ,or

I532:
S1-> while M B do .M S0 ,#
S1-> while M B do .M S0 ,call
S1-> while M B do .M S0 ,id
S1-> while M B do .M S0 ,while
S1-> while M B do .M S0 ,begin
S1-> while M B do .M S0 ,if
M-> . ,begin

I533:
S1-> while M B do M .S0 ,#
S1-> while M B do M .S0 ,call
S1-> while M B do M .S0 ,id
S1-> while M B do M .S0 ,while
S1-> while M B do M .S0 ,begin
S1-> while M B do M .S0 ,if
S0-> .begin S3 end ,#
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I534:
S1-> while M B do M S0. ,#
S1-> while M B do M S0. ,call
S1-> while M B do M S0. ,id
S1-> while M B do M S0. ,while
S1-> while M B do M S0. ,begin
S1-> while M B do M S0. ,if

I535:
S0-> begin .S3 end ,#
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I536:
S0-> begin S3 .end ,#
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I537:
S0-> begin S3 end. ,#
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I538:
S1-> begin .S3 end ,#
S2-> begin .S3 end ,#
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I539:
S1-> begin S3 .end ,#
S2-> begin S3 .end ,#
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I540:
S1-> begin S3 end. ,#
S2-> begin S3 end. ,#
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I541:
S2-> if B then M S0. ,#
S2-> if B then M S0. ,call
S2-> if B then M S0. ,id
S2-> if B then M S0. ,while
S2-> if B then M S0. ,begin
S2-> if B then M S0. ,if

I542:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,#
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I543:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,#
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I544:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,#
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I545:
S1-> if .B then M S1 N else M S1 ,#
S2-> if .B then M S1 N else M S2 ,#
S2-> if .B then M S0 ,#
S1-> if .B then M S1 N else M S1 ,call
S1-> if .B then M S1 N else M S1 ,id
S1-> if .B then M S1 N else M S1 ,while
S1-> if .B then M S1 N else M S1 ,begin
S1-> if .B then M S1 N else M S1 ,if
S2-> if .B then M S1 N else M S2 ,call
S2-> if .B then M S0 ,call
S2-> if .B then M S1 N else M S2 ,id
S2-> if .B then M S0 ,id
S2-> if .B then M S1 N else M S2 ,while
S2-> if .B then M S0 ,while
S2-> if .B then M S1 N else M S2 ,begin
S2-> if .B then M S0 ,begin
S2-> if .B then M S1 N else M S2 ,if
S2-> if .B then M S0 ,if
B-> .B or M B1 ,then
B-> .B1 ,then
B-> .B or M B1 ,or
B-> .B1 ,or
B1-> .B1 and M B2 ,then
B1-> .B2 ,then
B1-> .B1 and M B2 ,or
B1-> .B2 ,or
B1-> .B1 and M B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I546:
S1-> if B .then M S1 N else M S1 ,#
S2-> if B .then M S1 N else M S2 ,#
S2-> if B .then M S0 ,#
S1-> if B .then M S1 N else M S1 ,call
S1-> if B .then M S1 N else M S1 ,id
S1-> if B .then M S1 N else M S1 ,while
S1-> if B .then M S1 N else M S1 ,begin
S1-> if B .then M S1 N else M S1 ,if
S2-> if B .then M S1 N else M S2 ,call
S2-> if B .then M S0 ,call
S2-> if B .then M S1 N else M S2 ,id
S2-> if B .then M S0 ,id
S2-> if B .then M S1 N else M S2 ,while
S2-> if B .then M S0 ,while
S2-> if B .then M S1 N else M S2 ,begin
S2-> if B .then M S0 ,begin
S2-> if B .then M S1 N else M S2 ,if
S2-> if B .then M S0 ,if
B-> B .or M B1 ,then
B-> B .or M B1 ,or

I547:
S1-> if B then .M S1 N else M S1 ,#
S2-> if B then .M S1 N else M S2 ,#
S2-> if B then .M S0 ,#
S1-> if B then .M S1 N else M S1 ,call
S1-> if B then .M S1 N else M S1 ,id
S1-> if B then .M S1 N else M S1 ,while
S1-> if B then .M S1 N else M S1 ,begin
S1-> if B then .M S1 N else M S1 ,if
S2-> if B then .M S1 N else M S2 ,call
S2-> if B then .M S0 ,call
S2-> if B then .M S1 N else M S2 ,id
S2-> if B then .M S0 ,id
S2-> if B then .M S1 N else M S2 ,while
S2-> if B then .M S0 ,while
S2-> if B then .M S1 N else M S2 ,begin
S2-> if B then .M S0 ,begin
S2-> if B then .M S1 N else M S2 ,if
S2-> if B then .M S0 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I548:
S1-> if B then M .S1 N else M S1 ,#
S2-> if B then M .S1 N else M S2 ,#
S2-> if B then M .S0 ,#
S1-> if B then M .S1 N else M S1 ,call
S1-> if B then M .S1 N else M S1 ,id
S1-> if B then M .S1 N else M S1 ,while
S1-> if B then M .S1 N else M S1 ,begin
S1-> if B then M .S1 N else M S1 ,if
S2-> if B then M .S1 N else M S2 ,call
S2-> if B then M .S0 ,call
S2-> if B then M .S1 N else M S2 ,id
S2-> if B then M .S0 ,id
S2-> if B then M .S1 N else M S2 ,while
S2-> if B then M .S0 ,while
S2-> if B then M .S1 N else M S2 ,begin
S2-> if B then M .S0 ,begin
S2-> if B then M .S1 N else M S2 ,if
S2-> if B then M .S0 ,if
S1-> .if B then M S1 N else M S1 ,else
S1-> .while M B do M S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,#
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I549:
S1-> if B then M S1 .N else M S1 ,#
S2-> if B then M S1 .N else M S2 ,#
S1-> if B then M S1 .N else M S1 ,call
S1-> if B then M S1 .N else M S1 ,id
S1-> if B then M S1 .N else M S1 ,while
S1-> if B then M S1 .N else M S1 ,begin
S1-> if B then M S1 .N else M S1 ,if
S2-> if B then M S1 .N else M S2 ,call
S2-> if B then M S1 .N else M S2 ,id
S2-> if B then M S1 .N else M S2 ,while
S2-> if B then M S1 .N else M S2 ,begin
S2-> if B then M S1 .N else M S2 ,if
N-> . ,else

I550:
S1-> if B then M S1 N .else M S1 ,#
S2-> if B then M S1 N .else M S2 ,#
S1-> if B then M S1 N .else M S1 ,call
S1-> if B then M S1 N .else M S1 ,id
S1-> if B then M S1 N .else M S1 ,while
S1-> if B then M S1 N .else M S1 ,begin
S1-> if B then M S1 N .else M S1 ,if
S2-> if B then M S1 N .else M S2 ,call
S2-> if B then M S1 N .else M S2 ,id
S2-> if B then M S1 N .else M S2 ,while
S2-> if B then M S1 N .else M S2 ,begin
S2-> if B then M S1 N .else M S2 ,if

I551:
S1-> if B then M S1 N else .M S1 ,#
S2-> if B then M S1 N else .M S2 ,#
S1-> if B then M S1 N else .M S1 ,call
S1-> if B then M S1 N else .M S1 ,id
S1-> if B then M S1 N else .M S1 ,while
S1-> if B then M S1 N else .M S1 ,begin
S1-> if B then M S1 N else .M S1 ,if
S2-> if B then M S1 N else .M S2 ,call
S2-> if B then M S1 N else .M S2 ,id
S2-> if B then M S1 N else .M S2 ,while
S2-> if B then M S1 N else .M S2 ,begin
S2-> if B then M S1 N else .M S2 ,if
M-> . ,while
M-> . ,begin
M-> . ,if

I552:
S1-> if B then M S1 N else M .S1 ,#
S2-> if B then M S1 N else M .S2 ,#
S1-> if B then M S1 N else M .S1 ,call
S1-> if B then M S1 N else M .S1 ,id
S1-> if B then M S1 N else M .S1 ,while
S1-> if B then M S1 N else M .S1 ,begin
S1-> if B then M S1 N else M .S1 ,if
S2-> if B then M S1 N else M .S2 ,call
S2-> if B then M S1 N else M .S2 ,id
S2-> if B then M S1 N else M .S2 ,while
S2-> if B then M S1 N else M .S2 ,begin
S2-> if B then M S1 N else M .S2 ,if
S1-> .if B then M S1 N else M S1 ,#
S1-> .while M B do M S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then M S1 N else M S2 ,#
S2-> .if B then M S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if

I553:
S1-> begin .S3 end ,#
S2-> begin .S3 end ,#
S1-> begin .S3 end ,call
S1-> begin .S3 end ,id
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,id
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; M S ,end
S3-> .S ,end
S3-> .S3 ; M S ,;
S3-> .S ,;
S-> .S M S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ; ,end
S-> .S M S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ; ,;
S-> .S M S ,call
S-> .S M S ,id
S-> .S M S ,while
S-> .S M S ,begin
S-> .S M S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ; ,call
S-> .call id ( EL ) ; ,id
S-> .call id ( EL ) ; ,while
S-> .call id ( EL ) ; ,begin
S-> .call id ( EL ) ; ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then M S1 N else M S1 ,end
S1-> .while M B do M S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then M S1 N else M S2 ,end
S2-> .if B then M S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then M S1 N else M S1 ,;
S1-> .while M B do M S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then M S1 N else M S2 ,;
S2-> .if B then M S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then M S1 N else M S1 ,call
S1-> .while M B do M S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then M S1 N else M S1 ,id
S1-> .while M B do M S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then M S1 N else M S1 ,while
S1-> .while M B do M S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then M S1 N else M S1 ,begin
S1-> .while M B do M S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then M S1 N else M S1 ,if
S1-> .while M B do M S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then M S1 N else M S2 ,call
S2-> .if B then M S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then M S1 N else M S2 ,id
S2-> .if B then M S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then M S1 N else M S2 ,while
S2-> .if B then M S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then M S1 N else M S2 ,begin
S2-> .if B then M S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then M S1 N else M S2 ,if
S2-> .if B then M S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I554:
S1-> begin S3 .end ,#
S2-> begin S3 .end ,#
S1-> begin S3 .end ,call
S1-> begin S3 .end ,id
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,id
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; M S ,end
S3-> S3 .; M S ,;

I555:
S1-> begin S3 end. ,#
S2-> begin S3 end. ,#
S1-> begin S3 end. ,call
S1-> begin S3 end. ,id
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,id
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if
