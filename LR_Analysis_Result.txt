1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
21:< integer ,103 >
21:< z ,1 >
21:< ; ,302 >
21:< // Duplicate definition ,7 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
58:< call ,110 >
58:< a ,1 >
58:< ( ,305 >
58:< 1 ,2 >
58:< , ,301 >
58:< 2 ,2 >
58:< + ,201 >
58:< 1 ,2 >
58:< , ,301 >
58:< a ,1 >
58:< * ,203 >
58:< b ,1 >
58:< ) ,306 >
58:< ; ,302 >
58:< //Common variable with call ,7 >
59:< e1 ,1 >
59:< = ,307 >
59:< 7 ,2 >
59:< ; ,302 >
59:< // e1 Undefined ,7 >
60:< a ,1 >
60:< = ,307 >
60:< e2 ,1 >
60:< ; ,302 >
60:< // e2 Undefined ,7 >
61:< a ,1 >
61:< [ ,303 >
61:< 0 ,2 >
61:< ] ,304 >
61:< = ,307 >
61:< 1 ,2 >
61:< ; ,302 >
61:< // Non-array using array operators ,7 >
62:< e3 ,1 >
62:< [ ,303 >
62:< 9 ,2 >
62:< ] ,304 >
62:< = ,307 >
62:< 1 ,2 >
62:< ; ,302 >
62:< // e3 Undefined ,7 >
63:< a ,1 >
63:< = ,307 >
63:< a ,1 >
63:< + ,201 >
63:< arr ,1 >
63:< ; ,302 >
63:< // int = int + array, Integer variables are added to array variables  ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
21:< integer ,103 >
21:< z ,1 >
21:< ; ,302 >
21:< // Duplicate definition ,7 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
58:< call ,110 >
58:< a ,1 >
58:< ( ,305 >
58:< 1 ,2 >
58:< , ,301 >
58:< 2 ,2 >
58:< + ,201 >
58:< 1 ,2 >
58:< , ,301 >
58:< a ,1 >
58:< * ,203 >
58:< b ,1 >
58:< ) ,306 >
58:< ; ,302 >
58:< //Common variable with call ,7 >
59:< e1 ,1 >
59:< = ,307 >
59:< 7 ,2 >
59:< ; ,302 >
59:< // e1 Undefined ,7 >
60:< a ,1 >
60:< = ,307 >
60:< e2 ,1 >
60:< ; ,302 >
60:< // e2 Undefined ,7 >
61:< a ,1 >
61:< [ ,303 >
61:< 0 ,2 >
61:< ] ,304 >
61:< = ,307 >
61:< 1 ,2 >
61:< ; ,302 >
61:< // Non-array using array operators ,7 >
62:< e3 ,1 >
62:< [ ,303 >
62:< 9 ,2 >
62:< ] ,304 >
62:< = ,307 >
62:< 1 ,2 >
62:< ; ,302 >
62:< // e3 Undefined ,7 >
63:< a ,1 >
63:< = ,307 >
63:< a ,1 >
63:< + ,201 >
63:< arr ,1 >
63:< ; ,302 >
63:< // int = int + array, Integer variables are added to array variables  ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
21:< integer ,103 >
21:< z ,1 >
21:< ; ,302 >
21:< // Duplicate definition ,7 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
58:< call ,110 >
58:< a ,1 >
58:< ( ,305 >
58:< 1 ,2 >
58:< , ,301 >
58:< 2 ,2 >
58:< + ,201 >
58:< 1 ,2 >
58:< , ,301 >
58:< a ,1 >
58:< * ,203 >
58:< b ,1 >
58:< ) ,306 >
58:< ; ,302 >
58:< //Common variable with call ,7 >
59:< e1 ,1 >
59:< = ,307 >
59:< 7 ,2 >
59:< ; ,302 >
59:< // e1 Undefined ,7 >
60:< a ,1 >
60:< = ,307 >
60:< e2 ,1 >
60:< ; ,302 >
60:< // e2 Undefined ,7 >
61:< a ,1 >
61:< [ ,303 >
61:< 0 ,2 >
61:< ] ,304 >
61:< = ,307 >
61:< 1 ,2 >
61:< ; ,302 >
61:< // Non-array using array operators ,7 >
62:< e3 ,1 >
62:< [ ,303 >
62:< 9 ,2 >
62:< ] ,304 >
62:< = ,307 >
62:< 1 ,2 >
62:< ; ,302 >
62:< // e3 Undefined ,7 >
63:< a ,1 >
63:< = ,307 >
63:< a ,1 >
63:< + ,201 >
63:< arr ,1 >
63:< ; ,302 >
63:< // int = int + array, Integer variables are added to array variables  ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
1:< proc ,101 >
1:< fuction2 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< [ ,303 >
3:< 7 ,2 >
3:< ] ,304 >
3:< [ ,303 >
3:< 6 ,2 >
3:< ] ,304 >
3:< arr ,1 >
3:< ; ,302 >
4:< integer ,103 >
4:< m ,1 >
4:< ; ,302 >
5:< integer ,103 >
5:< n ,1 >
5:< ; ,302 >
6:< integer ,103 >
6:< a ,1 >
6:< ; ,302 >
7:< integer ,103 >
7:< b ,1 >
7:< ; ,302 >
8:< integer ,103 >
8:< c ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< d ,1 >
9:< ; ,302 >
10:< real ,104 >
10:< e ,1 >
10:< ; ,302 >
11:< record ,102 >
11:< real ,104 >
11:< re1 ,1 >
11:< ; ,302 >
11:< integer ,103 >
11:< re2 ,1 >
11:< ; ,302 >
11:< end ,114 >
11:< r1 ,1 >
11:< ; ,302 >
13:< integer ,103 >
13:< x ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< y ,1 >
14:< ; ,302 >
15:< integer ,103 >
15:< z ,1 >
15:< ; ,302 >
16:< integer ,103 >
16:< z ,1 >
16:< ; ,302 >
16:< // Duplicate definition ,7 >
19:< while ,108 >
19:< a ,1 >
19:< < ,204 >
19:< b ,1 >
19:< do ,109 >
20:< begin ,113 >
21:< if ,105 >
21:< c ,1 >
21:< < ,204 >
21:< d ,1 >
21:< then ,107 >
22:< begin ,113 >
23:< x ,1 >
23:< = ,307 >
23:< y ,1 >
23:< + ,201 >
23:< z ,1 >
23:< ; ,302 >
24:< end ,114 >
25:< else ,106 >
26:< begin ,113 >
27:< x ,1 >
27:< = ,307 >
27:< y ,1 >
27:< * ,203 >
27:< z ,1 >
27:< ; ,302 >
28:< end ,114 >
29:< end ,114 >
31:< while ,108 >
31:< a ,1 >
31:< < ,204 >
31:< b ,1 >
31:< do ,109 >
32:< begin ,113 >
33:< if ,105 >
33:< c ,1 >
33:< < ,204 >
33:< 5 ,2 >
33:< then ,107 >
34:< begin ,113 >
35:< while ,108 >
35:< x ,1 >
35:< > ,206 >
35:< y ,1 >
35:< do ,109 >
36:< begin ,113 >
37:< z ,1 >
37:< = ,307 >
37:< x ,1 >
37:< + ,201 >
37:< 1 ,2 >
37:< ; ,302 >
38:< end ,114 >
39:< end ,114 >
40:< else ,106 >
41:< begin ,113 >
42:< x ,1 >
42:< = ,307 >
42:< y ,1 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
47:< arr ,1 >
47:< [ ,303 >
47:< 3 ,2 >
47:< ] ,304 >
47:< [ ,303 >
47:< 5 ,2 >
47:< ] ,304 >
47:< = ,307 >
47:< 2 ,2 >
47:< ; ,302 >
48:< m ,1 >
48:< = ,307 >
48:< ( ,305 >
48:< m ,1 >
48:< + ,201 >
48:< n ,1 >
48:< ) ,306 >
48:< * ,203 >
48:< 9 ,2 >
48:< ; ,302 >
51:< e ,1 >
51:< = ,307 >
51:< e ,1 >
51:< + ,201 >
51:< a ,1 >
51:< ; ,302 >
51:< // real = real + int , Type conversion ,7 >
53:< call ,110 >
53:< a ,1 >
53:< ( ,305 >
53:< 1 ,2 >
53:< , ,301 >
53:< 2 ,2 >
53:< + ,201 >
53:< 1 ,2 >
53:< , ,301 >
53:< a ,1 >
53:< * ,203 >
53:< b ,1 >
53:< ) ,306 >
53:< ; ,302 >
53:< //Common variable with call ,7 >
54:< e1 ,1 >
54:< = ,307 >
54:< 7 ,2 >
54:< ; ,302 >
54:< // e1 Undefined ,7 >
55:< a ,1 >
55:< = ,307 >
55:< e2 ,1 >
55:< ; ,302 >
55:< // e2 Undefined ,7 >
56:< a ,1 >
56:< [ ,303 >
56:< 0 ,2 >
56:< ] ,304 >
56:< = ,307 >
56:< 1 ,2 >
56:< ; ,302 >
56:< // Non-array using array operators ,7 >
57:< e3 ,1 >
57:< [ ,303 >
57:< 9 ,2 >
57:< ] ,304 >
57:< = ,307 >
57:< 1 ,2 >
57:< ; ,302 >
57:< // e3 Undefined ,7 >
58:< a ,1 >
58:< = ,307 >
58:< a ,1 >
58:< + ,201 >
58:< arr ,1 >
58:< ; ,302 >
58:< // int = int + array, Integer variables are added to array variables  ,7 >
60:< end ,114 >
63:< proc ,101 >
63:< fuction1 ,1 >
63:< ; ,302 >
64:< begin ,113 >
65:< integer ,103 >
65:< f11 ,1 >
65:< ; ,302 >
66:< real ,104 >
66:< f12 ,1 >
66:< ; ,302 >
69:< f11 ,1 >
69:< = ,307 >
69:< 1 ,2 >
69:< ; ,302 >
70:< call ,110 >
70:< fuction2 ,1 >
70:< ( ,305 >
70:< 1 ,2 >
70:< , ,301 >
70:< 2 ,2 >
70:< + ,201 >
70:< 1 ,2 >
70:< , ,301 >
70:< a ,1 >
70:< * ,203 >
70:< b ,1 >
70:< ) ,306 >
70:< ; ,302 >
71:< end ,114 >
72:< # ,-1 >
当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "proc" 单词处发现了错误。当前待输入: fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "fuction1" 单词处发现了错误。当前待输入: ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  ";" 单词处发现了错误。当前待输入: begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[64]:  "begin" 单词处发现了错误。当前待输入: integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "integer" 单词处发现了错误。当前待输入: f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "f11" 单词处发现了错误。当前待输入: ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  ";" 单词处发现了错误。当前待输入: real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "real" 单词处发现了错误。当前待输入: f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "f12" 单词处发现了错误。当前待输入: ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  ";" 单词处发现了错误。当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "f11" 单词处发现了错误。当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "=" 单词处发现了错误。当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "1" 单词处发现了错误。当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  ";" 单词处发现了错误。当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "call" 单词处发现了错误。当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "fuction2" 单词处发现了错误。当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "(" 单词处发现了错误。当前待输入: 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "2" 单词处发现了错误。当前待输入: + 1 , a * b ) ; end # 

Error at Line[70]:  "+" 单词处发现了错误。当前待输入: 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: a * b ) ; end # 

Error at Line[70]:  "a" 单词处发现了错误。当前待输入: * b ) ; end # 

Error at Line[70]:  "*" 单词处发现了错误。当前待输入: b ) ; end # 

Error at Line[70]:  "b" 单词处发现了错误。当前待输入: ) ; end # 

Error at Line[70]:  ")" 单词处发现了错误。当前待输入: ; end # 

Error at Line[70]:  ";" 单词处发现了错误。当前待输入: end # 

Error at Line[71]:  "end" 单词处发现了错误。当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
1:< proc ,101 >
1:< fuction2 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< [ ,303 >
3:< 7 ,2 >
3:< ] ,304 >
3:< [ ,303 >
3:< 6 ,2 >
3:< ] ,304 >
3:< arr ,1 >
3:< ; ,302 >
4:< integer ,103 >
4:< m ,1 >
4:< ; ,302 >
5:< integer ,103 >
5:< n ,1 >
5:< ; ,302 >
6:< integer ,103 >
6:< a ,1 >
6:< ; ,302 >
7:< integer ,103 >
7:< b ,1 >
7:< ; ,302 >
8:< integer ,103 >
8:< c ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< d ,1 >
9:< ; ,302 >
10:< real ,104 >
10:< e ,1 >
10:< ; ,302 >
11:< record ,102 >
11:< real ,104 >
11:< re1 ,1 >
11:< ; ,302 >
11:< integer ,103 >
11:< re2 ,1 >
11:< ; ,302 >
11:< end ,114 >
11:< r1 ,1 >
11:< ; ,302 >
13:< integer ,103 >
13:< x ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< y ,1 >
14:< ; ,302 >
15:< integer ,103 >
15:< z ,1 >
15:< ; ,302 >
16:< integer ,103 >
16:< z ,1 >
16:< ; ,302 >
16:< // Duplicate definition ,7 >
19:< while ,108 >
19:< a ,1 >
19:< < ,204 >
19:< b ,1 >
19:< do ,109 >
20:< begin ,113 >
21:< if ,105 >
21:< c ,1 >
21:< < ,204 >
21:< d ,1 >
21:< then ,107 >
22:< begin ,113 >
23:< x ,1 >
23:< = ,307 >
23:< y ,1 >
23:< + ,201 >
23:< z ,1 >
23:< ; ,302 >
24:< end ,114 >
25:< else ,106 >
26:< begin ,113 >
27:< x ,1 >
27:< = ,307 >
27:< y ,1 >
27:< * ,203 >
27:< z ,1 >
27:< ; ,302 >
28:< end ,114 >
29:< end ,114 >
31:< while ,108 >
31:< a ,1 >
31:< < ,204 >
31:< b ,1 >
31:< do ,109 >
32:< begin ,113 >
33:< if ,105 >
33:< c ,1 >
33:< < ,204 >
33:< 5 ,2 >
33:< then ,107 >
34:< begin ,113 >
35:< while ,108 >
35:< x ,1 >
35:< > ,206 >
35:< y ,1 >
35:< do ,109 >
36:< begin ,113 >
37:< z ,1 >
37:< = ,307 >
37:< x ,1 >
37:< + ,201 >
37:< 1 ,2 >
37:< ; ,302 >
38:< end ,114 >
39:< end ,114 >
40:< else ,106 >
41:< begin ,113 >
42:< x ,1 >
42:< = ,307 >
42:< y ,1 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
47:< arr ,1 >
47:< [ ,303 >
47:< 3 ,2 >
47:< ] ,304 >
47:< [ ,303 >
47:< 5 ,2 >
47:< ] ,304 >
47:< = ,307 >
47:< 2 ,2 >
47:< ; ,302 >
48:< m ,1 >
48:< = ,307 >
48:< ( ,305 >
48:< m ,1 >
48:< + ,201 >
48:< n ,1 >
48:< ) ,306 >
48:< * ,203 >
48:< 9 ,2 >
48:< ; ,302 >
51:< e ,1 >
51:< = ,307 >
51:< e ,1 >
51:< + ,201 >
51:< a ,1 >
51:< ; ,302 >
51:< // real = real + int , Type conversion ,7 >
53:< call ,110 >
53:< a ,1 >
53:< ( ,305 >
53:< 1 ,2 >
53:< , ,301 >
53:< 2 ,2 >
53:< + ,201 >
53:< 1 ,2 >
53:< , ,301 >
53:< a ,1 >
53:< * ,203 >
53:< b ,1 >
53:< ) ,306 >
53:< ; ,302 >
53:< //Common variable with call ,7 >
54:< e1 ,1 >
54:< = ,307 >
54:< 7 ,2 >
54:< ; ,302 >
54:< // e1 Undefined ,7 >
55:< a ,1 >
55:< = ,307 >
55:< e2 ,1 >
55:< ; ,302 >
55:< // e2 Undefined ,7 >
56:< a ,1 >
56:< [ ,303 >
56:< 0 ,2 >
56:< ] ,304 >
56:< = ,307 >
56:< 1 ,2 >
56:< ; ,302 >
56:< // Non-array using array operators ,7 >
57:< e3 ,1 >
57:< [ ,303 >
57:< 9 ,2 >
57:< ] ,304 >
57:< = ,307 >
57:< 1 ,2 >
57:< ; ,302 >
57:< // e3 Undefined ,7 >
58:< a ,1 >
58:< = ,307 >
58:< a ,1 >
58:< + ,201 >
58:< arr ,1 >
58:< ; ,302 >
58:< // int = int + array, Integer variables are added to array variables  ,7 >
60:< end ,114 >
63:< proc ,101 >
63:< fuction1 ,1 >
63:< ; ,302 >
64:< begin ,113 >
65:< integer ,103 >
65:< f11 ,1 >
65:< ; ,302 >
66:< real ,104 >
66:< f12 ,1 >
66:< ; ,302 >
69:< f11 ,1 >
69:< = ,307 >
69:< 1 ,2 >
69:< ; ,302 >
70:< call ,110 >
70:< fuction2 ,1 >
70:< ( ,305 >
70:< 1 ,2 >
70:< , ,301 >
70:< 2 ,2 >
70:< + ,201 >
70:< 1 ,2 >
70:< , ,301 >
70:< a ,1 >
70:< * ,203 >
70:< b ,1 >
70:< ) ,306 >
70:< ; ,302 >
71:< end ,114 >
72:< # ,-1 >
当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "proc" 单词处发现了错误。当前待输入: fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "fuction1" 单词处发现了错误。当前待输入: ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  ";" 单词处发现了错误。当前待输入: begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[64]:  "begin" 单词处发现了错误。当前待输入: integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "integer" 单词处发现了错误。当前待输入: f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "f11" 单词处发现了错误。当前待输入: ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  ";" 单词处发现了错误。当前待输入: real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "real" 单词处发现了错误。当前待输入: f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "f12" 单词处发现了错误。当前待输入: ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  ";" 单词处发现了错误。当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "f11" 单词处发现了错误。当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "=" 单词处发现了错误。当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "1" 单词处发现了错误。当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  ";" 单词处发现了错误。当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "call" 单词处发现了错误。当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "fuction2" 单词处发现了错误。当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "(" 单词处发现了错误。当前待输入: 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "2" 单词处发现了错误。当前待输入: + 1 , a * b ) ; end # 

Error at Line[70]:  "+" 单词处发现了错误。当前待输入: 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: a * b ) ; end # 

Error at Line[70]:  "a" 单词处发现了错误。当前待输入: * b ) ; end # 

Error at Line[70]:  "*" 单词处发现了错误。当前待输入: b ) ; end # 

Error at Line[70]:  "b" 单词处发现了错误。当前待输入: ) ; end # 

Error at Line[70]:  ")" 单词处发现了错误。当前待输入: ; end # 

Error at Line[70]:  ";" 单词处发现了错误。当前待输入: end # 

Error at Line[71]:  "end" 单词处发现了错误。当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
1:< proc ,101 >
1:< fuction2 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< [ ,303 >
3:< 7 ,2 >
3:< ] ,304 >
3:< [ ,303 >
3:< 6 ,2 >
3:< ] ,304 >
3:< arr ,1 >
3:< ; ,302 >
4:< integer ,103 >
4:< m ,1 >
4:< ; ,302 >
5:< integer ,103 >
5:< n ,1 >
5:< ; ,302 >
6:< integer ,103 >
6:< a ,1 >
6:< ; ,302 >
7:< integer ,103 >
7:< b ,1 >
7:< ; ,302 >
8:< integer ,103 >
8:< c ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< d ,1 >
9:< ; ,302 >
10:< real ,104 >
10:< e ,1 >
10:< ; ,302 >
11:< record ,102 >
11:< real ,104 >
11:< re1 ,1 >
11:< ; ,302 >
11:< integer ,103 >
11:< re2 ,1 >
11:< ; ,302 >
11:< end ,114 >
11:< r1 ,1 >
11:< ; ,302 >
13:< integer ,103 >
13:< x ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< y ,1 >
14:< ; ,302 >
15:< integer ,103 >
15:< z ,1 >
15:< ; ,302 >
16:< integer ,103 >
16:< z ,1 >
16:< ; ,302 >
16:< // Duplicate definition ,7 >
19:< while ,108 >
19:< a ,1 >
19:< < ,204 >
19:< b ,1 >
19:< do ,109 >
20:< begin ,113 >
21:< if ,105 >
21:< c ,1 >
21:< < ,204 >
21:< d ,1 >
21:< then ,107 >
22:< begin ,113 >
23:< x ,1 >
23:< = ,307 >
23:< y ,1 >
23:< + ,201 >
23:< z ,1 >
23:< ; ,302 >
24:< end ,114 >
25:< else ,106 >
26:< begin ,113 >
27:< x ,1 >
27:< = ,307 >
27:< y ,1 >
27:< * ,203 >
27:< z ,1 >
27:< ; ,302 >
28:< end ,114 >
29:< end ,114 >
31:< while ,108 >
31:< a ,1 >
31:< < ,204 >
31:< b ,1 >
31:< do ,109 >
32:< begin ,113 >
33:< if ,105 >
33:< c ,1 >
33:< < ,204 >
33:< 5 ,2 >
33:< then ,107 >
34:< begin ,113 >
35:< while ,108 >
35:< x ,1 >
35:< > ,206 >
35:< y ,1 >
35:< do ,109 >
36:< begin ,113 >
37:< z ,1 >
37:< = ,307 >
37:< x ,1 >
37:< + ,201 >
37:< 1 ,2 >
37:< ; ,302 >
38:< end ,114 >
39:< end ,114 >
40:< else ,106 >
41:< begin ,113 >
42:< x ,1 >
42:< = ,307 >
42:< y ,1 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
47:< arr ,1 >
47:< [ ,303 >
47:< 3 ,2 >
47:< ] ,304 >
47:< [ ,303 >
47:< 5 ,2 >
47:< ] ,304 >
47:< = ,307 >
47:< 2 ,2 >
47:< ; ,302 >
48:< m ,1 >
48:< = ,307 >
48:< ( ,305 >
48:< m ,1 >
48:< + ,201 >
48:< n ,1 >
48:< ) ,306 >
48:< * ,203 >
48:< 9 ,2 >
48:< ; ,302 >
51:< e ,1 >
51:< = ,307 >
51:< e ,1 >
51:< + ,201 >
51:< a ,1 >
51:< ; ,302 >
51:< // real = real + int , Type conversion ,7 >
53:< call ,110 >
53:< a ,1 >
53:< ( ,305 >
53:< 1 ,2 >
53:< , ,301 >
53:< 2 ,2 >
53:< + ,201 >
53:< 1 ,2 >
53:< , ,301 >
53:< a ,1 >
53:< * ,203 >
53:< b ,1 >
53:< ) ,306 >
53:< ; ,302 >
53:< //Common variable with call ,7 >
54:< e1 ,1 >
54:< = ,307 >
54:< 7 ,2 >
54:< ; ,302 >
54:< // e1 Undefined ,7 >
55:< a ,1 >
55:< = ,307 >
55:< e2 ,1 >
55:< ; ,302 >
55:< // e2 Undefined ,7 >
56:< a ,1 >
56:< [ ,303 >
56:< 0 ,2 >
56:< ] ,304 >
56:< = ,307 >
56:< 1 ,2 >
56:< ; ,302 >
56:< // Non-array using array operators ,7 >
57:< e3 ,1 >
57:< [ ,303 >
57:< 9 ,2 >
57:< ] ,304 >
57:< = ,307 >
57:< 1 ,2 >
57:< ; ,302 >
57:< // e3 Undefined ,7 >
58:< a ,1 >
58:< = ,307 >
58:< a ,1 >
58:< + ,201 >
58:< arr ,1 >
58:< ; ,302 >
58:< // int = int + array, Integer variables are added to array variables  ,7 >
60:< end ,114 >
63:< proc ,101 >
63:< fuction1 ,1 >
63:< ; ,302 >
64:< begin ,113 >
65:< integer ,103 >
65:< f11 ,1 >
65:< ; ,302 >
66:< real ,104 >
66:< f12 ,1 >
66:< ; ,302 >
69:< f11 ,1 >
69:< = ,307 >
69:< 1 ,2 >
69:< ; ,302 >
70:< call ,110 >
70:< fuction2 ,1 >
70:< ( ,305 >
70:< 1 ,2 >
70:< , ,301 >
70:< 2 ,2 >
70:< + ,201 >
70:< 1 ,2 >
70:< , ,301 >
70:< a ,1 >
70:< * ,203 >
70:< b ,1 >
70:< ) ,306 >
70:< ; ,302 >
71:< end ,114 >
72:< # ,-1 >
当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "proc" 单词处发现了错误。当前待输入: fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "fuction1" 单词处发现了错误。当前待输入: ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  ";" 单词处发现了错误。当前待输入: begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[64]:  "begin" 单词处发现了错误。当前待输入: integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "integer" 单词处发现了错误。当前待输入: f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "f11" 单词处发现了错误。当前待输入: ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  ";" 单词处发现了错误。当前待输入: real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "real" 单词处发现了错误。当前待输入: f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "f12" 单词处发现了错误。当前待输入: ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  ";" 单词处发现了错误。当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "f11" 单词处发现了错误。当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "=" 单词处发现了错误。当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "1" 单词处发现了错误。当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  ";" 单词处发现了错误。当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "call" 单词处发现了错误。当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "fuction2" 单词处发现了错误。当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "(" 单词处发现了错误。当前待输入: 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "2" 单词处发现了错误。当前待输入: + 1 , a * b ) ; end # 

Error at Line[70]:  "+" 单词处发现了错误。当前待输入: 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: a * b ) ; end # 

Error at Line[70]:  "a" 单词处发现了错误。当前待输入: * b ) ; end # 

Error at Line[70]:  "*" 单词处发现了错误。当前待输入: b ) ; end # 

Error at Line[70]:  "b" 单词处发现了错误。当前待输入: ) ; end # 

Error at Line[70]:  ")" 单词处发现了错误。当前待输入: ; end # 

Error at Line[70]:  ";" 单词处发现了错误。当前待输入: end # 

Error at Line[71]:  "end" 单词处发现了错误。当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
1:< proc ,101 >
1:< fuction2 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< [ ,303 >
3:< 7 ,2 >
3:< ] ,304 >
3:< [ ,303 >
3:< 6 ,2 >
3:< ] ,304 >
3:< arr ,1 >
3:< ; ,302 >
4:< integer ,103 >
4:< m ,1 >
4:< ; ,302 >
5:< integer ,103 >
5:< n ,1 >
5:< ; ,302 >
6:< integer ,103 >
6:< a ,1 >
6:< ; ,302 >
7:< integer ,103 >
7:< b ,1 >
7:< ; ,302 >
8:< integer ,103 >
8:< c ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< d ,1 >
9:< ; ,302 >
10:< real ,104 >
10:< e ,1 >
10:< ; ,302 >
11:< record ,102 >
11:< real ,104 >
11:< re1 ,1 >
11:< ; ,302 >
11:< integer ,103 >
11:< re2 ,1 >
11:< ; ,302 >
11:< end ,114 >
11:< r1 ,1 >
11:< ; ,302 >
13:< integer ,103 >
13:< x ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< y ,1 >
14:< ; ,302 >
15:< integer ,103 >
15:< z ,1 >
15:< ; ,302 >
16:< integer ,103 >
16:< z ,1 >
16:< ; ,302 >
16:< // Duplicate definition ,7 >
19:< while ,108 >
19:< a ,1 >
19:< < ,204 >
19:< b ,1 >
19:< do ,109 >
20:< begin ,113 >
21:< if ,105 >
21:< c ,1 >
21:< < ,204 >
21:< d ,1 >
21:< then ,107 >
22:< begin ,113 >
23:< x ,1 >
23:< = ,307 >
23:< y ,1 >
23:< + ,201 >
23:< z ,1 >
23:< ; ,302 >
24:< end ,114 >
25:< else ,106 >
26:< begin ,113 >
27:< x ,1 >
27:< = ,307 >
27:< y ,1 >
27:< * ,203 >
27:< z ,1 >
27:< ; ,302 >
28:< end ,114 >
29:< end ,114 >
31:< while ,108 >
31:< a ,1 >
31:< < ,204 >
31:< b ,1 >
31:< do ,109 >
32:< begin ,113 >
33:< if ,105 >
33:< c ,1 >
33:< < ,204 >
33:< 5 ,2 >
33:< then ,107 >
34:< begin ,113 >
35:< while ,108 >
35:< x ,1 >
35:< > ,206 >
35:< y ,1 >
35:< do ,109 >
36:< begin ,113 >
37:< z ,1 >
37:< = ,307 >
37:< x ,1 >
37:< + ,201 >
37:< 1 ,2 >
37:< ; ,302 >
38:< end ,114 >
39:< end ,114 >
40:< else ,106 >
41:< begin ,113 >
42:< x ,1 >
42:< = ,307 >
42:< y ,1 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
47:< arr ,1 >
47:< [ ,303 >
47:< 3 ,2 >
47:< ] ,304 >
47:< [ ,303 >
47:< 5 ,2 >
47:< ] ,304 >
47:< = ,307 >
47:< 2 ,2 >
47:< ; ,302 >
48:< m ,1 >
48:< = ,307 >
48:< ( ,305 >
48:< m ,1 >
48:< + ,201 >
48:< n ,1 >
48:< ) ,306 >
48:< * ,203 >
48:< 9 ,2 >
48:< ; ,302 >
51:< e ,1 >
51:< = ,307 >
51:< e ,1 >
51:< + ,201 >
51:< a ,1 >
51:< ; ,302 >
51:< // real = real + int , Type conversion ,7 >
53:< call ,110 >
53:< a ,1 >
53:< ( ,305 >
53:< 1 ,2 >
53:< , ,301 >
53:< 2 ,2 >
53:< + ,201 >
53:< 1 ,2 >
53:< , ,301 >
53:< a ,1 >
53:< * ,203 >
53:< b ,1 >
53:< ) ,306 >
53:< ; ,302 >
53:< //Common variable with call ,7 >
54:< e1 ,1 >
54:< = ,307 >
54:< 7 ,2 >
54:< ; ,302 >
54:< // e1 Undefined ,7 >
55:< a ,1 >
55:< = ,307 >
55:< e2 ,1 >
55:< ; ,302 >
55:< // e2 Undefined ,7 >
56:< a ,1 >
56:< [ ,303 >
56:< 0 ,2 >
56:< ] ,304 >
56:< = ,307 >
56:< 1 ,2 >
56:< ; ,302 >
56:< // Non-array using array operators ,7 >
57:< e3 ,1 >
57:< [ ,303 >
57:< 9 ,2 >
57:< ] ,304 >
57:< = ,307 >
57:< 1 ,2 >
57:< ; ,302 >
57:< // e3 Undefined ,7 >
58:< a ,1 >
58:< = ,307 >
58:< a ,1 >
58:< + ,201 >
58:< arr ,1 >
58:< ; ,302 >
58:< // int = int + array, Integer variables are added to array variables  ,7 >
60:< end ,114 >
63:< proc ,101 >
63:< fuction1 ,1 >
63:< ; ,302 >
64:< begin ,113 >
65:< integer ,103 >
65:< f11 ,1 >
65:< ; ,302 >
66:< real ,104 >
66:< f12 ,1 >
66:< ; ,302 >
69:< f11 ,1 >
69:< = ,307 >
69:< 1 ,2 >
69:< ; ,302 >
70:< call ,110 >
70:< fuction2 ,1 >
70:< ( ,305 >
70:< 1 ,2 >
70:< , ,301 >
70:< 2 ,2 >
70:< + ,201 >
70:< 1 ,2 >
70:< , ,301 >
70:< a ,1 >
70:< * ,203 >
70:< b ,1 >
70:< ) ,306 >
70:< ; ,302 >
71:< end ,114 >
72:< # ,-1 >
当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "proc" 单词处发现了错误。当前待输入: fuction1 ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  "fuction1" 单词处发现了错误。当前待输入: ; begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[63]:  ";" 单词处发现了错误。当前待输入: begin integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[64]:  "begin" 单词处发现了错误。当前待输入: integer f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "integer" 单词处发现了错误。当前待输入: f11 ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  "f11" 单词处发现了错误。当前待输入: ; real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[65]:  ";" 单词处发现了错误。当前待输入: real f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "real" 单词处发现了错误。当前待输入: f12 ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  "f12" 单词处发现了错误。当前待输入: ; f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[66]:  ";" 单词处发现了错误。当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "f11" 单词处发现了错误。当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "=" 单词处发现了错误。当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  "1" 单词处发现了错误。当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[69]:  ";" 单词处发现了错误。当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "call" 单词处发现了错误。当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "fuction2" 单词处发现了错误。当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "(" 单词处发现了错误。当前待输入: 1 , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: 2 + 1 , a * b ) ; end # 

Error at Line[70]:  "2" 单词处发现了错误。当前待输入: + 1 , a * b ) ; end # 

Error at Line[70]:  "+" 单词处发现了错误。当前待输入: 1 , a * b ) ; end # 

Error at Line[70]:  "1" 单词处发现了错误。当前待输入: , a * b ) ; end # 

Error at Line[70]:  "," 单词处发现了错误。当前待输入: a * b ) ; end # 

Error at Line[70]:  "a" 单词处发现了错误。当前待输入: * b ) ; end # 

Error at Line[70]:  "*" 单词处发现了错误。当前待输入: b ) ; end # 

Error at Line[70]:  "b" 单词处发现了错误。当前待输入: ) ; end # 

Error at Line[70]:  ")" 单词处发现了错误。当前待输入: ; end # 

Error at Line[70]:  ";" 单词处发现了错误。当前待输入: end # 

Error at Line[71]:  "end" 单词处发现了错误。当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
21:< integer ,103 >
21:< z ,1 >
21:< ; ,302 >
21:< // Duplicate definition ,7 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
58:< call ,110 >
58:< a ,1 >
58:< ( ,305 >
58:< 1 ,2 >
58:< , ,301 >
58:< 2 ,2 >
58:< + ,201 >
58:< 1 ,2 >
58:< , ,301 >
58:< a ,1 >
58:< * ,203 >
58:< b ,1 >
58:< ) ,306 >
58:< ; ,302 >
58:< //Common variable with call ,7 >
59:< e1 ,1 >
59:< = ,307 >
59:< 7 ,2 >
59:< ; ,302 >
59:< // e1 Undefined ,7 >
60:< a ,1 >
60:< = ,307 >
60:< e2 ,1 >
60:< ; ,302 >
60:< // e2 Undefined ,7 >
61:< a ,1 >
61:< [ ,303 >
61:< 0 ,2 >
61:< ] ,304 >
61:< = ,307 >
61:< 1 ,2 >
61:< ; ,302 >
61:< // Non-array using array operators ,7 >
62:< e3 ,1 >
62:< [ ,303 >
62:< 9 ,2 >
62:< ] ,304 >
62:< = ,307 >
62:< 1 ,2 >
62:< ; ,302 >
62:< // e3 Undefined ,7 >
63:< a ,1 >
63:< = ,307 >
63:< a ,1 >
63:< + ,201 >
63:< arr ,1 >
63:< ; ,302 >
63:< // int = int + array, Integer variables are added to array variables  ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
23:< while ,108 >
23:< a ,1 >
23:< < ,204 >
23:< b ,1 >
23:< do ,109 >
24:< begin ,113 >
25:< if ,105 >
25:< c ,1 >
25:< < ,204 >
25:< d ,1 >
25:< then ,107 >
26:< begin ,113 >
27:< x ,1 >
27:< = ,307 >
27:< y ,1 >
27:< + ,201 >
27:< z ,1 >
27:< ; ,302 >
28:< end ,114 >
29:< else ,106 >
30:< begin ,113 >
31:< x ,1 >
31:< = ,307 >
31:< y ,1 >
31:< * ,203 >
31:< z ,1 >
31:< ; ,302 >
32:< end ,114 >
33:< end ,114 >
36:< arr ,1 >
36:< [ ,303 >
36:< 3 ,2 >
36:< ] ,304 >
36:< [ ,303 >
36:< 5 ,2 >
36:< ] ,304 >
36:< = ,307 >
36:< 2 ,2 >
36:< ; ,302 >
37:< m ,1 >
37:< = ,307 >
37:< ( ,305 >
37:< m ,1 >
37:< + ,201 >
37:< n ,1 >
37:< ) ,306 >
37:< * ,203 >
37:< 9 ,2 >
37:< ; ,302 >
40:< e ,1 >
40:< = ,307 >
40:< e ,1 >
40:< + ,201 >
40:< a ,1 >
40:< ; ,302 >
40:< // real = real + int , Type conversion ,7 >
41:< end ,114 >
43:< proc ,101 >
43:< fuction2 ,1 >
43:< ; ,302 >
44:< begin ,113 >
45:< integer ,103 >
45:< a ,1 >
45:< ; ,302 >
46:< integer ,103 >
46:< b ,1 >
46:< ; ,302 >
47:< real ,104 >
47:< e ,1 >
47:< ; ,302 >
48:< record ,102 >
48:< real ,104 >
48:< re1 ,1 >
48:< ; ,302 >
48:< integer ,103 >
48:< re2 ,1 >
48:< ; ,302 >
48:< end ,114 >
48:< r1 ,1 >
48:< ; ,302 >
50:< e ,1 >
50:< = ,307 >
50:< e ,1 >
50:< + ,201 >
50:< a ,1 >
50:< ; ,302 >
50:< // real = real + int , Type conversion ,7 >
51:< end ,114 >
53:< f11 ,1 >
53:< = ,307 >
53:< 1 ,2 >
53:< ; ,302 >
54:< call ,110 >
54:< fuction2 ,1 >
54:< ( ,305 >
54:< 1 ,2 >
54:< , ,301 >
54:< 2 ,2 >
54:< + ,201 >
54:< 1 ,2 >
54:< , ,301 >
54:< a ,1 >
54:< * ,203 >
54:< b ,1 >
54:< ) ,306 >
54:< ; ,302 >
55:< end ,114 >
56:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: proc fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: e = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{221,M,--} -> 
{223,E2,--} -> {222,id,a}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,R,--} -> {226,<,<}
{229,E2,--} -> {228,id,b}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{232,B2,--} -> {225,E,--}{227,R,--}{231,E,--}
{233,B1,--} -> {232,B2,--}
{234,B,--} -> {233,B1,--}
{236,M,--} -> 
{240,E2,--} -> {239,id,c}
{241,E1,--} -> {240,E2,--}
{242,E,--} -> {241,E1,--}
{244,R,--} -> {243,<,<}
{246,E2,--} -> {245,num,5}
{247,E1,--} -> {246,E2,--}
{248,E,--} -> {247,E1,--}
{249,B2,--} -> {242,E,--}{244,R,--}{248,E,--}
{250,B1,--} -> {249,B2,--}
{251,B,--} -> {250,B1,--}
{253,M,--} -> 
{256,M,--} -> 
{258,E2,--} -> {257,id,x}
{259,E1,--} -> {258,E2,--}
{260,E,--} -> {259,E1,--}
{262,R,--} -> {261,>,>}
{264,E2,--} -> {263,id,y}
{265,E1,--} -> {264,E2,--}
{266,E,--} -> {265,E1,--}
{267,B2,--} -> {260,E,--}{262,R,--}{266,E,--}
{268,B1,--} -> {267,B2,--}
{269,B,--} -> {268,B1,--}
{271,M,--} -> 
{276,E2,--} -> {275,id,x}
{277,E1,--} -> {276,E2,--}
{278,E,--} -> {277,E1,--}
{281,E2,--} -> {280,num,1}
{282,E1,--} -> {281,E2,--}
{283,E,--} -> {278,E,--}{279,+,+}{282,E1,--}
{285,S,--} -> {273,id,z}{274,=,=}{283,E,--}{284,;,;}
{286,S3,--} -> {285,S,--}
{288,S0,--} -> {272,begin,begin}{286,S3,--}{287,end,end}
{289,S1,--} -> {255,while,while}{256,M,--}{269,B,--}{270,do,do}{271,M,--}{288,S0,--}
{290,S,--} -> {289,S1,--}
{291,S3,--} -> {290,S,--}
{293,S1,--} -> {254,begin,begin}{291,S3,--}{292,end,end}
{294,N,--} -> 
{296,M,--} -> 
{301,E2,--} -> {300,id,y}
{302,E1,--} -> {301,E2,--}
{303,E,--} -> {302,E1,--}
{305,S,--} -> {298,id,x}{299,=,=}{303,E,--}{304,;,;}
{306,S3,--} -> {305,S,--}
{308,S2,--} -> {297,begin,begin}{306,S3,--}{307,end,end}
{309,S2,--} -> {238,if,if}{251,B,--}{252,then,then}{253,M,--}{293,S1,--}{294,N,--}{295,else,else}{296,M,--}{308,S2,--}
{310,S,--} -> {309,S2,--}
{311,S3,--} -> {310,S,--}
{313,S0,--} -> {237,begin,begin}{311,S3,--}{312,end,end}
{314,S1,--} -> {220,while,while}{221,M,--}{234,B,--}{235,do,do}{236,M,--}{313,S0,--}
{315,S,--} -> {314,S1,--}
{316,M,--} -> 
{320,E2,--} -> {319,num,3}
{321,E1,--} -> {320,E2,--}
{322,E,--} -> {321,E1,--}
{324,L,--} -> {317,id,arr}{318,[,[}{322,E,--}{323,],]}
{327,E2,--} -> {326,num,5}
{328,E1,--} -> {327,E2,--}
{329,E,--} -> {328,E1,--}
{331,L,--} -> {324,L,--}{325,[,[}{329,E,--}{330,],]}
{334,E2,--} -> {333,num,2}
{335,E1,--} -> {334,E2,--}
{336,E,--} -> {335,E1,--}
{338,S,--} -> {331,L,--}{332,=,=}{336,E,--}{337,;,;}
{339,M,--} -> 
{344,E2,--} -> {343,id,m}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{349,E2,--} -> {348,id,n}
{350,E1,--} -> {349,E2,--}
{351,E,--} -> {346,E,--}{347,+,+}{350,E1,--}
{353,E2,--} -> {342,(,(}{351,E,--}{352,),)}
{354,E1,--} -> {353,E2,--}
{357,E2,--} -> {356,num,9}
{358,E1,--} -> {354,E1,--}{355,*,*}{357,E2,--}
{359,E,--} -> {358,E1,--}
{361,S,--} -> {340,id,m}{341,=,=}{359,E,--}{360,;,;}
{362,M,--} -> 
{366,E2,--} -> {365,id,e}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{371,E2,--} -> {370,id,a}
{372,E1,--} -> {371,E2,--}
{373,E,--} -> {368,E,--}{369,+,+}{372,E1,--}
{375,S,--} -> {363,id,e}{364,=,=}{373,E,--}{374,;,;}
{376,S,--} -> {361,S,--}{362,M,--}{375,S,--}
{377,S,--} -> {338,S,--}{339,M,--}{376,S,--}
{378,S,--} -> {315,S,--}{316,M,--}{377,S,--}
{379,S,--} -> {218,S,--}{219,M,--}{378,S,--}
{381,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{379,S,--}{380,end,end}
{382,D,--} -> {18,D,--}{381,D,--}
{383,D,--} -> {11,D,--}{382,D,--}
{387,E2,--} -> {386,num,1}
{388,E1,--} -> {387,E2,--}
{389,E,--} -> {388,E1,--}
{391,S,--} -> {384,id,f11}{385,=,=}{389,E,--}{390,;,;}
{392,M,--} -> 
{397,E2,--} -> {396,num,1}
{398,E1,--} -> {397,E2,--}
{399,E,--} -> {398,E1,--}
{400,EL,--} -> {399,E,--}
{403,E2,--} -> {402,num,2}
{404,E1,--} -> {403,E2,--}
{405,E,--} -> {404,E1,--}
{408,E2,--} -> {407,num,1}
{409,E1,--} -> {408,E2,--}
{410,E,--} -> {405,E,--}{406,+,+}{409,E1,--}
{411,EL,--} -> {400,EL,--}{401,,,,}{410,E,--}
{414,E2,--} -> {413,id,a}
{415,E1,--} -> {414,E2,--}
{418,E2,--} -> {417,id,b}
{419,E1,--} -> {415,E1,--}{416,*,*}{418,E2,--}
{420,E,--} -> {419,E1,--}
{421,EL,--} -> {411,EL,--}{412,,,,}{420,E,--}
{424,S,--} -> {393,call,call}{394,id,fuction2}{395,(,(}{421,EL,--}{422,),)}{423,;,;}
{425,S,--} -> {391,S,--}{392,M,--}{424,S,--}
{427,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{383,D,--}{425,S,--}{426,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{13,C,--} -> 
{14,C,--} -> {10,[,[}{11,num,6}{12,],]}{13,C,--}
{15,C,--} -> {7,[,[}{8,num,7}{9,],]}{14,C,--}
{16,T,--} -> {6,X,--}{15,C,--}
{19,D,--} -> {16,T,--}{17,id,arr}{18,;,;}
{21,X,--} -> {20,integer,integer}
{22,C,--} -> 
{23,T,--} -> {21,X,--}{22,C,--}
{26,D,--} -> {23,T,--}{24,id,m}{25,;,;}
{28,X,--} -> {27,integer,integer}
{29,C,--} -> 
{30,T,--} -> {28,X,--}{29,C,--}
{33,D,--} -> {30,T,--}{31,id,n}{32,;,;}
{35,X,--} -> {34,integer,integer}
{36,C,--} -> 
{37,T,--} -> {35,X,--}{36,C,--}
{40,D,--} -> {37,T,--}{38,id,a}{39,;,;}
{42,X,--} -> {41,integer,integer}
{43,C,--} -> 
{44,T,--} -> {42,X,--}{43,C,--}
{47,D,--} -> {44,T,--}{45,id,b}{46,;,;}
{49,X,--} -> {48,integer,integer}
{50,C,--} -> 
{51,T,--} -> {49,X,--}{50,C,--}
{54,D,--} -> {51,T,--}{52,id,c}{53,;,;}
{56,X,--} -> {55,integer,integer}
{57,C,--} -> 
{58,T,--} -> {56,X,--}{57,C,--}
{61,D,--} -> {58,T,--}{59,id,d}{60,;,;}
{63,X,--} -> {62,real,real}
{64,C,--} -> 
{65,T,--} -> {63,X,--}{64,C,--}
{68,D,--} -> {65,T,--}{66,id,e}{67,;,;}
{70,N2,--} -> 
{72,X,--} -> {71,real,real}
{73,C,--} -> 
{74,T,--} -> {72,X,--}{73,C,--}
{77,D,--} -> {74,T,--}{75,id,re1}{76,;,;}
{79,X,--} -> {78,integer,integer}
{80,C,--} -> 
{81,T,--} -> {79,X,--}{80,C,--}
{84,D,--} -> {81,T,--}{82,id,re2}{83,;,;}
{85,D,--} -> {77,D,--}{84,D,--}
{87,T,--} -> {69,record,record}{70,N2,--}{85,D,--}{86,end,end}
{90,D,--} -> {87,T,--}{88,id,r1}{89,;,;}
{92,X,--} -> {91,integer,integer}
{93,C,--} -> 
{94,T,--} -> {92,X,--}{93,C,--}
{97,D,--} -> {94,T,--}{95,id,x}{96,;,;}
{99,X,--} -> {98,integer,integer}
{100,C,--} -> 
{101,T,--} -> {99,X,--}{100,C,--}
{104,D,--} -> {101,T,--}{102,id,y}{103,;,;}
{106,X,--} -> {105,integer,integer}
{107,C,--} -> 
{108,T,--} -> {106,X,--}{107,C,--}
{111,D,--} -> {108,T,--}{109,id,z}{110,;,;}
{113,X,--} -> {112,integer,integer}
{114,C,--} -> 
{115,T,--} -> {113,X,--}{114,C,--}
{118,D,--} -> {115,T,--}{116,id,z}{117,;,;}
{119,D,--} -> {111,D,--}{118,D,--}
{120,D,--} -> {104,D,--}{119,D,--}
{121,D,--} -> {97,D,--}{120,D,--}
{122,D,--} -> {90,D,--}{121,D,--}
{123,D,--} -> {68,D,--}{122,D,--}
{124,D,--} -> {61,D,--}{123,D,--}
{125,D,--} -> {54,D,--}{124,D,--}
{126,D,--} -> {47,D,--}{125,D,--}
{127,D,--} -> {40,D,--}{126,D,--}
{128,D,--} -> {33,D,--}{127,D,--}
{129,D,--} -> {26,D,--}{128,D,--}
{130,D,--} -> {19,D,--}{129,D,--}
{132,M,--} -> 
{134,E2,--} -> {133,id,a}
{135,E1,--} -> {134,E2,--}
{136,E,--} -> {135,E1,--}
{138,R,--} -> {137,<,<}
{140,E2,--} -> {139,id,b}
{141,E1,--} -> {140,E2,--}
{142,E,--} -> {141,E1,--}
{143,B2,--} -> {136,E,--}{138,R,--}{142,E,--}
{144,B1,--} -> {143,B2,--}
{145,B,--} -> {144,B1,--}
{147,M,--} -> 
{151,E2,--} -> {150,id,c}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{155,R,--} -> {154,<,<}
{157,E2,--} -> {156,id,d}
{158,E1,--} -> {157,E2,--}
{159,E,--} -> {158,E1,--}
{160,B2,--} -> {153,E,--}{155,R,--}{159,E,--}
{161,B1,--} -> {160,B2,--}
{162,B,--} -> {161,B1,--}
{164,M,--} -> 
{169,E2,--} -> {168,id,y}
{170,E1,--} -> {169,E2,--}
{171,E,--} -> {170,E1,--}
{174,E2,--} -> {173,id,z}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {171,E,--}{172,+,+}{175,E1,--}
{178,S,--} -> {166,id,x}{167,=,=}{176,E,--}{177,;,;}
{179,S3,--} -> {178,S,--}
{181,S1,--} -> {165,begin,begin}{179,S3,--}{180,end,end}
{182,N,--} -> 
{184,M,--} -> 
{189,E2,--} -> {188,id,y}
{190,E1,--} -> {189,E2,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {190,E1,--}{191,*,*}{193,E2,--}
{195,E,--} -> {194,E1,--}
{197,S,--} -> {186,id,x}{187,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S2,--} -> {185,begin,begin}{198,S3,--}{199,end,end}
{201,S2,--} -> {149,if,if}{162,B,--}{163,then,then}{164,M,--}{181,S1,--}{182,N,--}{183,else,else}{184,M,--}{200,S2,--}
{202,S,--} -> {201,S2,--}
{203,S3,--} -> {202,S,--}
{205,S0,--} -> {148,begin,begin}{203,S3,--}{204,end,end}
{206,S1,--} -> {131,while,while}{132,M,--}{145,B,--}{146,do,do}{147,M,--}{205,S0,--}
{207,S,--} -> {206,S1,--}
{208,M,--} -> 
{210,M,--} -> 
{212,E2,--} -> {211,id,a}
{213,E1,--} -> {212,E2,--}
{214,E,--} -> {213,E1,--}
{216,R,--} -> {215,<,<}
{218,E2,--} -> {217,id,b}
{219,E1,--} -> {218,E2,--}
{220,E,--} -> {219,E1,--}
{221,B2,--} -> {214,E,--}{216,R,--}{220,E,--}
{222,B1,--} -> {221,B2,--}
{223,B,--} -> {222,B1,--}
{225,M,--} -> 
{229,E2,--} -> {228,id,c}
{230,E1,--} -> {229,E2,--}
{231,E,--} -> {230,E1,--}
{233,R,--} -> {232,<,<}
{235,E2,--} -> {234,num,5}
{236,E1,--} -> {235,E2,--}
{237,E,--} -> {236,E1,--}
{238,B2,--} -> {231,E,--}{233,R,--}{237,E,--}
{239,B1,--} -> {238,B2,--}
{240,B,--} -> {239,B1,--}
{242,M,--} -> 
{245,M,--} -> 
{247,E2,--} -> {246,id,x}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{251,R,--} -> {250,>,>}
{253,E2,--} -> {252,id,y}
{254,E1,--} -> {253,E2,--}
{255,E,--} -> {254,E1,--}
{256,B2,--} -> {249,E,--}{251,R,--}{255,E,--}
{257,B1,--} -> {256,B2,--}
{258,B,--} -> {257,B1,--}
{260,M,--} -> 
{265,E2,--} -> {264,id,x}
{266,E1,--} -> {265,E2,--}
{267,E,--} -> {266,E1,--}
{270,E2,--} -> {269,num,1}
{271,E1,--} -> {270,E2,--}
{272,E,--} -> {267,E,--}{268,+,+}{271,E1,--}
{274,S,--} -> {262,id,z}{263,=,=}{272,E,--}{273,;,;}
{275,S3,--} -> {274,S,--}
{277,S0,--} -> {261,begin,begin}{275,S3,--}{276,end,end}
{278,S1,--} -> {244,while,while}{245,M,--}{258,B,--}{259,do,do}{260,M,--}{277,S0,--}
{279,S,--} -> {278,S1,--}
{280,S3,--} -> {279,S,--}
{282,S1,--} -> {243,begin,begin}{280,S3,--}{281,end,end}
{283,N,--} -> 
{285,M,--} -> 
{290,E2,--} -> {289,id,y}
{291,E1,--} -> {290,E2,--}
{292,E,--} -> {291,E1,--}
{294,S,--} -> {287,id,x}{288,=,=}{292,E,--}{293,;,;}
{295,S3,--} -> {294,S,--}
{297,S2,--} -> {286,begin,begin}{295,S3,--}{296,end,end}
{298,S2,--} -> {227,if,if}{240,B,--}{241,then,then}{242,M,--}{282,S1,--}{283,N,--}{284,else,else}{285,M,--}{297,S2,--}
{299,S,--} -> {298,S2,--}
{300,S3,--} -> {299,S,--}
{302,S0,--} -> {226,begin,begin}{300,S3,--}{301,end,end}
{303,S1,--} -> {209,while,while}{210,M,--}{223,B,--}{224,do,do}{225,M,--}{302,S0,--}
{304,S,--} -> {303,S1,--}
{305,M,--} -> 
{309,E2,--} -> {308,num,3}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,L,--} -> {306,id,arr}{307,[,[}{311,E,--}{312,],]}
{316,E2,--} -> {315,num,5}
{317,E1,--} -> {316,E2,--}
{318,E,--} -> {317,E1,--}
{320,L,--} -> {313,L,--}{314,[,[}{318,E,--}{319,],]}
{323,E2,--} -> {322,num,2}
{324,E1,--} -> {323,E2,--}
{325,E,--} -> {324,E1,--}
{327,S,--} -> {320,L,--}{321,=,=}{325,E,--}{326,;,;}
{328,M,--} -> 
{333,E2,--} -> {332,id,m}
{334,E1,--} -> {333,E2,--}
{335,E,--} -> {334,E1,--}
{338,E2,--} -> {337,id,n}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {335,E,--}{336,+,+}{339,E1,--}
{342,E2,--} -> {331,(,(}{340,E,--}{341,),)}
{343,E1,--} -> {342,E2,--}
{346,E2,--} -> {345,num,9}
{347,E1,--} -> {343,E1,--}{344,*,*}{346,E2,--}
{348,E,--} -> {347,E1,--}
{350,S,--} -> {329,id,m}{330,=,=}{348,E,--}{349,;,;}
{351,M,--} -> 
{355,E2,--} -> {354,id,e}
{356,E1,--} -> {355,E2,--}
{357,E,--} -> {356,E1,--}
{360,E2,--} -> {359,id,a}
{361,E1,--} -> {360,E2,--}
{362,E,--} -> {357,E,--}{358,+,+}{361,E1,--}
{364,S,--} -> {352,id,e}{353,=,=}{362,E,--}{363,;,;}
{365,M,--} -> 
{370,E2,--} -> {369,num,1}
{371,E1,--} -> {370,E2,--}
{372,E,--} -> {371,E1,--}
{373,EL,--} -> {372,E,--}
{376,E2,--} -> {375,num,2}
{377,E1,--} -> {376,E2,--}
{378,E,--} -> {377,E1,--}
{381,E2,--} -> {380,num,1}
{382,E1,--} -> {381,E2,--}
{383,E,--} -> {378,E,--}{379,+,+}{382,E1,--}
{384,EL,--} -> {373,EL,--}{374,,,,}{383,E,--}
{387,E2,--} -> {386,id,a}
{388,E1,--} -> {387,E2,--}
{391,E2,--} -> {390,id,b}
{392,E1,--} -> {388,E1,--}{389,*,*}{391,E2,--}
{393,E,--} -> {392,E1,--}
{394,EL,--} -> {384,EL,--}{385,,,,}{393,E,--}
{397,S,--} -> {366,call,call}{367,id,a}{368,(,(}{394,EL,--}{395,),)}{396,;,;}
{398,M,--} -> 
{402,E2,--} -> {401,num,7}
{403,E1,--} -> {402,E2,--}
{404,E,--} -> {403,E1,--}
{406,S,--} -> {399,id,e1}{400,=,=}{404,E,--}{405,;,;}
{407,M,--} -> 
{411,E2,--} -> {410,id,e2}
{412,E1,--} -> {411,E2,--}
{413,E,--} -> {412,E1,--}
{415,S,--} -> {408,id,a}{409,=,=}{413,E,--}{414,;,;}
{416,M,--} -> 
{420,E2,--} -> {419,num,0}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{424,L,--} -> {417,id,a}{418,[,[}{422,E,--}{423,],]}
{427,E2,--} -> {426,num,1}
{428,E1,--} -> {427,E2,--}
{429,E,--} -> {428,E1,--}
{431,S,--} -> {424,L,--}{425,=,=}{429,E,--}{430,;,;}
{432,M,--} -> 
{436,E2,--} -> {435,num,9}
{437,E1,--} -> {436,E2,--}
{438,E,--} -> {437,E1,--}
{440,L,--} -> {433,id,e3}{434,[,[}{438,E,--}{439,],]}
{443,E2,--} -> {442,num,1}
{444,E1,--} -> {443,E2,--}
{445,E,--} -> {444,E1,--}
{447,S,--} -> {440,L,--}{441,=,=}{445,E,--}{446,;,;}
{448,M,--} -> 
{452,E2,--} -> {451,id,a}
{453,E1,--} -> {452,E2,--}
{454,E,--} -> {453,E1,--}
{457,E2,--} -> {456,id,arr}
{458,E1,--} -> {457,E2,--}
{459,E,--} -> {454,E,--}{455,+,+}{458,E1,--}
{461,S,--} -> {449,id,a}{450,=,=}{459,E,--}{460,;,;}
{462,S,--} -> {447,S,--}{448,M,--}{461,S,--}
{463,S,--} -> {431,S,--}{432,M,--}{462,S,--}
{464,S,--} -> {415,S,--}{416,M,--}{463,S,--}
{465,S,--} -> {406,S,--}{407,M,--}{464,S,--}
{466,S,--} -> {397,S,--}{398,M,--}{465,S,--}
{467,S,--} -> {364,S,--}{365,M,--}{466,S,--}
{468,S,--} -> {350,S,--}{351,M,--}{467,S,--}
{469,S,--} -> {327,S,--}{328,M,--}{468,S,--}
{470,S,--} -> {304,S,--}{305,M,--}{469,S,--}
{471,S,--} -> {207,S,--}{208,M,--}{470,S,--}
{473,P,--} -> {0,proc,proc}{1,id,fuction2}{2,;,;}{3,M0,--}{4,begin,begin}{130,D,--}{471,S,--}{472,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{145,E2,--} -> {144,id,a}
{146,E1,--} -> {145,E2,--}
{147,E,--} -> {146,E1,--}
{149,R,--} -> {148,<,<}
{151,E2,--} -> {150,id,b}
{152,E1,--} -> {151,E2,--}
{153,E,--} -> {152,E1,--}
{154,B2,--} -> {147,E,--}{149,R,--}{153,E,--}
{155,B1,--} -> {154,B2,--}
{156,B,--} -> {155,B1,--}
{158,M,--} -> 
{162,E2,--} -> {161,id,c}
{163,E1,--} -> {162,E2,--}
{164,E,--} -> {163,E1,--}
{166,R,--} -> {165,<,<}
{168,E2,--} -> {167,id,d}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{171,B2,--} -> {164,E,--}{166,R,--}{170,E,--}
{172,B1,--} -> {171,B2,--}
{173,B,--} -> {172,B1,--}
{175,M,--} -> 
{180,E2,--} -> {179,id,y}
{181,E1,--} -> {180,E2,--}
{182,E,--} -> {181,E1,--}
{185,E2,--} -> {184,id,z}
{186,E1,--} -> {185,E2,--}
{187,E,--} -> {182,E,--}{183,+,+}{186,E1,--}
{189,S,--} -> {177,id,x}{178,=,=}{187,E,--}{188,;,;}
{190,S3,--} -> {189,S,--}
{192,S1,--} -> {176,begin,begin}{190,S3,--}{191,end,end}
{193,N,--} -> 
{195,M,--} -> 
{200,E2,--} -> {199,id,y}
{201,E1,--} -> {200,E2,--}
{204,E2,--} -> {203,id,z}
{205,E1,--} -> {201,E1,--}{202,*,*}{204,E2,--}
{206,E,--} -> {205,E1,--}
{208,S,--} -> {197,id,x}{198,=,=}{206,E,--}{207,;,;}
{209,S3,--} -> {208,S,--}
{211,S2,--} -> {196,begin,begin}{209,S3,--}{210,end,end}
{212,S2,--} -> {160,if,if}{173,B,--}{174,then,then}{175,M,--}{192,S1,--}{193,N,--}{194,else,else}{195,M,--}{211,S2,--}
{213,S,--} -> {212,S2,--}
{214,S3,--} -> {213,S,--}
{216,S0,--} -> {159,begin,begin}{214,S3,--}{215,end,end}
{217,S1,--} -> {142,while,while}{143,M,--}{156,B,--}{157,do,do}{158,M,--}{216,S0,--}
{218,S,--} -> {217,S1,--}
{219,M,--} -> 
{223,E2,--} -> {222,num,3}
{224,E1,--} -> {223,E2,--}
{225,E,--} -> {224,E1,--}
{227,L,--} -> {220,id,arr}{221,[,[}{225,E,--}{226,],]}
{230,E2,--} -> {229,num,5}
{231,E1,--} -> {230,E2,--}
{232,E,--} -> {231,E1,--}
{234,L,--} -> {227,L,--}{228,[,[}{232,E,--}{233,],]}
{237,E2,--} -> {236,num,2}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{241,S,--} -> {234,L,--}{235,=,=}{239,E,--}{240,;,;}
{242,M,--} -> 
{247,E2,--} -> {246,id,m}
{248,E1,--} -> {247,E2,--}
{249,E,--} -> {248,E1,--}
{252,E2,--} -> {251,id,n}
{253,E1,--} -> {252,E2,--}
{254,E,--} -> {249,E,--}{250,+,+}{253,E1,--}
{256,E2,--} -> {245,(,(}{254,E,--}{255,),)}
{257,E1,--} -> {256,E2,--}
{260,E2,--} -> {259,num,9}
{261,E1,--} -> {257,E1,--}{258,*,*}{260,E2,--}
{262,E,--} -> {261,E1,--}
{264,S,--} -> {243,id,m}{244,=,=}{262,E,--}{263,;,;}
{265,M,--} -> 
{269,E2,--} -> {268,id,e}
{270,E1,--} -> {269,E2,--}
{271,E,--} -> {270,E1,--}
{274,E2,--} -> {273,id,a}
{275,E1,--} -> {274,E2,--}
{276,E,--} -> {271,E,--}{272,+,+}{275,E1,--}
{278,S,--} -> {266,id,e}{267,=,=}{276,E,--}{277,;,;}
{279,S,--} -> {264,S,--}{265,M,--}{278,S,--}
{280,S,--} -> {241,S,--}{242,M,--}{279,S,--}
{281,S,--} -> {218,S,--}{219,M,--}{280,S,--}
{283,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{281,S,--}{282,end,end}
{287,N1,--} -> 
{290,X,--} -> {289,integer,integer}
{291,C,--} -> 
{292,T,--} -> {290,X,--}{291,C,--}
{295,D,--} -> {292,T,--}{293,id,a}{294,;,;}
{297,X,--} -> {296,integer,integer}
{298,C,--} -> 
{299,T,--} -> {297,X,--}{298,C,--}
{302,D,--} -> {299,T,--}{300,id,b}{301,;,;}
{304,X,--} -> {303,real,real}
{305,C,--} -> 
{306,T,--} -> {304,X,--}{305,C,--}
{309,D,--} -> {306,T,--}{307,id,e}{308,;,;}
{311,N2,--} -> 
{313,X,--} -> {312,real,real}
{314,C,--} -> 
{315,T,--} -> {313,X,--}{314,C,--}
{318,D,--} -> {315,T,--}{316,id,re1}{317,;,;}
{320,X,--} -> {319,integer,integer}
{321,C,--} -> 
{322,T,--} -> {320,X,--}{321,C,--}
{325,D,--} -> {322,T,--}{323,id,re2}{324,;,;}
{326,D,--} -> {318,D,--}{325,D,--}
{328,T,--} -> {310,record,record}{311,N2,--}{326,D,--}{327,end,end}
{331,D,--} -> {328,T,--}{329,id,r1}{330,;,;}
{332,D,--} -> {309,D,--}{331,D,--}
{333,D,--} -> {302,D,--}{332,D,--}
{334,D,--} -> {295,D,--}{333,D,--}
{338,E2,--} -> {337,id,e}
{339,E1,--} -> {338,E2,--}
{340,E,--} -> {339,E1,--}
{343,E2,--} -> {342,id,a}
{344,E1,--} -> {343,E2,--}
{345,E,--} -> {340,E,--}{341,+,+}{344,E1,--}
{347,S,--} -> {335,id,e}{336,=,=}{345,E,--}{346,;,;}
{349,D,--} -> {284,proc,proc}{285,id,fuction2}{286,;,;}{287,N1,--}{288,begin,begin}{334,D,--}{347,S,--}{348,end,end}
{350,D,--} -> {283,D,--}{349,D,--}
{351,D,--} -> {18,D,--}{350,D,--}
{352,D,--} -> {11,D,--}{351,D,--}
{356,E2,--} -> {355,num,1}
{357,E1,--} -> {356,E2,--}
{358,E,--} -> {357,E1,--}
{360,S,--} -> {353,id,f11}{354,=,=}{358,E,--}{359,;,;}
{361,M,--} -> 
{366,E2,--} -> {365,num,1}
{367,E1,--} -> {366,E2,--}
{368,E,--} -> {367,E1,--}
{369,EL,--} -> {368,E,--}
{372,E2,--} -> {371,num,2}
{373,E1,--} -> {372,E2,--}
{374,E,--} -> {373,E1,--}
{377,E2,--} -> {376,num,1}
{378,E1,--} -> {377,E2,--}
{379,E,--} -> {374,E,--}{375,+,+}{378,E1,--}
{380,EL,--} -> {369,EL,--}{370,,,,}{379,E,--}
{383,E2,--} -> {382,id,a}
{384,E1,--} -> {383,E2,--}
{387,E2,--} -> {386,id,b}
{388,E1,--} -> {384,E1,--}{385,*,*}{387,E2,--}
{389,E,--} -> {388,E1,--}
{390,EL,--} -> {380,EL,--}{381,,,,}{389,E,--}
{393,S,--} -> {362,call,call}{363,id,fuction2}{364,(,(}{390,EL,--}{391,),)}{392,;,;}
{394,S,--} -> {360,S,--}{361,M,--}{393,S,--}
{396,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{352,D,--}{394,S,--}{395,end,end}
