1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
23:< while ,108 >
23:< ( ,305 >
23:< a ,1 >
23:< > ,206 >
23:< b ,1 >
23:< ) ,306 >
23:< and ,1 >
23:< not ,1 >
23:< c ,1 >
23:< do ,109 >
24:< begin ,113 >
25:< if ,105 >
25:< ( ,305 >
25:< c ,1 >
25:< < ,204 >
25:< d ,1 >
25:< and ,1 >
25:< a ,1 >
25:< > ,206 >
25:< c ,1 >
25:< ) ,306 >
25:< then ,107 >
26:< begin ,113 >
27:< x ,1 >
27:< = ,307 >
27:< y ,1 >
27:< + ,201 >
27:< z ,1 >
27:< ; ,302 >
28:< end ,114 >
29:< else ,106 >
30:< begin ,113 >
31:< x ,1 >
31:< = ,307 >
31:< y ,1 >
31:< * ,203 >
31:< z ,1 >
31:< ; ,302 >
32:< end ,114 >
33:< end ,114 >
35:< while ,108 >
35:< a ,1 >
35:< < ,204 >
35:< b ,1 >
35:< do ,109 >
36:< begin ,113 >
37:< if ,105 >
37:< c ,1 >
37:< < ,204 >
37:< 5 ,2 >
37:< then ,107 >
38:< begin ,113 >
39:< while ,108 >
39:< x ,1 >
39:< > ,206 >
39:< y ,1 >
39:< do ,109 >
40:< begin ,113 >
41:< z ,1 >
41:< = ,307 >
41:< x ,1 >
41:< + ,201 >
41:< 1 ,2 >
41:< ; ,302 >
42:< end ,114 >
43:< end ,114 >
44:< else ,106 >
45:< begin ,113 >
46:< x ,1 >
46:< = ,307 >
46:< y ,1 >
46:< ; ,302 >
47:< end ,114 >
48:< end ,114 >
51:< arr ,1 >
51:< [ ,303 >
51:< 3 ,2 >
51:< ] ,304 >
51:< [ ,303 >
51:< 5 ,2 >
51:< ] ,304 >
51:< = ,307 >
51:< 2 ,2 >
51:< ; ,302 >
52:< m ,1 >
52:< = ,307 >
52:< ( ,305 >
52:< m ,1 >
52:< + ,201 >
52:< n ,1 >
52:< ) ,306 >
52:< * ,203 >
52:< 9 ,2 >
52:< ; ,302 >
55:< b ,1 >
55:< = ,307 >
55:< ( ,305 >
55:< m ,1 >
55:< + ,201 >
55:< 9 ,2 >
55:< ) ,306 >
55:< * ,203 >
55:< 6 ,2 >
55:< * ,203 >
55:< 20 ,2 >
55:< ; ,302 >
56:< end ,114 >
57:< f11 ,1 >
57:< = ,307 >
57:< 1 ,2 >
57:< ; ,302 >
58:< call ,110 >
58:< fuction2 ,1 >
58:< ( ,305 >
58:< 1 ,2 >
58:< , ,301 >
58:< 2 ,2 >
58:< + ,201 >
58:< 1 ,2 >
58:< , ,301 >
58:< a ,1 >
58:< * ,203 >
58:< b ,1 >
58:< ) ,306 >
58:< ; ,302 >
59:< end ,114 >
60:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: ( a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: b ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: ) and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: and not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[23]:  "and" 单词处发现了错误。当前待输入: not c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[23]:  "not" 单词处发现了错误。当前待输入: c do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[23]:  "c" 单词处发现了错误。当前待输入: do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> ( B )
规约	当前待输入: do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: and a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[25]:  "and" 单词处发现了错误。当前待输入: a > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[25]:  "a" 单词处发现了错误。当前待输入: > c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[25]:  ">" 单词处发现了错误。当前待输入: c ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

Error at Line[25]:  "c" 单词处发现了错误。当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: ) then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> ( B )
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: b = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: * 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 20 ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{131,D,--} -> {123,D,--}{130,D,--}
{132,D,--} -> {116,D,--}{131,D,--}
{133,D,--} -> {109,D,--}{132,D,--}
{134,D,--} -> {87,D,--}{133,D,--}
{135,D,--} -> {80,D,--}{134,D,--}
{136,D,--} -> {73,D,--}{135,D,--}
{137,D,--} -> {66,D,--}{136,D,--}
{138,D,--} -> {59,D,--}{137,D,--}
{139,D,--} -> {52,D,--}{138,D,--}
{140,D,--} -> {45,D,--}{139,D,--}
{141,D,--} -> {38,D,--}{140,D,--}
{143,M,--} -> 
{146,E2,--} -> {145,id,a}
{147,E1,--} -> {146,E2,--}
{148,E,--} -> {147,E1,--}
{150,R,--} -> {149,>,>}
{152,E2,--} -> {151,id,b}
{153,E1,--} -> {152,E2,--}
{154,E,--} -> {153,E1,--}
{155,B2,--} -> {148,E,--}{150,R,--}{154,E,--}
{156,B1,--} -> {155,B2,--}
{157,B,--} -> {156,B1,--}
{159,B2,--} -> {144,(,(}{157,B,--}{158,),)}
{160,B1,--} -> {159,B2,--}
{161,B,--} -> {160,B1,--}
{163,M,--} -> 
{168,E2,--} -> {167,id,c}
{169,E1,--} -> {168,E2,--}
{170,E,--} -> {169,E1,--}
{172,R,--} -> {171,<,<}
{174,E2,--} -> {173,id,d}
{175,E1,--} -> {174,E2,--}
{176,E,--} -> {175,E1,--}
{177,B2,--} -> {170,E,--}{172,R,--}{176,E,--}
{178,B1,--} -> {177,B2,--}
{179,B,--} -> {178,B1,--}
{181,B2,--} -> {166,(,(}{179,B,--}{180,),)}
{182,B1,--} -> {181,B2,--}
{183,B,--} -> {182,B1,--}
{185,M,--} -> 
{190,E2,--} -> {189,id,y}
{191,E1,--} -> {190,E2,--}
{192,E,--} -> {191,E1,--}
{195,E2,--} -> {194,id,z}
{196,E1,--} -> {195,E2,--}
{197,E,--} -> {192,E,--}{193,+,+}{196,E1,--}
{199,S,--} -> {187,id,x}{188,=,=}{197,E,--}{198,;,;}
{200,S3,--} -> {199,S,--}
{202,S1,--} -> {186,begin,begin}{200,S3,--}{201,end,end}
{203,N,--} -> 
{205,M,--} -> 
{210,E2,--} -> {209,id,y}
{211,E1,--} -> {210,E2,--}
{214,E2,--} -> {213,id,z}
{215,E1,--} -> {211,E1,--}{212,*,*}{214,E2,--}
{216,E,--} -> {215,E1,--}
{218,S,--} -> {207,id,x}{208,=,=}{216,E,--}{217,;,;}
{219,S3,--} -> {218,S,--}
{221,S2,--} -> {206,begin,begin}{219,S3,--}{220,end,end}
{222,S2,--} -> {165,if,if}{183,B,--}{184,then,then}{185,M,--}{202,S1,--}{203,N,--}{204,else,else}{205,M,--}{221,S2,--}
{223,S,--} -> {222,S2,--}
{224,S3,--} -> {223,S,--}
{226,S0,--} -> {164,begin,begin}{224,S3,--}{225,end,end}
{227,S1,--} -> {142,while,while}{143,M,--}{161,B,--}{162,do,do}{163,M,--}{226,S0,--}
{228,S,--} -> {227,S1,--}
{229,M,--} -> 
{231,M,--} -> 
{233,E2,--} -> {232,id,a}
{234,E1,--} -> {233,E2,--}
{235,E,--} -> {234,E1,--}
{237,R,--} -> {236,<,<}
{239,E2,--} -> {238,id,b}
{240,E1,--} -> {239,E2,--}
{241,E,--} -> {240,E1,--}
{242,B2,--} -> {235,E,--}{237,R,--}{241,E,--}
{243,B1,--} -> {242,B2,--}
{244,B,--} -> {243,B1,--}
{246,M,--} -> 
{250,E2,--} -> {249,id,c}
{251,E1,--} -> {250,E2,--}
{252,E,--} -> {251,E1,--}
{254,R,--} -> {253,<,<}
{256,E2,--} -> {255,num,5}
{257,E1,--} -> {256,E2,--}
{258,E,--} -> {257,E1,--}
{259,B2,--} -> {252,E,--}{254,R,--}{258,E,--}
{260,B1,--} -> {259,B2,--}
{261,B,--} -> {260,B1,--}
{263,M,--} -> 
{266,M,--} -> 
{268,E2,--} -> {267,id,x}
{269,E1,--} -> {268,E2,--}
{270,E,--} -> {269,E1,--}
{272,R,--} -> {271,>,>}
{274,E2,--} -> {273,id,y}
{275,E1,--} -> {274,E2,--}
{276,E,--} -> {275,E1,--}
{277,B2,--} -> {270,E,--}{272,R,--}{276,E,--}
{278,B1,--} -> {277,B2,--}
{279,B,--} -> {278,B1,--}
{281,M,--} -> 
{286,E2,--} -> {285,id,x}
{287,E1,--} -> {286,E2,--}
{288,E,--} -> {287,E1,--}
{291,E2,--} -> {290,num,1}
{292,E1,--} -> {291,E2,--}
{293,E,--} -> {288,E,--}{289,+,+}{292,E1,--}
{295,S,--} -> {283,id,z}{284,=,=}{293,E,--}{294,;,;}
{296,S3,--} -> {295,S,--}
{298,S0,--} -> {282,begin,begin}{296,S3,--}{297,end,end}
{299,S1,--} -> {265,while,while}{266,M,--}{279,B,--}{280,do,do}{281,M,--}{298,S0,--}
{300,S,--} -> {299,S1,--}
{301,S3,--} -> {300,S,--}
{303,S1,--} -> {264,begin,begin}{301,S3,--}{302,end,end}
{304,N,--} -> 
{306,M,--} -> 
{311,E2,--} -> {310,id,y}
{312,E1,--} -> {311,E2,--}
{313,E,--} -> {312,E1,--}
{315,S,--} -> {308,id,x}{309,=,=}{313,E,--}{314,;,;}
{316,S3,--} -> {315,S,--}
{318,S2,--} -> {307,begin,begin}{316,S3,--}{317,end,end}
{319,S2,--} -> {248,if,if}{261,B,--}{262,then,then}{263,M,--}{303,S1,--}{304,N,--}{305,else,else}{306,M,--}{318,S2,--}
{320,S,--} -> {319,S2,--}
{321,S3,--} -> {320,S,--}
{323,S0,--} -> {247,begin,begin}{321,S3,--}{322,end,end}
{324,S1,--} -> {230,while,while}{231,M,--}{244,B,--}{245,do,do}{246,M,--}{323,S0,--}
{325,S,--} -> {324,S1,--}
{326,M,--} -> 
{330,E2,--} -> {329,num,3}
{331,E1,--} -> {330,E2,--}
{332,E,--} -> {331,E1,--}
{334,L,--} -> {327,id,arr}{328,[,[}{332,E,--}{333,],]}
{337,E2,--} -> {336,num,5}
{338,E1,--} -> {337,E2,--}
{339,E,--} -> {338,E1,--}
{341,L,--} -> {334,L,--}{335,[,[}{339,E,--}{340,],]}
{344,E2,--} -> {343,num,2}
{345,E1,--} -> {344,E2,--}
{346,E,--} -> {345,E1,--}
{348,S,--} -> {341,L,--}{342,=,=}{346,E,--}{347,;,;}
{349,M,--} -> 
{354,E2,--} -> {353,id,m}
{355,E1,--} -> {354,E2,--}
{356,E,--} -> {355,E1,--}
{359,E2,--} -> {358,id,n}
{360,E1,--} -> {359,E2,--}
{361,E,--} -> {356,E,--}{357,+,+}{360,E1,--}
{363,E2,--} -> {352,(,(}{361,E,--}{362,),)}
{364,E1,--} -> {363,E2,--}
{367,E2,--} -> {366,num,9}
{368,E1,--} -> {364,E1,--}{365,*,*}{367,E2,--}
{369,E,--} -> {368,E1,--}
{371,S,--} -> {350,id,m}{351,=,=}{369,E,--}{370,;,;}
{372,M,--} -> 
{377,E2,--} -> {376,id,m}
{378,E1,--} -> {377,E2,--}
{379,E,--} -> {378,E1,--}
{382,E2,--} -> {381,num,9}
{383,E1,--} -> {382,E2,--}
{384,E,--} -> {379,E,--}{380,+,+}{383,E1,--}
{386,E2,--} -> {375,(,(}{384,E,--}{385,),)}
{387,E1,--} -> {386,E2,--}
{390,E2,--} -> {389,num,6}
{391,E1,--} -> {387,E1,--}{388,*,*}{390,E2,--}
{394,E2,--} -> {393,num,20}
{395,E1,--} -> {391,E1,--}{392,*,*}{394,E2,--}
{396,E,--} -> {395,E1,--}
{398,S,--} -> {373,id,b}{374,=,=}{396,E,--}{397,;,;}
{399,S,--} -> {371,S,--}{372,M,--}{398,S,--}
{400,S,--} -> {348,S,--}{349,M,--}{399,S,--}
{401,S,--} -> {325,S,--}{326,M,--}{400,S,--}
{402,S,--} -> {228,S,--}{229,M,--}{401,S,--}
{404,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{141,D,--}{402,S,--}{403,end,end}
{405,D,--} -> {18,D,--}{404,D,--}
{406,D,--} -> {11,D,--}{405,D,--}
{410,E2,--} -> {409,num,1}
{411,E1,--} -> {410,E2,--}
{412,E,--} -> {411,E1,--}
{414,S,--} -> {407,id,f11}{408,=,=}{412,E,--}{413,;,;}
{415,M,--} -> 
{420,E2,--} -> {419,num,1}
{421,E1,--} -> {420,E2,--}
{422,E,--} -> {421,E1,--}
{423,EL,--} -> {422,E,--}
{426,E2,--} -> {425,num,2}
{427,E1,--} -> {426,E2,--}
{428,E,--} -> {427,E1,--}
{431,E2,--} -> {430,num,1}
{432,E1,--} -> {431,E2,--}
{433,E,--} -> {428,E,--}{429,+,+}{432,E1,--}
{434,EL,--} -> {423,EL,--}{424,,,,}{433,E,--}
{437,E2,--} -> {436,id,a}
{438,E1,--} -> {437,E2,--}
{441,E2,--} -> {440,id,b}
{442,E1,--} -> {438,E1,--}{439,*,*}{441,E2,--}
{443,E,--} -> {442,E1,--}
{444,EL,--} -> {434,EL,--}{435,,,,}{443,E,--}
{447,S,--} -> {416,call,call}{417,id,fuction2}{418,(,(}{444,EL,--}{445,),)}{446,;,;}
{448,S,--} -> {414,S,--}{415,M,--}{447,S,--}
{450,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{406,D,--}{448,S,--}{449,end,end}
