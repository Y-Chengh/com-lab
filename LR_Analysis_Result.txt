1:< proc ,101 >
1:< fuction1 ,1 >
1:< ; ,302 >
2:< begin ,113 >
3:< integer ,103 >
3:< f11 ,1 >
3:< ; ,302 >
4:< real ,104 >
4:< f12 ,1 >
4:< ; ,302 >
6:< proc ,101 >
6:< fuction2 ,1 >
6:< ; ,302 >
7:< begin ,113 >
8:< integer ,103 >
8:< [ ,303 >
8:< 7 ,2 >
8:< ] ,304 >
8:< [ ,303 >
8:< 6 ,2 >
8:< ] ,304 >
8:< arr ,1 >
8:< ; ,302 >
9:< integer ,103 >
9:< m ,1 >
9:< ; ,302 >
10:< integer ,103 >
10:< n ,1 >
10:< ; ,302 >
11:< integer ,103 >
11:< a ,1 >
11:< ; ,302 >
12:< integer ,103 >
12:< b ,1 >
12:< ; ,302 >
13:< integer ,103 >
13:< c ,1 >
13:< ; ,302 >
14:< integer ,103 >
14:< d ,1 >
14:< ; ,302 >
15:< real ,104 >
15:< e ,1 >
15:< ; ,302 >
16:< record ,102 >
16:< real ,104 >
16:< re1 ,1 >
16:< ; ,302 >
16:< integer ,103 >
16:< re2 ,1 >
16:< ; ,302 >
16:< end ,114 >
16:< r1 ,1 >
16:< ; ,302 >
18:< integer ,103 >
18:< x ,1 >
18:< ; ,302 >
19:< integer ,103 >
19:< y ,1 >
19:< ; ,302 >
20:< integer ,103 >
20:< z ,1 >
20:< ; ,302 >
21:< integer ,103 >
21:< z ,1 >
21:< ; ,302 >
21:< // Duplicate definition ,7 >
24:< while ,108 >
24:< a ,1 >
24:< < ,204 >
24:< b ,1 >
24:< do ,109 >
25:< begin ,113 >
26:< if ,105 >
26:< c ,1 >
26:< < ,204 >
26:< d ,1 >
26:< then ,107 >
27:< begin ,113 >
28:< x ,1 >
28:< = ,307 >
28:< y ,1 >
28:< + ,201 >
28:< z ,1 >
28:< ; ,302 >
29:< end ,114 >
30:< else ,106 >
31:< begin ,113 >
32:< x ,1 >
32:< = ,307 >
32:< y ,1 >
32:< * ,203 >
32:< z ,1 >
32:< ; ,302 >
33:< end ,114 >
34:< end ,114 >
36:< while ,108 >
36:< a ,1 >
36:< < ,204 >
36:< b ,1 >
36:< do ,109 >
37:< begin ,113 >
38:< if ,105 >
38:< c ,1 >
38:< < ,204 >
38:< 5 ,2 >
38:< then ,107 >
39:< begin ,113 >
40:< while ,108 >
40:< x ,1 >
40:< > ,206 >
40:< y ,1 >
40:< do ,109 >
41:< begin ,113 >
42:< z ,1 >
42:< = ,307 >
42:< x ,1 >
42:< + ,201 >
42:< 1 ,2 >
42:< ; ,302 >
43:< end ,114 >
44:< end ,114 >
45:< else ,106 >
46:< begin ,113 >
47:< x ,1 >
47:< = ,307 >
47:< y ,1 >
47:< ; ,302 >
48:< end ,114 >
49:< end ,114 >
52:< arr ,1 >
52:< [ ,303 >
52:< 3 ,2 >
52:< ] ,304 >
52:< [ ,303 >
52:< 5 ,2 >
52:< ] ,304 >
52:< = ,307 >
52:< 2 ,2 >
52:< ; ,302 >
53:< m ,1 >
53:< = ,307 >
53:< ( ,305 >
53:< m ,1 >
53:< + ,201 >
53:< n ,1 >
53:< ) ,306 >
53:< * ,203 >
53:< 9 ,2 >
53:< ; ,302 >
56:< e ,1 >
56:< = ,307 >
56:< e ,1 >
56:< + ,201 >
56:< a ,1 >
56:< ; ,302 >
56:< // real = real + int , Type conversion ,7 >
58:< call ,110 >
58:< a ,1 >
58:< ( ,305 >
58:< 1 ,2 >
58:< , ,301 >
58:< 2 ,2 >
58:< + ,201 >
58:< 1 ,2 >
58:< , ,301 >
58:< a ,1 >
58:< * ,203 >
58:< b ,1 >
58:< ) ,306 >
58:< ; ,302 >
58:< //Common variable with call ,7 >
59:< e1 ,1 >
59:< = ,307 >
59:< 7 ,2 >
59:< ; ,302 >
59:< // e1 Undefined ,7 >
60:< a ,1 >
60:< = ,307 >
60:< e2 ,1 >
60:< ; ,302 >
60:< // e2 Undefined ,7 >
61:< a ,1 >
61:< [ ,303 >
61:< 0 ,2 >
61:< ] ,304 >
61:< = ,307 >
61:< 1 ,2 >
61:< ; ,302 >
61:< // Non-array using array operators ,7 >
62:< e3 ,1 >
62:< [ ,303 >
62:< 9 ,2 >
62:< ] ,304 >
62:< = ,307 >
62:< 1 ,2 >
62:< ; ,302 >
62:< // e3 Undefined ,7 >
63:< a ,1 >
63:< = ,307 >
63:< a ,1 >
63:< + ,201 >
63:< arr ,1 >
63:< ; ,302 >
63:< // int = int + array, Integer variables are added to array variables  ,7 >
65:< end ,114 >
66:< f11 ,1 >
66:< = ,307 >
66:< 1 ,2 >
66:< ; ,302 >
67:< call ,110 >
67:< fuction2 ,1 >
67:< ( ,305 >
67:< 1 ,2 >
67:< , ,301 >
67:< 2 ,2 >
67:< + ,201 >
67:< 1 ,2 >
67:< , ,301 >
67:< a ,1 >
67:< * ,203 >
67:< b ,1 >
67:< ) ,306 >
67:< ; ,302 >
68:< end ,114 >
69:< # ,-1 >
当前待输入: proc fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction1 ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M0 -> ε
规约	当前待输入: begin integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f11 ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: f12 ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: proc fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N1 -> ε
规约	当前待输入: begin integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: [ 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 6 ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> [ num ] C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: arr ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: m ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: n ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: a ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: b ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: c ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: d ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: real e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: e ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: record real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N2 -> ε
规约	当前待输入: real re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> real
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re1 ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: re2 ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: end r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> record N2 D end
规约	当前待输入: r1 ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: x ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: y ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: integer z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

X -> integer
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

C -> ε
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

T -> X C
规约	当前待输入: z ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Duplicate definition while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> T id ;
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: while a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: d then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: while a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: b do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: if c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: c < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: < 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> <
规约	当前待输入: 5 then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: then begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: while x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: x > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: > y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

R -> >
规约	当前待输入: y do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B2 -> E R E
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B1 -> B2
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

B -> B1
规约	当前待输入: do begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: z = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> begin S3 end
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

N -> ε
规约	当前待输入: else begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: begin x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: x = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: y ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> begin S3 end
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S2 -> if B then M S1 N else M S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S2
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S3 -> S
规约	当前待输入: end arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S0 -> begin S3 end
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S1 -> while M B do M S0
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S1
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: arr [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 3 ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: [ 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 5 ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> L [ E ]
规约	当前待输入: = 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: m = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: m + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: n ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ) * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> ( E )
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // real = real + int , Type conversion call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: b ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: //Common variable with call e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> call id ( EL ) ;
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e1 = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 7 ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e1 Undefined a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: e2 ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e2 Undefined a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 0 ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // Non-array using array operators e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: e3 [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: [ 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 9 ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ] = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

L -> id [ E ]
规约	当前待输入: = 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // e3 Undefined a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> L = E ;
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: a = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: a + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: arr ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> id
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E + E1
规约	当前待输入: ; // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: // int = int + array, Integer variables are added to array variables  end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> S M S
规约	当前待输入: end f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> proc id ; N1 begin D S end
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

D -> D D
规约	当前待输入: f11 = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: = 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: ; call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

S -> id = E ;
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

M -> ε
规约	当前待输入: call fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: fuction2 ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: ( 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 1 , 2 + 1 , a * b ) ; end # 

移入	当前待输入: , 2 + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

EL -> E
规约	当前待输入: , 2 + 1 , a * b ) ; end # 

移入	当前待输入: 2 + 1 , a * b ) ; end # 

移入	当前待输入: + 1 , a * b ) ; end # 

E2 -> num
规约	当前待输入: + 1 , a * b ) ; end # 

E1 -> E2
规约	当前待输入: + 1 , a * b ) ; end # 

E -> E1
规约	当前待输入: + 1 , a * b ) ; end # 

移入	当前待输入: 1 , a * b ) ; end # 

移入	当前待输入: , a * b ) ; end # 

E2 -> num
规约	当前待输入: , a * b ) ; end # 

E1 -> E2
规约	当前待输入: , a * b ) ; end # 

E -> E + E1
规约	当前待输入: , a * b ) ; end # 

EL -> EL , E
规约	当前待输入: , a * b ) ; end # 

移入	当前待输入: a * b ) ; end # 

移入	当前待输入: * b ) ; end # 

E2 -> id
规约	当前待输入: * b ) ; end # 

E1 -> E2
规约	当前待输入: * b ) ; end # 

移入	当前待输入: b ) ; end # 

移入	当前待输入: ) ; end # 

E2 -> id
规约	当前待输入: ) ; end # 

E1 -> E1 * E2
规约	当前待输入: ) ; end # 

E -> E1
规约	当前待输入: ) ; end # 

EL -> EL , E
规约	当前待输入: ) ; end # 

移入	当前待输入: ; end # 

移入	当前待输入: end # 

S -> call id ( EL ) ;
规约	当前待输入: end # 

S -> S M S
规约	当前待输入: end # 

移入	当前待输入: # 

P -> proc id ; M0 begin D S end
规约	当前待输入: # 

语法分析完成	
{3,M0,--} -> 
{6,X,--} -> {5,integer,integer}
{7,C,--} -> 
{8,T,--} -> {6,X,--}{7,C,--}
{11,D,--} -> {8,T,--}{9,id,f11}{10,;,;}
{13,X,--} -> {12,real,real}
{14,C,--} -> 
{15,T,--} -> {13,X,--}{14,C,--}
{18,D,--} -> {15,T,--}{16,id,f12}{17,;,;}
{22,N1,--} -> 
{25,X,--} -> {24,integer,integer}
{32,C,--} -> 
{33,C,--} -> {29,[,[}{30,num,6}{31,],]}{32,C,--}
{34,C,--} -> {26,[,[}{27,num,7}{28,],]}{33,C,--}
{35,T,--} -> {25,X,--}{34,C,--}
{38,D,--} -> {35,T,--}{36,id,arr}{37,;,;}
{40,X,--} -> {39,integer,integer}
{41,C,--} -> 
{42,T,--} -> {40,X,--}{41,C,--}
{45,D,--} -> {42,T,--}{43,id,m}{44,;,;}
{47,X,--} -> {46,integer,integer}
{48,C,--} -> 
{49,T,--} -> {47,X,--}{48,C,--}
{52,D,--} -> {49,T,--}{50,id,n}{51,;,;}
{54,X,--} -> {53,integer,integer}
{55,C,--} -> 
{56,T,--} -> {54,X,--}{55,C,--}
{59,D,--} -> {56,T,--}{57,id,a}{58,;,;}
{61,X,--} -> {60,integer,integer}
{62,C,--} -> 
{63,T,--} -> {61,X,--}{62,C,--}
{66,D,--} -> {63,T,--}{64,id,b}{65,;,;}
{68,X,--} -> {67,integer,integer}
{69,C,--} -> 
{70,T,--} -> {68,X,--}{69,C,--}
{73,D,--} -> {70,T,--}{71,id,c}{72,;,;}
{75,X,--} -> {74,integer,integer}
{76,C,--} -> 
{77,T,--} -> {75,X,--}{76,C,--}
{80,D,--} -> {77,T,--}{78,id,d}{79,;,;}
{82,X,--} -> {81,real,real}
{83,C,--} -> 
{84,T,--} -> {82,X,--}{83,C,--}
{87,D,--} -> {84,T,--}{85,id,e}{86,;,;}
{89,N2,--} -> 
{91,X,--} -> {90,real,real}
{92,C,--} -> 
{93,T,--} -> {91,X,--}{92,C,--}
{96,D,--} -> {93,T,--}{94,id,re1}{95,;,;}
{98,X,--} -> {97,integer,integer}
{99,C,--} -> 
{100,T,--} -> {98,X,--}{99,C,--}
{103,D,--} -> {100,T,--}{101,id,re2}{102,;,;}
{104,D,--} -> {96,D,--}{103,D,--}
{106,T,--} -> {88,record,record}{89,N2,--}{104,D,--}{105,end,end}
{109,D,--} -> {106,T,--}{107,id,r1}{108,;,;}
{111,X,--} -> {110,integer,integer}
{112,C,--} -> 
{113,T,--} -> {111,X,--}{112,C,--}
{116,D,--} -> {113,T,--}{114,id,x}{115,;,;}
{118,X,--} -> {117,integer,integer}
{119,C,--} -> 
{120,T,--} -> {118,X,--}{119,C,--}
{123,D,--} -> {120,T,--}{121,id,y}{122,;,;}
{125,X,--} -> {124,integer,integer}
{126,C,--} -> 
{127,T,--} -> {125,X,--}{126,C,--}
{130,D,--} -> {127,T,--}{128,id,z}{129,;,;}
{132,X,--} -> {131,integer,integer}
{133,C,--} -> 
{134,T,--} -> {132,X,--}{133,C,--}
{137,D,--} -> {134,T,--}{135,id,z}{136,;,;}
{138,D,--} -> {130,D,--}{137,D,--}
{139,D,--} -> {123,D,--}{138,D,--}
{140,D,--} -> {116,D,--}{139,D,--}
{141,D,--} -> {109,D,--}{140,D,--}
{142,D,--} -> {87,D,--}{141,D,--}
{143,D,--} -> {80,D,--}{142,D,--}
{144,D,--} -> {73,D,--}{143,D,--}
{145,D,--} -> {66,D,--}{144,D,--}
{146,D,--} -> {59,D,--}{145,D,--}
{147,D,--} -> {52,D,--}{146,D,--}
{148,D,--} -> {45,D,--}{147,D,--}
{149,D,--} -> {38,D,--}{148,D,--}
{151,M,--} -> 
{153,E2,--} -> {152,id,a}
{154,E1,--} -> {153,E2,--}
{155,E,--} -> {154,E1,--}
{157,R,--} -> {156,<,<}
{159,E2,--} -> {158,id,b}
{160,E1,--} -> {159,E2,--}
{161,E,--} -> {160,E1,--}
{162,B2,--} -> {155,E,--}{157,R,--}{161,E,--}
{163,B1,--} -> {162,B2,--}
{164,B,--} -> {163,B1,--}
{166,M,--} -> 
{170,E2,--} -> {169,id,c}
{171,E1,--} -> {170,E2,--}
{172,E,--} -> {171,E1,--}
{174,R,--} -> {173,<,<}
{176,E2,--} -> {175,id,d}
{177,E1,--} -> {176,E2,--}
{178,E,--} -> {177,E1,--}
{179,B2,--} -> {172,E,--}{174,R,--}{178,E,--}
{180,B1,--} -> {179,B2,--}
{181,B,--} -> {180,B1,--}
{183,M,--} -> 
{188,E2,--} -> {187,id,y}
{189,E1,--} -> {188,E2,--}
{190,E,--} -> {189,E1,--}
{193,E2,--} -> {192,id,z}
{194,E1,--} -> {193,E2,--}
{195,E,--} -> {190,E,--}{191,+,+}{194,E1,--}
{197,S,--} -> {185,id,x}{186,=,=}{195,E,--}{196,;,;}
{198,S3,--} -> {197,S,--}
{200,S1,--} -> {184,begin,begin}{198,S3,--}{199,end,end}
{201,N,--} -> 
{203,M,--} -> 
{208,E2,--} -> {207,id,y}
{209,E1,--} -> {208,E2,--}
{212,E2,--} -> {211,id,z}
{213,E1,--} -> {209,E1,--}{210,*,*}{212,E2,--}
{214,E,--} -> {213,E1,--}
{216,S,--} -> {205,id,x}{206,=,=}{214,E,--}{215,;,;}
{217,S3,--} -> {216,S,--}
{219,S2,--} -> {204,begin,begin}{217,S3,--}{218,end,end}
{220,S2,--} -> {168,if,if}{181,B,--}{182,then,then}{183,M,--}{200,S1,--}{201,N,--}{202,else,else}{203,M,--}{219,S2,--}
{221,S,--} -> {220,S2,--}
{222,S3,--} -> {221,S,--}
{224,S0,--} -> {167,begin,begin}{222,S3,--}{223,end,end}
{225,S1,--} -> {150,while,while}{151,M,--}{164,B,--}{165,do,do}{166,M,--}{224,S0,--}
{226,S,--} -> {225,S1,--}
{227,M,--} -> 
{229,M,--} -> 
{231,E2,--} -> {230,id,a}
{232,E1,--} -> {231,E2,--}
{233,E,--} -> {232,E1,--}
{235,R,--} -> {234,<,<}
{237,E2,--} -> {236,id,b}
{238,E1,--} -> {237,E2,--}
{239,E,--} -> {238,E1,--}
{240,B2,--} -> {233,E,--}{235,R,--}{239,E,--}
{241,B1,--} -> {240,B2,--}
{242,B,--} -> {241,B1,--}
{244,M,--} -> 
{248,E2,--} -> {247,id,c}
{249,E1,--} -> {248,E2,--}
{250,E,--} -> {249,E1,--}
{252,R,--} -> {251,<,<}
{254,E2,--} -> {253,num,5}
{255,E1,--} -> {254,E2,--}
{256,E,--} -> {255,E1,--}
{257,B2,--} -> {250,E,--}{252,R,--}{256,E,--}
{258,B1,--} -> {257,B2,--}
{259,B,--} -> {258,B1,--}
{261,M,--} -> 
{264,M,--} -> 
{266,E2,--} -> {265,id,x}
{267,E1,--} -> {266,E2,--}
{268,E,--} -> {267,E1,--}
{270,R,--} -> {269,>,>}
{272,E2,--} -> {271,id,y}
{273,E1,--} -> {272,E2,--}
{274,E,--} -> {273,E1,--}
{275,B2,--} -> {268,E,--}{270,R,--}{274,E,--}
{276,B1,--} -> {275,B2,--}
{277,B,--} -> {276,B1,--}
{279,M,--} -> 
{284,E2,--} -> {283,id,x}
{285,E1,--} -> {284,E2,--}
{286,E,--} -> {285,E1,--}
{289,E2,--} -> {288,num,1}
{290,E1,--} -> {289,E2,--}
{291,E,--} -> {286,E,--}{287,+,+}{290,E1,--}
{293,S,--} -> {281,id,z}{282,=,=}{291,E,--}{292,;,;}
{294,S3,--} -> {293,S,--}
{296,S0,--} -> {280,begin,begin}{294,S3,--}{295,end,end}
{297,S1,--} -> {263,while,while}{264,M,--}{277,B,--}{278,do,do}{279,M,--}{296,S0,--}
{298,S,--} -> {297,S1,--}
{299,S3,--} -> {298,S,--}
{301,S1,--} -> {262,begin,begin}{299,S3,--}{300,end,end}
{302,N,--} -> 
{304,M,--} -> 
{309,E2,--} -> {308,id,y}
{310,E1,--} -> {309,E2,--}
{311,E,--} -> {310,E1,--}
{313,S,--} -> {306,id,x}{307,=,=}{311,E,--}{312,;,;}
{314,S3,--} -> {313,S,--}
{316,S2,--} -> {305,begin,begin}{314,S3,--}{315,end,end}
{317,S2,--} -> {246,if,if}{259,B,--}{260,then,then}{261,M,--}{301,S1,--}{302,N,--}{303,else,else}{304,M,--}{316,S2,--}
{318,S,--} -> {317,S2,--}
{319,S3,--} -> {318,S,--}
{321,S0,--} -> {245,begin,begin}{319,S3,--}{320,end,end}
{322,S1,--} -> {228,while,while}{229,M,--}{242,B,--}{243,do,do}{244,M,--}{321,S0,--}
{323,S,--} -> {322,S1,--}
{324,M,--} -> 
{328,E2,--} -> {327,num,3}
{329,E1,--} -> {328,E2,--}
{330,E,--} -> {329,E1,--}
{332,L,--} -> {325,id,arr}{326,[,[}{330,E,--}{331,],]}
{335,E2,--} -> {334,num,5}
{336,E1,--} -> {335,E2,--}
{337,E,--} -> {336,E1,--}
{339,L,--} -> {332,L,--}{333,[,[}{337,E,--}{338,],]}
{342,E2,--} -> {341,num,2}
{343,E1,--} -> {342,E2,--}
{344,E,--} -> {343,E1,--}
{346,S,--} -> {339,L,--}{340,=,=}{344,E,--}{345,;,;}
{347,M,--} -> 
{352,E2,--} -> {351,id,m}
{353,E1,--} -> {352,E2,--}
{354,E,--} -> {353,E1,--}
{357,E2,--} -> {356,id,n}
{358,E1,--} -> {357,E2,--}
{359,E,--} -> {354,E,--}{355,+,+}{358,E1,--}
{361,E2,--} -> {350,(,(}{359,E,--}{360,),)}
{362,E1,--} -> {361,E2,--}
{365,E2,--} -> {364,num,9}
{366,E1,--} -> {362,E1,--}{363,*,*}{365,E2,--}
{367,E,--} -> {366,E1,--}
{369,S,--} -> {348,id,m}{349,=,=}{367,E,--}{368,;,;}
{370,M,--} -> 
{374,E2,--} -> {373,id,e}
{375,E1,--} -> {374,E2,--}
{376,E,--} -> {375,E1,--}
{379,E2,--} -> {378,id,a}
{380,E1,--} -> {379,E2,--}
{381,E,--} -> {376,E,--}{377,+,+}{380,E1,--}
{383,S,--} -> {371,id,e}{372,=,=}{381,E,--}{382,;,;}
{384,M,--} -> 
{389,E2,--} -> {388,num,1}
{390,E1,--} -> {389,E2,--}
{391,E,--} -> {390,E1,--}
{392,EL,--} -> {391,E,--}
{395,E2,--} -> {394,num,2}
{396,E1,--} -> {395,E2,--}
{397,E,--} -> {396,E1,--}
{400,E2,--} -> {399,num,1}
{401,E1,--} -> {400,E2,--}
{402,E,--} -> {397,E,--}{398,+,+}{401,E1,--}
{403,EL,--} -> {392,EL,--}{393,,,,}{402,E,--}
{406,E2,--} -> {405,id,a}
{407,E1,--} -> {406,E2,--}
{410,E2,--} -> {409,id,b}
{411,E1,--} -> {407,E1,--}{408,*,*}{410,E2,--}
{412,E,--} -> {411,E1,--}
{413,EL,--} -> {403,EL,--}{404,,,,}{412,E,--}
{416,S,--} -> {385,call,call}{386,id,a}{387,(,(}{413,EL,--}{414,),)}{415,;,;}
{417,M,--} -> 
{421,E2,--} -> {420,num,7}
{422,E1,--} -> {421,E2,--}
{423,E,--} -> {422,E1,--}
{425,S,--} -> {418,id,e1}{419,=,=}{423,E,--}{424,;,;}
{426,M,--} -> 
{430,E2,--} -> {429,id,e2}
{431,E1,--} -> {430,E2,--}
{432,E,--} -> {431,E1,--}
{434,S,--} -> {427,id,a}{428,=,=}{432,E,--}{433,;,;}
{435,M,--} -> 
{439,E2,--} -> {438,num,0}
{440,E1,--} -> {439,E2,--}
{441,E,--} -> {440,E1,--}
{443,L,--} -> {436,id,a}{437,[,[}{441,E,--}{442,],]}
{446,E2,--} -> {445,num,1}
{447,E1,--} -> {446,E2,--}
{448,E,--} -> {447,E1,--}
{450,S,--} -> {443,L,--}{444,=,=}{448,E,--}{449,;,;}
{451,M,--} -> 
{455,E2,--} -> {454,num,9}
{456,E1,--} -> {455,E2,--}
{457,E,--} -> {456,E1,--}
{459,L,--} -> {452,id,e3}{453,[,[}{457,E,--}{458,],]}
{462,E2,--} -> {461,num,1}
{463,E1,--} -> {462,E2,--}
{464,E,--} -> {463,E1,--}
{466,S,--} -> {459,L,--}{460,=,=}{464,E,--}{465,;,;}
{467,M,--} -> 
{471,E2,--} -> {470,id,a}
{472,E1,--} -> {471,E2,--}
{473,E,--} -> {472,E1,--}
{476,E2,--} -> {475,id,arr}
{477,E1,--} -> {476,E2,--}
{478,E,--} -> {473,E,--}{474,+,+}{477,E1,--}
{480,S,--} -> {468,id,a}{469,=,=}{478,E,--}{479,;,;}
{481,S,--} -> {466,S,--}{467,M,--}{480,S,--}
{482,S,--} -> {450,S,--}{451,M,--}{481,S,--}
{483,S,--} -> {434,S,--}{435,M,--}{482,S,--}
{484,S,--} -> {425,S,--}{426,M,--}{483,S,--}
{485,S,--} -> {416,S,--}{417,M,--}{484,S,--}
{486,S,--} -> {383,S,--}{384,M,--}{485,S,--}
{487,S,--} -> {369,S,--}{370,M,--}{486,S,--}
{488,S,--} -> {346,S,--}{347,M,--}{487,S,--}
{489,S,--} -> {323,S,--}{324,M,--}{488,S,--}
{490,S,--} -> {226,S,--}{227,M,--}{489,S,--}
{492,D,--} -> {19,proc,proc}{20,id,fuction2}{21,;,;}{22,N1,--}{23,begin,begin}{149,D,--}{490,S,--}{491,end,end}
{493,D,--} -> {18,D,--}{492,D,--}
{494,D,--} -> {11,D,--}{493,D,--}
{498,E2,--} -> {497,num,1}
{499,E1,--} -> {498,E2,--}
{500,E,--} -> {499,E1,--}
{502,S,--} -> {495,id,f11}{496,=,=}{500,E,--}{501,;,;}
{503,M,--} -> 
{508,E2,--} -> {507,num,1}
{509,E1,--} -> {508,E2,--}
{510,E,--} -> {509,E1,--}
{511,EL,--} -> {510,E,--}
{514,E2,--} -> {513,num,2}
{515,E1,--} -> {514,E2,--}
{516,E,--} -> {515,E1,--}
{519,E2,--} -> {518,num,1}
{520,E1,--} -> {519,E2,--}
{521,E,--} -> {516,E,--}{517,+,+}{520,E1,--}
{522,EL,--} -> {511,EL,--}{512,,,,}{521,E,--}
{525,E2,--} -> {524,id,a}
{526,E1,--} -> {525,E2,--}
{529,E2,--} -> {528,id,b}
{530,E1,--} -> {526,E1,--}{527,*,*}{529,E2,--}
{531,E,--} -> {530,E1,--}
{532,EL,--} -> {522,EL,--}{523,,,,}{531,E,--}
{535,S,--} -> {504,call,call}{505,id,fuction2}{506,(,(}{532,EL,--}{533,),)}{534,;,;}
{536,S,--} -> {502,S,--}{503,M,--}{535,S,--}
{538,P,--} -> {0,proc,proc}{1,id,fuction1}{2,;,;}{3,M0,--}{4,begin,begin}{494,D,--}{536,S,--}{537,end,end}
